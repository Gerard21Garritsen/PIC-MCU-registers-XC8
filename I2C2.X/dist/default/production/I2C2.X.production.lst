

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Sun May 03 23:39:07 2020

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	text0,global,reloc=2,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	text4,global,reloc=2,class=CODE,delta=1
    12                           	psect	text5,global,reloc=2,class=CODE,delta=1
    13                           	psect	text6,global,reloc=2,class=CODE,delta=1
    14                           	psect	text7,global,reloc=2,class=CODE,delta=1
    15                           	psect	text8,global,reloc=2,class=CODE,delta=1
    16                           	psect	text9,global,reloc=2,class=CODE,delta=1
    17                           	psect	text10,global,reloc=2,class=CODE,delta=1
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    20  0000                     _BAUDCONbits	set	4024
    21  0000                     _PIR1bits	set	3998
    22  0000                     _RCREG	set	4014
    23  0000                     _RCSTAbits	set	4011
    24  0000                     _SPBRG	set	4015
    25  0000                     _SSPBUF	set	4041
    26  0000                     _SSPCON1	set	4038
    27  0000                     _SSPCON1bits	set	4038
    28  0000                     _SSPCON2	set	4037
    29  0000                     _SSPCON2bits	set	4037
    30  0000                     _SSPSTAT	set	4039
    31  0000                     _SSPSTATbits	set	4039
    32  0000                     _TRISBbits	set	3987
    33  0000                     _TRISCbits	set	3988
    34  0000                     _TXREG	set	4013
    35  0000                     _TXSTAbits	set	4012
    36                           
    37 ;;
    38 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
    39 ;;
    40 ;; *************** function _main *****************
    41 ;; Defined at:
    42 ;;		line 9 in file "Main.c"
    43 ;; Parameters:    Size  Location     Type
    44 ;;		None
    45 ;; Auto vars:     Size  Location     Type
    46 ;;  i               1   39[COMRAM] unsigned char 
    47 ;;  Data           13   26[COMRAM] unsigned char [13]
    48 ;; Return value:  Size  Location     Type
    49 ;;		None               void
    50 ;; Registers used:
    51 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
    52 ;; Tracked objects:
    53 ;;		On entry : 0/0
    54 ;;		On exit  : 0/0
    55 ;;		Unchanged: 0/0
    56 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
    57 ;;      Params:         0       0       0       0       0       0       0       0       0
    58 ;;      Locals:        14       0       0       0       0       0       0       0       0
    59 ;;      Temps:          1       0       0       0       0       0       0       0       0
    60 ;;      Totals:        15       0       0       0       0       0       0       0       0
    61 ;;Total ram usage:       15 bytes
    62 ;; Hardware stack levels required when called:    3
    63 ;; This function calls:
    64 ;;		_EUSART_Init
    65 ;;		_EUSART_String
    66 ;;		_I2C_Init
    67 ;;		_readsData
    68 ;; This function is called by:
    69 ;;		Startup code after reset
    70 ;; This function uses a non-reentrant model
    71 ;;
    72                           
    73                           	psect	text0
    74  007DF2                     __ptext0:
    75                           	opt stack 0
    76  007DF2                     _main:
    77                           	opt stack 28
    78                           
    79                           ;Main.c: 10: char Data[13];
    80                           ;Main.c: 11: EUSART_Init(4E6,9600);
    81                           
    82                           ;incstack = 0
    83  007DF2  0E00               	movlw	0
    84  007DF4  6E0E               	movwf	EUSART_Init@FOSC,c
    85  007DF6  0E09               	movlw	9
    86  007DF8  6E0F               	movwf	EUSART_Init@FOSC+1,c
    87  007DFA  0E3D               	movlw	61
    88  007DFC  6E10               	movwf	EUSART_Init@FOSC+2,c
    89  007DFE  0E00               	movlw	0
    90  007E00  6E11               	movwf	EUSART_Init@FOSC+3,c
    91  007E02  0E80               	movlw	128
    92  007E04  6E12               	movwf	EUSART_Init@BAUD,c
    93  007E06  0E25               	movlw	37
    94  007E08  6E13               	movwf	EUSART_Init@BAUD+1,c
    95  007E0A  0E00               	movlw	0
    96  007E0C  6E14               	movwf	EUSART_Init@BAUD+2,c
    97  007E0E  0E00               	movlw	0
    98  007E10  6E15               	movwf	EUSART_Init@BAUD+3,c
    99  007E12  ECCC  F03E         	call	_EUSART_Init	;wreg free
   100                           
   101                           ;Main.c: 12: I2C_Init(0b00001000,0b00000000);
   102  007E16  0E00               	movlw	0
   103  007E18  6E03               	movwf	I2C_Init@speed,c
   104  007E1A  0E08               	movlw	8
   105  007E1C  EC5B  F03E         	call	_I2C_Init
   106                           
   107                           ;Main.c: 14: readsData(0x0000,0x000A,Data);
   108  007E20  0E00               	movlw	0
   109  007E22  6E04               	movwf	readsData@AddressStart+1,c
   110  007E24  0E00               	movlw	0
   111  007E26  6E03               	movwf	readsData@AddressStart,c
   112  007E28  0E00               	movlw	0
   113  007E2A  6E06               	movwf	readsData@NumData+1,c
   114  007E2C  0E0A               	movlw	10
   115  007E2E  6E05               	movwf	readsData@NumData,c
   116  007E30  0E1B               	movlw	low main@Data
   117  007E32  6E07               	movwf	readsData@value,c
   118  007E34  0E00               	movlw	high main@Data
   119  007E36  6E08               	movwf	readsData@value+1,c
   120  007E38  EC7D  F03F         	call	_readsData	;wreg free
   121  007E3C  D000               	goto	l1055
   122  007E3E                     l1055:
   123                           
   124                           ;Main.c: 17: EUSART_String(Data);
   125  007E3E  0E1B               	movlw	low main@Data
   126  007E40  6E02               	movwf	EUSART_String@Data,c
   127  007E42  0E00               	movlw	high main@Data
   128  007E44  6E03               	movwf	EUSART_String@Data+1,c
   129  007E46  EC8D  F03E         	call	_EUSART_String	;wreg free
   130                           
   131                           ;Main.c: 18: for(uint8_t i = 0; i < 10; i++){
   132  007E4A  0E00               	movlw	0
   133  007E4C  6E28               	movwf	main@i,c
   134  007E4E                     l1059:
   135  007E4E  0E09               	movlw	9
   136  007E50  6428               	cpfsgt	main@i,c
   137  007E52  D001               	goto	l1063
   138  007E54  D7F4               	goto	l1055
   139  007E56                     l1063:
   140                           
   141                           ;Main.c: 19: _delay((unsigned long)((100)*(4E6/4000.0)));
   142  007E56  0E82               	movlw	130
   143  007E58  6E1A               	movwf	??_main& (0+255),c
   144  007E5A  0EDE               	movlw	222
   145  007E5C                     u507:
   146  007E5C  2EE8               	decfsz	wreg,f,c
   147  007E5E  D7FE               	goto	u507
   148  007E60  2E1A               	decfsz	??_main& (0+255),f,c
   149  007E62  D7FC               	goto	u507
   150  007E64  2A28               	incf	main@i,f,c
   151  007E66  D7F3               	goto	l1059
   152  007E68  D7EA               	goto	l1055
   153  007E6A  EF00  F000         	goto	start
   154  007E6E                     __end_of_main:
   155                           	opt stack 0
   156                           wreg	equ	0xFE8
   157                           
   158                           	psect	cinit
   159  007CA2                     __pcinit:
   160                           	opt stack 0
   161  007CA2                     start_initialization:
   162                           	opt stack 0
   163  007CA2                     __initialization:
   164                           	opt stack 0
   165  007CA2                     end_of_initialization:
   166                           	opt stack 0
   167  007CA2                     __end_of__initialization:
   168                           	opt stack 0
   169  007CA2  0100               	movlb	0
   170  007CA4  EFF9  F03E         	goto	_main	;jump to C main() function
   171                           wreg	equ	0xFE8
   172                           
   173                           	psect	cstackCOMRAM
   174  000001                     __pcstackCOMRAM:
   175                           	opt stack 0
   176  000001                     ??_IdleI2C:
   177  000001                     ?___lldiv:
   178                           	opt stack 0
   179  000001                     EUSART_Char@Caracter:
   180                           	opt stack 0
   181  000001                     OpenI2C@slew:
   182                           	opt stack 0
   183  000001                     ___lldiv@dividend:
   184                           	opt stack 0
   185                           
   186                           ; 4 bytes @ 0x0
   187  000001                     	ds	1
   188  000002                     OpenI2C@sync_mode:
   189                           	opt stack 0
   190  000002                     WriteI2C@data_out:
   191                           	opt stack 0
   192  000002                     EUSART_String@Data:
   193                           	opt stack 0
   194                           
   195                           ; 2 bytes @ 0x1
   196  000002                     	ds	1
   197  000003                     I2C_Init@speed:
   198                           	opt stack 0
   199  000003                     readsData@AddressStart:
   200                           	opt stack 0
   201                           
   202                           ; 2 bytes @ 0x2
   203  000003                     	ds	1
   204  000004                     I2C_Init@modo:
   205                           	opt stack 0
   206                           
   207                           ; 1 bytes @ 0x3
   208  000004                     	ds	1
   209  000005                     readsData@NumData:
   210                           	opt stack 0
   211  000005                     ___lldiv@divisor:
   212                           	opt stack 0
   213                           
   214                           ; 4 bytes @ 0x4
   215  000005                     	ds	2
   216  000007                     readsData@value:
   217                           	opt stack 0
   218                           
   219                           ; 2 bytes @ 0x6
   220  000007                     	ds	2
   221  000009                     ??_readsData:
   222  000009                     ___lldiv@quotient:
   223                           	opt stack 0
   224                           
   225                           ; 4 bytes @ 0x8
   226  000009                     	ds	4
   227  00000D                     readsData@i:
   228                           	opt stack 0
   229  00000D                     ___lldiv@counter:
   230                           	opt stack 0
   231                           
   232                           ; 1 bytes @ 0xC
   233  00000D                     	ds	1
   234  00000E                     EUSART_Init@FOSC:
   235                           	opt stack 0
   236                           
   237                           ; 4 bytes @ 0xD
   238  00000E                     	ds	4
   239  000012                     EUSART_Init@BAUD:
   240                           	opt stack 0
   241                           
   242                           ; 4 bytes @ 0x11
   243  000012                     	ds	4
   244  000016                     ??_EUSART_Init:
   245                           
   246                           ; 0 bytes @ 0x15
   247  000016                     	ds	4
   248  00001A                     ??_main:
   249                           
   250                           ; 0 bytes @ 0x19
   251  00001A                     	ds	1
   252  00001B                     main@Data:
   253                           	opt stack 0
   254                           
   255                           ; 13 bytes @ 0x1A
   256  00001B                     	ds	13
   257  000028                     main@i:
   258                           	opt stack 0
   259                           
   260                           ; 1 bytes @ 0x27
   261  000028                     	ds	1
   262                           wreg	equ	0xFE8
   263                           
   264 ;; *************** function _readsData *****************
   265 ;; Defined at:
   266 ;;		line 44 in file "24LC256.h"
   267 ;; Parameters:    Size  Location     Type
   268 ;;  AddressStart    2    2[COMRAM] unsigned int 
   269 ;;  NumData         2    4[COMRAM] unsigned int 
   270 ;;  value           2    6[COMRAM] PTR unsigned char 
   271 ;;		 -> main@Data(13), 
   272 ;; Auto vars:     Size  Location     Type
   273 ;;  i               1   12[COMRAM] unsigned char 
   274 ;; Return value:  Size  Location     Type
   275 ;;		None               void
   276 ;; Registers used:
   277 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   278 ;; Tracked objects:
   279 ;;		On entry : 0/0
   280 ;;		On exit  : 0/0
   281 ;;		Unchanged: 0/0
   282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   283 ;;      Params:         6       0       0       0       0       0       0       0       0
   284 ;;      Locals:         1       0       0       0       0       0       0       0       0
   285 ;;      Temps:          4       0       0       0       0       0       0       0       0
   286 ;;      Totals:        11       0       0       0       0       0       0       0       0
   287 ;;Total ram usage:       11 bytes
   288 ;; Hardware stack levels used:    1
   289 ;; Hardware stack levels required when called:    2
   290 ;; This function calls:
   291 ;;		_IdleI2C
   292 ;;		_ReadI2C
   293 ;;		_WriteI2C
   294 ;; This function is called by:
   295 ;;		_main
   296 ;; This function uses a non-reentrant model
   297 ;;
   298                           
   299                           	psect	text1
   300  007EFA                     __ptext1:
   301                           	opt stack 0
   302  007EFA                     _readsData:
   303                           	opt stack 28
   304                           
   305                           ;24LC256.h: 45: uint8_t i = 0;
   306                           
   307                           ;incstack = 0
   308  007EFA  0E00               	movlw	0
   309  007EFC  6E0D               	movwf	readsData@i,c
   310                           
   311                           ;24LC256.h: 46: IdleI2C();
   312  007EFE  EC64  F03E         	call	_IdleI2C	;wreg free
   313                           
   314                           ;24LC256.h: 47: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
   315  007F02  80C5               	bsf	4037,0,c	;volatile
   316  007F04  D000               	goto	l64
   317  007F06                     l64:
   318  007F06  B0C5               	btfsc	4037,0,c	;volatile
   319  007F08  D7FE               	goto	l64
   320                           
   321                           ;24LC256.h: 48: WriteI2C(0xA0);
   322  007F0A  0EA0               	movlw	160
   323  007F0C  ECA0  F03E         	call	_WriteI2C
   324                           
   325                           ;24LC256.h: 49: WriteI2C(AddressStart>>8);
   326  007F10  5004               	movf	readsData@AddressStart+1,w,c
   327  007F12  ECA0  F03E         	call	_WriteI2C
   328                           
   329                           ;24LC256.h: 50: WriteI2C(AddressStart);
   330  007F16  5003               	movf	readsData@AddressStart,w,c
   331  007F18  ECA0  F03E         	call	_WriteI2C
   332                           
   333                           ;24LC256.h: 51: SSPCON2bits.RSEN=1;while(SSPCON2bits.RSEN);
   334  007F1C  82C5               	bsf	4037,1,c	;volatile
   335  007F1E  D000               	goto	l67
   336  007F20                     l67:
   337  007F20  B2C5               	btfsc	4037,1,c	;volatile
   338  007F22  D7FE               	goto	l67
   339                           
   340                           ;24LC256.h: 52: WriteI2C(0xA1);
   341  007F24  0EA1               	movlw	161
   342  007F26  ECA0  F03E         	call	_WriteI2C
   343                           
   344                           ;24LC256.h: 53: while(AddressStart < NumData){
   345  007F2A  D037               	goto	l1025
   346  007F2C                     l1015:
   347                           
   348                           ;24LC256.h: 54: value[i] = ReadI2C();
   349  007F2C  500D               	movf	readsData@i,w,c
   350  007F2E  0D01               	mullw	1
   351  007F30  50F3               	movf	prodl,w,c
   352  007F32  2407               	addwf	readsData@value,w,c
   353  007F34  6ED9               	movwf	fsr2l,c
   354  007F36  50F4               	movf	prodh,w,c
   355  007F38  2008               	addwfc	readsData@value+1,w,c
   356  007F3A  6EDA               	movwf	fsr2h,c
   357  007F3C  EC7C  F03E         	call	_ReadI2C	;wreg free
   358  007F40  6EDF               	movwf	indf2,c
   359                           
   360                           ;24LC256.h: 55: _delay((unsigned long)((5)*(4E6/4000.0)));
   361  007F42  0E07               	movlw	7
   362  007F44  6E09               	movwf	??_readsData& (0+255),c
   363  007F46  0E7D               	movlw	125
   364  007F48                     u517:
   365  007F48  2EE8               	decfsz	wreg,f,c
   366  007F4A  D7FE               	goto	u517
   367  007F4C  2E09               	decfsz	??_readsData& (0+255),f,c
   368  007F4E  D7FC               	goto	u517
   369  007F50  F000               	nop	
   370                           
   371                           ;24LC256.h: 56: if(AddressStart < NumData-1){
   372  007F52  0EFF               	movlw	255
   373  007F54  6E09               	movwf	??_readsData& (0+255),c
   374  007F56  0EFF               	movlw	255
   375  007F58  6E0A               	movwf	(??_readsData+1)& (0+255),c
   376  007F5A  C005  F00B         	movff	readsData@NumData,??_readsData+2
   377  007F5E  C006  F00C         	movff	readsData@NumData+1,??_readsData+3
   378  007F62  5009               	movf	??_readsData,w,c
   379  007F64  260B               	addwf	??_readsData+2,f,c
   380  007F66  500A               	movf	??_readsData+1,w,c
   381  007F68  220C               	addwfc	??_readsData+3,f,c
   382  007F6A  500B               	movf	??_readsData+2,w,c
   383  007F6C  5C03               	subwf	readsData@AddressStart,w,c
   384  007F6E  500C               	movf	??_readsData+3,w,c
   385  007F70  5804               	subwfb	readsData@AddressStart+1,w,c
   386  007F72  B0D8               	btfsc	status,0,c
   387  007F74  D007               	goto	l72
   388                           
   389                           ;24LC256.h: 57: SSPCON2bits.ACKDT=0;SSPCON2bits.ACKEN=1;while(SSPCON2bits.ACKEN);
   390  007F76  9AC5               	bcf	4037,5,c	;volatile
   391  007F78  88C5               	bsf	4037,4,c	;volatile
   392  007F7A  D000               	goto	l73
   393  007F7C                     l73:
   394  007F7C  A8C5               	btfss	4037,4,c	;volatile
   395  007F7E  D009               	goto	l1023
   396  007F80  D7FD               	goto	l73
   397                           
   398                           ;24LC256.h: 58: }
   399  007F82  D007               	goto	l1023
   400  007F84                     l72:
   401                           
   402                           ;24LC256.h: 59: else{
   403                           ;24LC256.h: 60: SSPCON2bits.ACKDT=1;SSPCON2bits.ACKEN=1;while(SSPCON2bits.ACKEN);
   404  007F84  8AC5               	bsf	4037,5,c	;volatile
   405  007F86  88C5               	bsf	4037,4,c	;volatile
   406  007F88  D000               	goto	l77
   407  007F8A                     l77:
   408  007F8A  A8C5               	btfss	4037,4,c	;volatile
   409  007F8C  D002               	goto	l1023
   410  007F8E  D7FD               	goto	l77
   411  007F90  D000               	goto	l1023
   412  007F92                     l1023:
   413                           
   414                           ;24LC256.h: 61: }
   415                           ;24LC256.h: 62: AddressStart++;
   416  007F92  4A03               	infsnz	readsData@AddressStart,f,c
   417  007F94  2A04               	incf	readsData@AddressStart+1,f,c
   418                           
   419                           ;24LC256.h: 63: i++;
   420  007F96  2A0D               	incf	readsData@i,f,c
   421  007F98  D000               	goto	l1025
   422  007F9A                     l1025:
   423  007F9A  5005               	movf	readsData@NumData,w,c
   424  007F9C  5C03               	subwf	readsData@AddressStart,w,c
   425  007F9E  5006               	movf	readsData@NumData+1,w,c
   426  007FA0  5804               	subwfb	readsData@AddressStart+1,w,c
   427  007FA2  A0D8               	btfss	status,0,c
   428  007FA4  D7C3               	goto	l1015
   429                           
   430                           ;24LC256.h: 64: }
   431                           ;24LC256.h: 65: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
   432  007FA6  84C5               	bsf	4037,2,c	;volatile
   433  007FA8  D000               	goto	l81
   434  007FAA                     l81:
   435  007FAA  B4C5               	btfsc	4037,2,c	;volatile
   436  007FAC  D7FE               	goto	l81
   437                           
   438                           ;24LC256.h: 66: value[i] = '\n';
   439  007FAE  500D               	movf	readsData@i,w,c
   440  007FB0  0D01               	mullw	1
   441  007FB2  50F3               	movf	prodl,w,c
   442  007FB4  2407               	addwf	readsData@value,w,c
   443  007FB6  6ED9               	movwf	fsr2l,c
   444  007FB8  50F4               	movf	prodh,w,c
   445  007FBA  2008               	addwfc	readsData@value+1,w,c
   446  007FBC  6EDA               	movwf	fsr2h,c
   447  007FBE  0E0A               	movlw	10
   448  007FC0  6EDF               	movwf	indf2,c
   449                           
   450                           ;24LC256.h: 67: value[i+1] = '\r';
   451  007FC2  500D               	movf	readsData@i,w,c
   452  007FC4  6E09               	movwf	??_readsData& (0+255),c
   453  007FC6  6A0A               	clrf	(??_readsData+1)& (0+255),c
   454  007FC8  0E01               	movlw	1
   455  007FCA  2609               	addwf	??_readsData,f,c
   456  007FCC  0E00               	movlw	0
   457  007FCE  220A               	addwfc	??_readsData+1,f,c
   458  007FD0  5009               	movf	??_readsData,w,c
   459  007FD2  2407               	addwf	readsData@value,w,c
   460  007FD4  6ED9               	movwf	fsr2l,c
   461  007FD6  500A               	movf	??_readsData+1,w,c
   462  007FD8  2008               	addwfc	readsData@value+1,w,c
   463  007FDA  6EDA               	movwf	fsr2h,c
   464  007FDC  0E0D               	movlw	13
   465  007FDE  6EDF               	movwf	indf2,c
   466                           
   467                           ;24LC256.h: 68: value[i+2] = '\0';
   468  007FE0  500D               	movf	readsData@i,w,c
   469  007FE2  6E09               	movwf	??_readsData& (0+255),c
   470  007FE4  6A0A               	clrf	(??_readsData+1)& (0+255),c
   471  007FE6  0E02               	movlw	2
   472  007FE8  2609               	addwf	??_readsData,f,c
   473  007FEA  0E00               	movlw	0
   474  007FEC  220A               	addwfc	??_readsData+1,f,c
   475  007FEE  5009               	movf	??_readsData,w,c
   476  007FF0  2407               	addwf	readsData@value,w,c
   477  007FF2  6ED9               	movwf	fsr2l,c
   478  007FF4  500A               	movf	??_readsData+1,w,c
   479  007FF6  2008               	addwfc	readsData@value+1,w,c
   480  007FF8  6EDA               	movwf	fsr2h,c
   481  007FFA  0E00               	movlw	0
   482  007FFC  6EDF               	movwf	indf2,c
   483  007FFE  0012               	return		;funcret
   484  008000                     __end_of_readsData:
   485                           	opt stack 0
   486                           prodh	equ	0xFF4
   487                           prodl	equ	0xFF3
   488                           wreg	equ	0xFE8
   489                           indf2	equ	0xFDF
   490                           fsr2h	equ	0xFDA
   491                           fsr2l	equ	0xFD9
   492                           status	equ	0xFD8
   493                           
   494 ;; *************** function _WriteI2C *****************
   495 ;; Defined at:
   496 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\i2c\i2c_writ.c"
   497 ;; Parameters:    Size  Location     Type
   498 ;;  data_out        1    wreg     unsigned char 
   499 ;; Auto vars:     Size  Location     Type
   500 ;;  data_out        1    1[COMRAM] unsigned char 
   501 ;; Return value:  Size  Location     Type
   502 ;;                  1    wreg      char 
   503 ;; Registers used:
   504 ;;		wreg, status,2, status,0, cstack
   505 ;; Tracked objects:
   506 ;;		On entry : 0/0
   507 ;;		On exit  : 0/0
   508 ;;		Unchanged: 0/0
   509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   510 ;;      Params:         0       0       0       0       0       0       0       0       0
   511 ;;      Locals:         1       0       0       0       0       0       0       0       0
   512 ;;      Temps:          0       0       0       0       0       0       0       0       0
   513 ;;      Totals:         1       0       0       0       0       0       0       0       0
   514 ;;Total ram usage:        1 bytes
   515 ;; Hardware stack levels used:    1
   516 ;; Hardware stack levels required when called:    1
   517 ;; This function calls:
   518 ;;		_IdleI2C
   519 ;; This function is called by:
   520 ;;		_readsData
   521 ;;		_writeData
   522 ;;		_readData
   523 ;; This function uses a non-reentrant model
   524 ;;
   525                           
   526                           	psect	text2
   527  007D40                     __ptext2:
   528                           	opt stack 0
   529  007D40                     _WriteI2C:
   530                           	opt stack 28
   531                           
   532                           ;incstack = 0
   533                           ;WriteI2C@data_out stored from wreg
   534  007D40  6E02               	movwf	WriteI2C@data_out,c
   535  007D42  C002  FFC9         	movff	WriteI2C@data_out,4041	;volatile
   536  007D46  BEC6               	btfsc	4038,7,c	;volatile
   537  007D48  D026               	goto	l177
   538  007D4A  D001               	goto	l809
   539                           
   540                           ;	Return value of _WriteI2C is never used
   541  007D4C  D024               	goto	l177
   542  007D4E                     l809:
   543  007D4E  50C6               	movf	4038,w,c	;volatile
   544  007D50  0B0F               	andlw	15
   545  007D52  0A08               	xorlw	8
   546  007D54  B4D8               	btfsc	status,2,c
   547  007D56  D00D               	goto	l821
   548  007D58  50C6               	movf	4038,w,c	;volatile
   549  007D5A  0B0F               	andlw	15
   550  007D5C  0A0B               	xorlw	11
   551  007D5E  B4D8               	btfsc	status,2,c
   552  007D60  D008               	goto	l821
   553  007D62  88C6               	bsf	4038,4,c	;volatile
   554  007D64  D000               	goto	l180
   555  007D66                     l180:
   556  007D66  A69E               	btfss	3998,3,c	;volatile
   557  007D68  D7FE               	goto	l180
   558  007D6A  B4C7               	btfsc	4039,2,c	;volatile
   559  007D6C  D014               	goto	l177
   560  007D6E  50C7               	movf	4039,w,c	;volatile
   561                           
   562                           ;	Return value of _WriteI2C is never used
   563                           
   564                           ;	Return value of _WriteI2C is never used
   565  007D70  D012               	goto	l177
   566  007D72                     l821:
   567  007D72  50C6               	movf	4038,w,c	;volatile
   568  007D74  0B0F               	andlw	15
   569  007D76  0A08               	xorlw	8
   570  007D78  B4D8               	btfsc	status,2,c
   571  007D7A  D007               	goto	l189
   572  007D7C  50C6               	movf	4038,w,c	;volatile
   573  007D7E  0B0F               	andlw	15
   574  007D80  0A0B               	xorlw	11
   575  007D82  B4D8               	btfsc	status,2,c
   576  007D84  D002               	goto	l189
   577  007D86  D007               	goto	l177
   578  007D88  D000               	goto	l189
   579  007D8A                     l189:
   580  007D8A  B0C7               	btfsc	4039,0,c	;volatile
   581  007D8C  D7FE               	goto	l189
   582  007D8E  EC64  F03E         	call	_IdleI2C	;wreg free
   583  007D92  50C5               	movf	4037,w,c	;volatile
   584                           
   585                           ;	Return value of _WriteI2C is never used
   586                           
   587                           ;	Return value of _WriteI2C is never used
   588  007D94  D000               	goto	l177
   589  007D96                     l177:
   590  007D96  0012               	return		;funcret
   591  007D98                     __end_of_WriteI2C:
   592                           	opt stack 0
   593                           prodh	equ	0xFF4
   594                           prodl	equ	0xFF3
   595                           wreg	equ	0xFE8
   596                           indf2	equ	0xFDF
   597                           fsr2h	equ	0xFDA
   598                           fsr2l	equ	0xFD9
   599                           status	equ	0xFD8
   600                           
   601 ;; *************** function _IdleI2C *****************
   602 ;; Defined at:
   603 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\i2c\i2c_idle.c"
   604 ;; Parameters:    Size  Location     Type
   605 ;;		None
   606 ;; Auto vars:     Size  Location     Type
   607 ;;		None
   608 ;; Return value:  Size  Location     Type
   609 ;;		None               void
   610 ;; Registers used:
   611 ;;		wreg, status,2, status,0
   612 ;; Tracked objects:
   613 ;;		On entry : 0/0
   614 ;;		On exit  : 0/0
   615 ;;		Unchanged: 0/0
   616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   617 ;;      Params:         0       0       0       0       0       0       0       0       0
   618 ;;      Locals:         0       0       0       0       0       0       0       0       0
   619 ;;      Temps:          1       0       0       0       0       0       0       0       0
   620 ;;      Totals:         1       0       0       0       0       0       0       0       0
   621 ;;Total ram usage:        1 bytes
   622 ;; Hardware stack levels used:    1
   623 ;; This function calls:
   624 ;;		Nothing
   625 ;; This function is called by:
   626 ;;		_readsData
   627 ;;		_WriteI2C
   628 ;;		_writeData
   629 ;;		_readData
   630 ;; This function uses a non-reentrant model
   631 ;;
   632                           
   633                           	psect	text3
   634  007CC8                     __ptext3:
   635                           	opt stack 0
   636  007CC8                     _IdleI2C:
   637                           	opt stack 28
   638                           
   639                           ;incstack = 0
   640  007CC8  D000               	goto	l785
   641  007CCA                     l785:
   642  007CCA  CFC5 F001          	movff	4037,??_IdleI2C	;volatile
   643  007CCE  0E1F               	movlw	31
   644  007CD0  1601               	andwf	??_IdleI2C,f,c
   645  007CD2  B4D8               	btfsc	status,2,c
   646  007CD4  B4C7               	btfsc	4039,2,c	;volatile
   647  007CD6  D7F9               	goto	l785
   648  007CD8  0012               	return		;funcret
   649  007CDA                     __end_of_IdleI2C:
   650                           	opt stack 0
   651                           prodh	equ	0xFF4
   652                           prodl	equ	0xFF3
   653                           wreg	equ	0xFE8
   654                           indf2	equ	0xFDF
   655                           fsr2h	equ	0xFDA
   656                           fsr2l	equ	0xFD9
   657                           status	equ	0xFD8
   658                           
   659 ;; *************** function _ReadI2C *****************
   660 ;; Defined at:
   661 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\i2c\i2c_read.c"
   662 ;; Parameters:    Size  Location     Type
   663 ;;		None
   664 ;; Auto vars:     Size  Location     Type
   665 ;;		None
   666 ;; Return value:  Size  Location     Type
   667 ;;                  1    wreg      unsigned char 
   668 ;; Registers used:
   669 ;;		wreg, status,2, status,0
   670 ;; Tracked objects:
   671 ;;		On entry : 0/0
   672 ;;		On exit  : 0/0
   673 ;;		Unchanged: 0/0
   674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   675 ;;      Params:         0       0       0       0       0       0       0       0       0
   676 ;;      Locals:         0       0       0       0       0       0       0       0       0
   677 ;;      Temps:          0       0       0       0       0       0       0       0       0
   678 ;;      Totals:         0       0       0       0       0       0       0       0       0
   679 ;;Total ram usage:        0 bytes
   680 ;; Hardware stack levels used:    1
   681 ;; This function calls:
   682 ;;		Nothing
   683 ;; This function is called by:
   684 ;;		_readsData
   685 ;;		_readData
   686 ;; This function uses a non-reentrant model
   687 ;;
   688                           
   689                           	psect	text4
   690  007CF8                     __ptext4:
   691                           	opt stack 0
   692  007CF8                     _ReadI2C:
   693                           	opt stack 29
   694                           
   695                           ;incstack = 0
   696  007CF8  50C6               	movf	4038,w,c	;volatile
   697  007CFA  0B0F               	andlw	15
   698  007CFC  0A08               	xorlw	8
   699  007CFE  B4D8               	btfsc	status,2,c
   700  007D00  D005               	goto	l155
   701  007D02  50C6               	movf	4038,w,c	;volatile
   702  007D04  0B0F               	andlw	15
   703  007D06  0A0B               	xorlw	11
   704  007D08  A4D8               	btfss	status,2,c
   705  007D0A  D002               	goto	l156
   706  007D0C                     l155:
   707  007D0C  86C5               	bsf	4037,3,c	;volatile
   708  007D0E  D000               	goto	l156
   709  007D10                     l156:
   710  007D10  A0C7               	btfss	4039,0,c	;volatile
   711  007D12  D7FE               	goto	l156
   712  007D14  50C9               	movf	4041,w,c	;volatile
   713  007D16  D000               	goto	l159
   714  007D18                     l159:
   715  007D18  0012               	return		;funcret
   716  007D1A                     __end_of_ReadI2C:
   717                           	opt stack 0
   718                           prodh	equ	0xFF4
   719                           prodl	equ	0xFF3
   720                           wreg	equ	0xFE8
   721                           indf2	equ	0xFDF
   722                           fsr2h	equ	0xFDA
   723                           fsr2l	equ	0xFD9
   724                           status	equ	0xFD8
   725                           
   726 ;; *************** function _I2C_Init *****************
   727 ;; Defined at:
   728 ;;		line 9 in file "24LC256.h"
   729 ;; Parameters:    Size  Location     Type
   730 ;;  modo            1    wreg     unsigned char 
   731 ;;  speed           1    2[COMRAM] unsigned char 
   732 ;; Auto vars:     Size  Location     Type
   733 ;;  modo            1    3[COMRAM] unsigned char 
   734 ;; Return value:  Size  Location     Type
   735 ;;		None               void
   736 ;; Registers used:
   737 ;;		wreg, status,2, status,0, cstack
   738 ;; Tracked objects:
   739 ;;		On entry : 0/0
   740 ;;		On exit  : 0/0
   741 ;;		Unchanged: 0/0
   742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   743 ;;      Params:         1       0       0       0       0       0       0       0       0
   744 ;;      Locals:         1       0       0       0       0       0       0       0       0
   745 ;;      Temps:          0       0       0       0       0       0       0       0       0
   746 ;;      Totals:         2       0       0       0       0       0       0       0       0
   747 ;;Total ram usage:        2 bytes
   748 ;; Hardware stack levels used:    1
   749 ;; Hardware stack levels required when called:    1
   750 ;; This function calls:
   751 ;;		_OpenI2C
   752 ;; This function is called by:
   753 ;;		_main
   754 ;; This function uses a non-reentrant model
   755 ;;
   756                           
   757                           	psect	text5
   758  007CB6                     __ptext5:
   759                           	opt stack 0
   760  007CB6                     _I2C_Init:
   761                           	opt stack 29
   762                           
   763                           ;incstack = 0
   764                           ;I2C_Init@modo stored from wreg
   765  007CB6  6E04               	movwf	I2C_Init@modo,c
   766                           
   767                           ;24LC256.h: 11: TRISBbits.RB0 = 1;
   768  007CB8  8093               	bsf	3987,0,c	;volatile
   769                           
   770                           ;24LC256.h: 12: TRISBbits.RB1 = 1;
   771  007CBA  8293               	bsf	3987,1,c	;volatile
   772                           
   773                           ;24LC256.h: 13: OpenI2C(modo,speed);
   774  007CBC  C003  F001         	movff	I2C_Init@speed,OpenI2C@slew
   775  007CC0  5004               	movf	I2C_Init@modo,w,c
   776  007CC2  EC6D  F03E         	call	_OpenI2C
   777  007CC6  0012               	return		;funcret
   778  007CC8                     __end_of_I2C_Init:
   779                           	opt stack 0
   780                           prodh	equ	0xFF4
   781                           prodl	equ	0xFF3
   782                           wreg	equ	0xFE8
   783                           indf2	equ	0xFDF
   784                           fsr2h	equ	0xFDA
   785                           fsr2l	equ	0xFD9
   786                           status	equ	0xFD8
   787                           
   788 ;; *************** function _OpenI2C *****************
   789 ;; Defined at:
   790 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\i2c\i2c_open.c"
   791 ;; Parameters:    Size  Location     Type
   792 ;;  sync_mode       1    wreg     unsigned char 
   793 ;;  slew            1    0[COMRAM] unsigned char 
   794 ;; Auto vars:     Size  Location     Type
   795 ;;  sync_mode       1    1[COMRAM] unsigned char 
   796 ;; Return value:  Size  Location     Type
   797 ;;		None               void
   798 ;; Registers used:
   799 ;;		wreg, status,2, status,0
   800 ;; Tracked objects:
   801 ;;		On entry : 0/0
   802 ;;		On exit  : 0/0
   803 ;;		Unchanged: 0/0
   804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   805 ;;      Params:         1       0       0       0       0       0       0       0       0
   806 ;;      Locals:         1       0       0       0       0       0       0       0       0
   807 ;;      Temps:          0       0       0       0       0       0       0       0       0
   808 ;;      Totals:         2       0       0       0       0       0       0       0       0
   809 ;;Total ram usage:        2 bytes
   810 ;; Hardware stack levels used:    1
   811 ;; This function calls:
   812 ;;		Nothing
   813 ;; This function is called by:
   814 ;;		_I2C_Init
   815 ;; This function uses a non-reentrant model
   816 ;;
   817                           
   818                           	psect	text6
   819  007CDA                     __ptext6:
   820                           	opt stack 0
   821  007CDA                     _OpenI2C:
   822                           	opt stack 29
   823                           
   824                           ;incstack = 0
   825                           ;OpenI2C@sync_mode stored from wreg
   826  007CDA  6E02               	movwf	OpenI2C@sync_mode,c
   827  007CDC  0E3F               	movlw	63
   828  007CDE  16C7               	andwf	4039,f,c	;volatile
   829  007CE0  0E00               	movlw	0
   830  007CE2  6EC6               	movwf	4038,c	;volatile
   831  007CE4  0E00               	movlw	0
   832  007CE6  6EC5               	movwf	4037,c	;volatile
   833  007CE8  5002               	movf	OpenI2C@sync_mode,w,c
   834  007CEA  12C6               	iorwf	4038,f,c	;volatile
   835  007CEC  5001               	movf	OpenI2C@slew,w,c
   836  007CEE  12C7               	iorwf	4039,f,c	;volatile
   837  007CF0  8293               	bsf	3987,1,c	;volatile
   838  007CF2  8093               	bsf	3987,0,c	;volatile
   839  007CF4  8AC6               	bsf	4038,5,c	;volatile
   840  007CF6  0012               	return		;funcret
   841  007CF8                     __end_of_OpenI2C:
   842                           	opt stack 0
   843                           prodh	equ	0xFF4
   844                           prodl	equ	0xFF3
   845                           wreg	equ	0xFE8
   846                           indf2	equ	0xFDF
   847                           fsr2h	equ	0xFDA
   848                           fsr2l	equ	0xFD9
   849                           status	equ	0xFD8
   850                           
   851 ;; *************** function _EUSART_String *****************
   852 ;; Defined at:
   853 ;;		line 23 in file "EUSART.h"
   854 ;; Parameters:    Size  Location     Type
   855 ;;  Data            2    1[COMRAM] PTR unsigned char 
   856 ;;		 -> main@Data(13), 
   857 ;; Auto vars:     Size  Location     Type
   858 ;;		None
   859 ;; Return value:  Size  Location     Type
   860 ;;		None               void
   861 ;; Registers used:
   862 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   863 ;; Tracked objects:
   864 ;;		On entry : 0/0
   865 ;;		On exit  : 0/0
   866 ;;		Unchanged: 0/0
   867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   868 ;;      Params:         2       0       0       0       0       0       0       0       0
   869 ;;      Locals:         0       0       0       0       0       0       0       0       0
   870 ;;      Temps:          0       0       0       0       0       0       0       0       0
   871 ;;      Totals:         2       0       0       0       0       0       0       0       0
   872 ;;Total ram usage:        2 bytes
   873 ;; Hardware stack levels used:    1
   874 ;; Hardware stack levels required when called:    1
   875 ;; This function calls:
   876 ;;		_EUSART_Char
   877 ;; This function is called by:
   878 ;;		_main
   879 ;; This function uses a non-reentrant model
   880 ;;
   881                           
   882                           	psect	text7
   883  007D1A                     __ptext7:
   884                           	opt stack 0
   885  007D1A                     _EUSART_String:
   886                           	opt stack 29
   887                           
   888                           ;EUSART.h: 24: while(*Data != '\0'){
   889                           
   890                           ;incstack = 0
   891  007D1A  D00A               	goto	l1049
   892  007D1C                     l1045:
   893                           
   894                           ;EUSART.h: 25: EUSART_Char(*Data);
   895  007D1C  C002  FFD9         	movff	EUSART_String@Data,fsr2l
   896  007D20  C003  FFDA         	movff	EUSART_String@Data+1,fsr2h
   897  007D24  50DF               	movf	indf2,w,c
   898  007D26  EC54  F03E         	call	_EUSART_Char
   899                           
   900                           ;EUSART.h: 26: *Data++;
   901  007D2A  4A02               	infsnz	EUSART_String@Data,f,c
   902  007D2C  2A03               	incf	EUSART_String@Data+1,f,c
   903  007D2E  D000               	goto	l1049
   904  007D30                     l1049:
   905  007D30  C002  FFD9         	movff	EUSART_String@Data,fsr2l
   906  007D34  C003  FFDA         	movff	EUSART_String@Data+1,fsr2h
   907  007D38  50DF               	movf	indf2,w,c
   908  007D3A  A4D8               	btfss	status,2,c
   909  007D3C  D7EF               	goto	l1045
   910  007D3E  0012               	return		;funcret
   911  007D40                     __end_of_EUSART_String:
   912                           	opt stack 0
   913                           prodh	equ	0xFF4
   914                           prodl	equ	0xFF3
   915                           wreg	equ	0xFE8
   916                           indf2	equ	0xFDF
   917                           fsr2h	equ	0xFDA
   918                           fsr2l	equ	0xFD9
   919                           status	equ	0xFD8
   920                           
   921 ;; *************** function _EUSART_Char *****************
   922 ;; Defined at:
   923 ;;		line 30 in file "EUSART.h"
   924 ;; Parameters:    Size  Location     Type
   925 ;;  Caracter        1    wreg     unsigned char 
   926 ;; Auto vars:     Size  Location     Type
   927 ;;  Caracter        1    0[COMRAM] unsigned char 
   928 ;; Return value:  Size  Location     Type
   929 ;;		None               void
   930 ;; Registers used:
   931 ;;		wreg
   932 ;; Tracked objects:
   933 ;;		On entry : 0/0
   934 ;;		On exit  : 0/0
   935 ;;		Unchanged: 0/0
   936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   937 ;;      Params:         0       0       0       0       0       0       0       0       0
   938 ;;      Locals:         1       0       0       0       0       0       0       0       0
   939 ;;      Temps:          0       0       0       0       0       0       0       0       0
   940 ;;      Totals:         1       0       0       0       0       0       0       0       0
   941 ;;Total ram usage:        1 bytes
   942 ;; Hardware stack levels used:    1
   943 ;; This function calls:
   944 ;;		Nothing
   945 ;; This function is called by:
   946 ;;		_EUSART_String
   947 ;; This function uses a non-reentrant model
   948 ;;
   949                           
   950                           	psect	text8
   951  007CA8                     __ptext8:
   952                           	opt stack 0
   953  007CA8                     _EUSART_Char:
   954                           	opt stack 29
   955                           
   956                           ;incstack = 0
   957                           ;EUSART_Char@Caracter stored from wreg
   958  007CA8  6E01               	movwf	EUSART_Char@Caracter,c
   959                           
   960                           ;EUSART.h: 31: while(TXSTAbits.TRMT == 0);
   961  007CAA  D000               	goto	l99
   962  007CAC                     l99:
   963  007CAC  A2AC               	btfss	4012,1,c	;volatile
   964  007CAE  D7FE               	goto	l99
   965                           
   966                           ;EUSART.h: 32: TXREG = Caracter;
   967  007CB0  C001  FFAD         	movff	EUSART_Char@Caracter,4013	;volatile
   968  007CB4  0012               	return		;funcret
   969  007CB6                     __end_of_EUSART_Char:
   970                           	opt stack 0
   971                           prodh	equ	0xFF4
   972                           prodl	equ	0xFF3
   973                           wreg	equ	0xFE8
   974                           indf2	equ	0xFDF
   975                           fsr2h	equ	0xFDA
   976                           fsr2l	equ	0xFD9
   977                           status	equ	0xFD8
   978                           
   979 ;; *************** function _EUSART_Init *****************
   980 ;; Defined at:
   981 ;;		line 9 in file "EUSART.h"
   982 ;; Parameters:    Size  Location     Type
   983 ;;  FOSC            4   13[COMRAM] unsigned long 
   984 ;;  BAUD            4   17[COMRAM] unsigned long 
   985 ;; Auto vars:     Size  Location     Type
   986 ;;		None
   987 ;; Return value:  Size  Location     Type
   988 ;;		None               void
   989 ;; Registers used:
   990 ;;		wreg, status,2, status,0, cstack
   991 ;; Tracked objects:
   992 ;;		On entry : 0/0
   993 ;;		On exit  : 0/0
   994 ;;		Unchanged: 0/0
   995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   996 ;;      Params:         8       0       0       0       0       0       0       0       0
   997 ;;      Locals:         0       0       0       0       0       0       0       0       0
   998 ;;      Temps:          4       0       0       0       0       0       0       0       0
   999 ;;      Totals:        12       0       0       0       0       0       0       0       0
  1000 ;;Total ram usage:       12 bytes
  1001 ;; Hardware stack levels used:    1
  1002 ;; Hardware stack levels required when called:    1
  1003 ;; This function calls:
  1004 ;;		___lldiv
  1005 ;; This function is called by:
  1006 ;;		_main
  1007 ;; This function uses a non-reentrant model
  1008 ;;
  1009                           
  1010                           	psect	text9
  1011  007D98                     __ptext9:
  1012                           	opt stack 0
  1013  007D98                     _EUSART_Init:
  1014                           	opt stack 29
  1015                           
  1016                           ;EUSART.h: 11: TRISCbits.TRISC6 = 0;
  1017                           
  1018                           ;incstack = 0
  1019  007D98  9C94               	bcf	3988,6,c	;volatile
  1020                           
  1021                           ;EUSART.h: 12: TRISCbits.TRISC7 = 1;
  1022  007D9A  8E94               	bsf	3988,7,c	;volatile
  1023                           
  1024                           ;EUSART.h: 14: TXSTAbits.SYNC = 0;
  1025  007D9C  98AC               	bcf	4012,4,c	;volatile
  1026                           
  1027                           ;EUSART.h: 15: TXSTAbits.BRGH = 1;
  1028  007D9E  84AC               	bsf	4012,2,c	;volatile
  1029                           
  1030                           ;EUSART.h: 16: BAUDCONbits.BRG16 = 0;
  1031  007DA0  96B8               	bcf	4024,3,c	;volatile
  1032                           
  1033                           ;EUSART.h: 17: SPBRG = (unsigned int)(FOSC/(16*BAUD)-1);
  1034  007DA2  C00E  F001         	movff	EUSART_Init@FOSC,___lldiv@dividend
  1035  007DA6  C00F  F002         	movff	EUSART_Init@FOSC+1,___lldiv@dividend+1
  1036  007DAA  C010  F003         	movff	EUSART_Init@FOSC+2,___lldiv@dividend+2
  1037  007DAE  C011  F004         	movff	EUSART_Init@FOSC+3,___lldiv@dividend+3
  1038  007DB2  C012  F016         	movff	EUSART_Init@BAUD,??_EUSART_Init
  1039  007DB6  C013  F017         	movff	EUSART_Init@BAUD+1,??_EUSART_Init+1
  1040  007DBA  C014  F018         	movff	EUSART_Init@BAUD+2,??_EUSART_Init+2
  1041  007DBE  C015  F019         	movff	EUSART_Init@BAUD+3,??_EUSART_Init+3
  1042  007DC2  0E04               	movlw	4
  1043  007DC4                     u465:
  1044  007DC4  90D8               	bcf	status,0,c
  1045  007DC6  3616               	rlcf	??_EUSART_Init,f,c
  1046  007DC8  3617               	rlcf	??_EUSART_Init+1,f,c
  1047  007DCA  3618               	rlcf	??_EUSART_Init+2,f,c
  1048  007DCC  3619               	rlcf	??_EUSART_Init+3,f,c
  1049  007DCE  2EE8               	decfsz	wreg,f,c
  1050  007DD0  D7F9               	goto	u465
  1051  007DD2  C016  F005         	movff	??_EUSART_Init,___lldiv@divisor
  1052  007DD6  C017  F006         	movff	??_EUSART_Init+1,___lldiv@divisor+1
  1053  007DDA  C018  F007         	movff	??_EUSART_Init+2,___lldiv@divisor+2
  1054  007DDE  C019  F008         	movff	??_EUSART_Init+3,___lldiv@divisor+3
  1055  007DE2  EC37  F03F         	call	___lldiv	;wreg free
  1056  007DE6  0401               	decf	?___lldiv,w,c
  1057  007DE8  6EAF               	movwf	4015,c	;volatile
  1058                           
  1059                           ;EUSART.h: 18: RCSTAbits.SPEN = 1;
  1060  007DEA  8EAB               	bsf	4011,7,c	;volatile
  1061                           
  1062                           ;EUSART.h: 19: TXSTAbits.TXEN = 1;
  1063  007DEC  8AAC               	bsf	4012,5,c	;volatile
  1064                           
  1065                           ;EUSART.h: 20: RCSTAbits.CREN = 1;
  1066  007DEE  88AB               	bsf	4011,4,c	;volatile
  1067  007DF0  0012               	return		;funcret
  1068  007DF2                     __end_of_EUSART_Init:
  1069                           	opt stack 0
  1070                           prodh	equ	0xFF4
  1071                           prodl	equ	0xFF3
  1072                           wreg	equ	0xFE8
  1073                           indf2	equ	0xFDF
  1074                           fsr2h	equ	0xFDA
  1075                           fsr2l	equ	0xFD9
  1076                           status	equ	0xFD8
  1077                           
  1078 ;; *************** function ___lldiv *****************
  1079 ;; Defined at:
  1080 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lldiv.c"
  1081 ;; Parameters:    Size  Location     Type
  1082 ;;  dividend        4    0[COMRAM] unsigned long 
  1083 ;;  divisor         4    4[COMRAM] unsigned long 
  1084 ;; Auto vars:     Size  Location     Type
  1085 ;;  quotient        4    8[COMRAM] unsigned long 
  1086 ;;  counter         1   12[COMRAM] unsigned char 
  1087 ;; Return value:  Size  Location     Type
  1088 ;;                  4    0[COMRAM] unsigned long 
  1089 ;; Registers used:
  1090 ;;		wreg, status,2, status,0
  1091 ;; Tracked objects:
  1092 ;;		On entry : 0/0
  1093 ;;		On exit  : 0/0
  1094 ;;		Unchanged: 0/0
  1095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1096 ;;      Params:         8       0       0       0       0       0       0       0       0
  1097 ;;      Locals:         5       0       0       0       0       0       0       0       0
  1098 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1099 ;;      Totals:        13       0       0       0       0       0       0       0       0
  1100 ;;Total ram usage:       13 bytes
  1101 ;; Hardware stack levels used:    1
  1102 ;; This function calls:
  1103 ;;		Nothing
  1104 ;; This function is called by:
  1105 ;;		_EUSART_Init
  1106 ;; This function uses a non-reentrant model
  1107 ;;
  1108                           
  1109                           	psect	text10
  1110  007E6E                     __ptext10:
  1111                           	opt stack 0
  1112  007E6E                     ___lldiv:
  1113                           	opt stack 29
  1114                           
  1115                           ;incstack = 0
  1116  007E6E  0E00               	movlw	0
  1117  007E70  6E09               	movwf	___lldiv@quotient,c
  1118  007E72  0E00               	movlw	0
  1119  007E74  6E0A               	movwf	___lldiv@quotient+1,c
  1120  007E76  0E00               	movlw	0
  1121  007E78  6E0B               	movwf	___lldiv@quotient+2,c
  1122  007E7A  0E00               	movlw	0
  1123  007E7C  6E0C               	movwf	___lldiv@quotient+3,c
  1124  007E7E  5005               	movf	___lldiv@divisor,w,c
  1125  007E80  1006               	iorwf	___lldiv@divisor+1,w,c
  1126  007E82  1007               	iorwf	___lldiv@divisor+2,w,c
  1127  007E84  1008               	iorwf	___lldiv@divisor+3,w,c
  1128  007E86  B4D8               	btfsc	status,2,c
  1129  007E88  D02F               	goto	l651
  1130  007E8A  0E01               	movlw	1
  1131  007E8C  6E0D               	movwf	___lldiv@counter,c
  1132  007E8E  D007               	goto	l985
  1133  007E90                     l983:
  1134  007E90  90D8               	bcf	status,0,c
  1135  007E92  3605               	rlcf	___lldiv@divisor,f,c
  1136  007E94  3606               	rlcf	___lldiv@divisor+1,f,c
  1137  007E96  3607               	rlcf	___lldiv@divisor+2,f,c
  1138  007E98  3608               	rlcf	___lldiv@divisor+3,f,c
  1139  007E9A  2A0D               	incf	___lldiv@counter,f,c
  1140  007E9C  D000               	goto	l985
  1141  007E9E                     l985:
  1142  007E9E  BE08               	btfsc	___lldiv@divisor+3,7,c
  1143  007EA0  D002               	goto	l987
  1144  007EA2  D7F6               	goto	l983
  1145  007EA4  D000               	goto	l987
  1146  007EA6                     l987:
  1147  007EA6  90D8               	bcf	status,0,c
  1148  007EA8  3609               	rlcf	___lldiv@quotient,f,c
  1149  007EAA  360A               	rlcf	___lldiv@quotient+1,f,c
  1150  007EAC  360B               	rlcf	___lldiv@quotient+2,f,c
  1151  007EAE  360C               	rlcf	___lldiv@quotient+3,f,c
  1152  007EB0  5005               	movf	___lldiv@divisor,w,c
  1153  007EB2  5C01               	subwf	___lldiv@dividend,w,c
  1154  007EB4  5006               	movf	___lldiv@divisor+1,w,c
  1155  007EB6  5802               	subwfb	___lldiv@dividend+1,w,c
  1156  007EB8  5007               	movf	___lldiv@divisor+2,w,c
  1157  007EBA  5803               	subwfb	___lldiv@dividend+2,w,c
  1158  007EBC  5008               	movf	___lldiv@divisor+3,w,c
  1159  007EBE  5804               	subwfb	___lldiv@dividend+3,w,c
  1160  007EC0  A0D8               	btfss	status,0,c
  1161  007EC2  D00A               	goto	l995
  1162  007EC4  5005               	movf	___lldiv@divisor,w,c
  1163  007EC6  5E01               	subwf	___lldiv@dividend,f,c
  1164  007EC8  5006               	movf	___lldiv@divisor+1,w,c
  1165  007ECA  5A02               	subwfb	___lldiv@dividend+1,f,c
  1166  007ECC  5007               	movf	___lldiv@divisor+2,w,c
  1167  007ECE  5A03               	subwfb	___lldiv@dividend+2,f,c
  1168  007ED0  5008               	movf	___lldiv@divisor+3,w,c
  1169  007ED2  5A04               	subwfb	___lldiv@dividend+3,f,c
  1170  007ED4  8009               	bsf	___lldiv@quotient,0,c
  1171  007ED6  D000               	goto	l995
  1172  007ED8                     l995:
  1173  007ED8  90D8               	bcf	status,0,c
  1174  007EDA  3208               	rrcf	___lldiv@divisor+3,f,c
  1175  007EDC  3207               	rrcf	___lldiv@divisor+2,f,c
  1176  007EDE  3206               	rrcf	___lldiv@divisor+1,f,c
  1177  007EE0  3205               	rrcf	___lldiv@divisor,f,c
  1178  007EE2  2E0D               	decfsz	___lldiv@counter,f,c
  1179  007EE4  D7E0               	goto	l987
  1180  007EE6  D000               	goto	l651
  1181  007EE8                     l651:
  1182  007EE8  C009  F001         	movff	___lldiv@quotient,?___lldiv
  1183  007EEC  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  1184  007EF0  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  1185  007EF4  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  1186  007EF8  0012               	return		;funcret
  1187  007EFA                     __end_of___lldiv:
  1188                           	opt stack 0
  1189  0000                     prodh	equ	0xFF4
  1190                           prodl	equ	0xFF3
  1191                           wreg	equ	0xFE8
  1192                           indf2	equ	0xFDF
  1193                           fsr2h	equ	0xFDA
  1194                           fsr2l	equ	0xFD9
  1195                           status	equ	0xFD8
  1196                           prodh	equ	0xFF4
  1197                           prodl	equ	0xFF3
  1198                           wreg	equ	0xFE8
  1199                           indf2	equ	0xFDF
  1200                           fsr2h	equ	0xFDA
  1201                           fsr2l	equ	0xFD9
  1202                           status	equ	0xFD8
  1203                           
  1204                           	psect	rparam
  1205  0000                     prodh	equ	0xFF4
  1206                           prodl	equ	0xFF3
  1207                           wreg	equ	0xFE8
  1208                           indf2	equ	0xFDF
  1209                           fsr2h	equ	0xFDA
  1210                           fsr2l	equ	0xFD9
  1211                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     40      40
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    EUSART_String@Data	PTR unsigned char  size(2) Largest target is 13
		 -> main@Data(COMRAM[13]), 

    readsData@value	PTR unsigned char  size(2) Largest target is 13
		 -> main@Data(COMRAM[13]), 


Critical Paths under _main in COMRAM

    _main->_EUSART_Init
    _readsData->_WriteI2C
    _WriteI2C->_IdleI2C
    _I2C_Init->_OpenI2C
    _EUSART_String->_EUSART_Char
    _EUSART_Init->___lldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                15    15      0    1310
                                             25 COMRAM    15    15      0
                        _EUSART_Init
                      _EUSART_String
                           _I2C_Init
                          _readsData
 ---------------------------------------------------------------------------------
 (1) _readsData                                           11     5      6     485
                                              2 COMRAM    11     5      6
                            _IdleI2C
                            _ReadI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (2) _WriteI2C                                             1     1      0      15
                                              1 COMRAM     1     1      0
                            _IdleI2C
 ---------------------------------------------------------------------------------
 (3) _IdleI2C                                              1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ReadI2C                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             2     1      1     194
                                              2 COMRAM     2     1      1
                            _OpenI2C
 ---------------------------------------------------------------------------------
 (2) _OpenI2C                                              2     1      1      97
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _EUSART_String                                        2     0      2     113
                                              1 COMRAM     2     0      2
                        _EUSART_Char
 ---------------------------------------------------------------------------------
 (2) _EUSART_Char                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Init                                         12     4      8     418
                                             13 COMRAM    12     4      8
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     268
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Init
     ___lldiv
   _EUSART_String
     _EUSART_Char
   _I2C_Init
     _OpenI2C
   _readsData
     _IdleI2C
     _ReadI2C
     _WriteI2C
       _IdleI2C

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     28      28       1       42.1%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Sun May 03 23:39:07 2020

            _SSPSTATbits 000FC7                       l72 7F84                       l64 7F06  
                     l81 7FAA                       l73 7F7C                       l67 7F20  
                     l77 7F8A                       l99 7CAC              __CFG_BOR$ON 000000  
            __CFG_BORV$3 000000             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000                      l155 7D0C  
                    l156 7D10                      l180 7D66                      l159 7D18  
                    l177 7D96                      l189 7D8A                      l651 7EE8  
                    l821 7D72                      l809 7D4E                      l785 7CCA  
                    l983 7E90                      l985 7E9E                      l995 7ED8  
                    l987 7EA6             __CFG_CPB$OFF 000000             __CFG_CPD$OFF 000000  
                    u507 7E5C                      u517 7F48                      u465 7DC4  
                    wreg 000FE8             ?_EUSART_Char 0001             ?_EUSART_Init 000E  
           __CFG_LVP$OFF 000000             __CFG_WDT$OFF 000000                     l1023 7F92  
                   l1015 7F2C                     l1025 7F9A                     l1045 7D1C  
                   l1063 7E56                     l1055 7E3E                     l1049 7D30  
                   l1059 7E4E                     _main 7DF2         __end_of_I2C_Init 7CC8  
                   fsr2h 000FDA                     indf2 000FDF                     fsr2l 000FD9  
                   prodh 000FF4                     prodl 000FF3                     start 0000  
          __CFG_IESO$OFF 000000          __end_of_IdleI2C 7CDA            __CFG_MCLRE$ON 000000  
           ___param_bank 000010          __end_of_ReadI2C 7D1A          __end_of_OpenI2C 7CF8  
          __CFG_PLLDIV$1 000000           __CFG_CCP2MX$ON 000000                    ?_main 0001  
        __end_of___lldiv 7EFA                    _RCREG 000FAE                    _SPBRG 000FAF  
          __CFG_USBDIV$1 000000                    _TXREG 000FAD            __CFG_PWRT$OFF 000000  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
          __CFG_WRT3$OFF 000000            _EUSART_String 7D1A           __CFG_EBTR0$OFF 000000  
         __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000  
         __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000                    main@i 0028  
                  status 000FD8           __CFG_ICPRT$OFF 000000          __initialization 7CA2  
           __end_of_main 7E6E                   ??_main 001A            __activetblptr 000000  
         ?_EUSART_String 0002         __end_of_WriteI2C 7D98              OpenI2C@slew 0001  
              ??_IdleI2C 0001                   _SSPBUF 000FC9                ??_ReadI2C 0001  
              ??_OpenI2C 0002           __CFG_XINST$OFF 000000           __CFG_STVREN$ON 000000  
              ??___lldiv 0009                ?_I2C_Init 0003     __size_of_EUSART_Char 000E  
   __size_of_EUSART_Init 005A               __accesstop 0060  __end_of__initialization 7CA2  
        __CFG_PBADEN$OFF 000000          __CFG_FOSC$XT_XT 000000            ___rparam_used 000001  
         __pcstackCOMRAM 0001          ??_EUSART_String 0004               ??_I2C_Init 0004  
     __size_of_readsData 0106             I2C_Init@modo 0004                ?_WriteI2C 0001  
                _SSPCON1 000FC6                  _SSPCON2 000FC5                  _SSPSTAT 000FC7  
                _IdleI2C 7CC8          __CFG_VREGEN$OFF 000000                  _ReadI2C 7CF8  
                _OpenI2C 7CDA                  __Hparam 0000                  __Lparam 0000  
                ___lldiv 7E6E                  __pcinit 7CA2               ??_WriteI2C 0002  
                __ramtop 0800                  __ptext0 7DF2                  __ptext1 7EFA  
                __ptext2 7D40                  __ptext3 7CC8                  __ptext4 7CF8  
                __ptext5 7CB6                  __ptext6 7CDA                  __ptext7 7D1A  
                __ptext8 7CA8                  __ptext9 7D98        __end_of_readsData 8000  
   end_of_initialization 7CA2          ___lldiv@divisor 0005          ___lldiv@counter 000D  
      EUSART_String@Data 0002                _RCSTAbits 000FAB         readsData@NumData 0005  
              _TRISBbits 000F93                _TRISCbits 000F94        __size_of_I2C_Init 0012  
              _TXSTAbits 000FAC              _BAUDCONbits 000FB8      start_initialization 7CA2  
          ??_EUSART_Char 0001            ??_EUSART_Init 0016         WriteI2C@data_out 0002  
       __CFG_LPT1OSC$OFF 000000               readsData@i 000D        __size_of_WriteI2C 0058  
  __end_of_EUSART_String 7D40                 ?_IdleI2C 0001      __end_of_EUSART_Char 7CB6  
    __end_of_EUSART_Init 7DF2                 ?_ReadI2C 0001                 ?_OpenI2C 0001  
          I2C_Init@speed 0003                 ?___lldiv 0001                 _I2C_Init 7CB6  
              _readsData 7EFA                 _PIR1bits 000F9E         __CFG_WDTPS$32768 000000  
            _EUSART_Char 7CA8              _EUSART_Init 7D98               ?_readsData 0003  
       OpenI2C@sync_mode 0002         __size_of_IdleI2C 0012          EUSART_Init@BAUD 0012  
        EUSART_Init@FOSC 000E         __size_of_ReadI2C 0022                 __Hrparam 0000  
       __size_of_OpenI2C 001E                 __Lrparam 0000    readsData@AddressStart 0003  
       __size_of___lldiv 008C                 _WriteI2C 7D40                 __ptext10 7E6E  
          __size_of_main 007C                 main@Data 001B           readsData@value 0007  
  __CFG_CPUDIV$OSC1_PLL2 000000              ??_readsData 0009         ___lldiv@dividend 0001  
    EUSART_Char@Caracter 0001         ___lldiv@quotient 0009              _SSPCON1bits 000FC6  
            _SSPCON2bits 000FC5   __size_of_EUSART_String 0026  
