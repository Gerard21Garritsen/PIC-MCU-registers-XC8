

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sun Mar 15 16:42:25 2020

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20  0000                     
    21                           ; Version 1.45
    22                           ; Generated 16/11/2017 GMT
    23                           ; 
    24                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC18F4550 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     _PIR1bits	set	3998
    56  0000                     _SSPCON1bits	set	4038
    57  0000                     _SSPBUF	set	4041
    58  0000                     _SSPCON1	set	4038
    59  0000                     _SSPSTAT	set	4039
    60  0000                     _SSPSTATbits	set	4039
    61  0000                     _SSPCON2	set	4037
    62  0000                     _SSPCON2bits	set	4037
    63  0000                     _LATDbits	set	3980
    64  0000                     _LATBbits	set	3978
    65  0000                     _TRISDbits	set	3989
    66  0000                     _TRISBbits	set	3987
    67                           
    68                           	psect	smallconst
    69  000800                     __psmallconst:
    70                           	opt stack 0
    71  000800  00                 	db	0
    72  000801                     STR_1:
    73  000801  25                 	db	37
    74  000802  63                 	db	99	;'c'
    75  000803  00                 	db	0
    76                           
    77                           ; #config settings
    78  000804  00                 	db	0	; dummy byte at the end
    79  0000                     
    80                           	psect	cinit
    81  000E04                     __pcinit:
    82                           	opt stack 0
    83  000E04                     start_initialization:
    84                           	opt stack 0
    85  000E04                     __initialization:
    86                           	opt stack 0
    87  000E04                     end_of_initialization:
    88                           	opt stack 0
    89  000E04                     __end_of__initialization:
    90                           	opt stack 0
    91  000E04  0E00               	movlw	low (__Lmediumconst shr (0+16))
    92  000E06  6EF8               	movwf	tblptru,c
    93  000E08  0100               	movlb	0
    94  000E0A  EFC6  F005         	goto	_main	;jump to C main() function
    95                           tblptru	equ	0xFF8
    96                           
    97                           	psect	cstackCOMRAM
    98  000001                     __pcstackCOMRAM:
    99                           	opt stack 0
   100  000001                     ??_Lcd_Cmd:
   101  000001                     ??_Lcd_Chr_CP:
   102  000001                     ??_IdleI2C:
   103  000001                     ?_sprintf:
   104                           	opt stack 0
   105  000001                     OpenI2C@slew:
   106                           	opt stack 0
   107  000001                     sprintf@sp:
   108                           	opt stack 0
   109                           
   110                           ; 2 bytes @ 0x0
   111  000001                     	ds	1
   112  000002                     OpenI2C@sync_mode:
   113                           	opt stack 0
   114  000002                     WriteI2C@data_out:
   115                           	opt stack 0
   116                           
   117                           ; 1 bytes @ 0x1
   118  000002                     	ds	1
   119  000003                     Lcd_Chr_CP@data:
   120                           	opt stack 0
   121  000003                     Lcd_Cmd@data:
   122                           	opt stack 0
   123  000003                     sprintf@f:
   124                           	opt stack 0
   125                           
   126                           ; 2 bytes @ 0x2
   127  000003                     	ds	1
   128  000004                     ??_Lcd_Init:
   129  000004                     Lcd_Out2@x:
   130                           	opt stack 0
   131                           
   132                           ; 1 bytes @ 0x3
   133  000004                     	ds	1
   134  000005                     Lcd_Init@data:
   135                           	opt stack 0
   136  000005                     Lcd_Out2@buffer:
   137                           	opt stack 0
   138                           
   139                           ; 2 bytes @ 0x4
   140  000005                     	ds	2
   141  000007                     Lcd_Out2@y:
   142                           	opt stack 0
   143  000007                     sprintf@flag:
   144                           	opt stack 0
   145                           
   146                           ; 1 bytes @ 0x6
   147  000007                     	ds	1
   148  000008                     Lcd_Out2@data:
   149                           	opt stack 0
   150  000008                     sprintf@ap:
   151                           	opt stack 0
   152                           
   153                           ; 2 bytes @ 0x7
   154  000008                     	ds	2
   155  00000A                     sprintf@c:
   156                           	opt stack 0
   157                           
   158                           ; 1 bytes @ 0x9
   159  00000A                     	ds	1
   160  00000B                     ??_main:
   161                           
   162                           ; 1 bytes @ 0xA
   163  00000B                     	ds	1
   164  00000C                     main@Data:
   165                           	opt stack 0
   166                           
   167                           ; 1 bytes @ 0xB
   168  00000C                     	ds	1
   169  00000D                     main@i:
   170                           	opt stack 0
   171                           
   172                           ; 2 bytes @ 0xC
   173  00000D                     	ds	2
   174                           tblptru	equ	0xFF8
   175                           
   176 ;;
   177 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   178 ;;
   179 ;; *************** function _main *****************
   180 ;; Defined at:
   181 ;;		line 10 in file "Main.c"
   182 ;; Parameters:    Size  Location     Type
   183 ;;		None
   184 ;; Auto vars:     Size  Location     Type
   185 ;;  i               2   12[COMRAM] unsigned char [2]
   186 ;;  Data            1   11[COMRAM] unsigned char 
   187 ;; Return value:  Size  Location     Type
   188 ;;                  1    wreg      void 
   189 ;; Registers used:
   190 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   191 ;; Tracked objects:
   192 ;;		On entry : 0/0
   193 ;;		On exit  : 0/0
   194 ;;		Unchanged: 0/0
   195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   196 ;;      Params:         0       0       0       0       0       0       0       0       0
   197 ;;      Locals:         3       0       0       0       0       0       0       0       0
   198 ;;      Temps:          1       0       0       0       0       0       0       0       0
   199 ;;      Totals:         4       0       0       0       0       0       0       0       0
   200 ;;Total ram usage:        4 bytes
   201 ;; Hardware stack levels required when called:    2
   202 ;; This function calls:
   203 ;;		_IdleI2C
   204 ;;		_Lcd_Cmd
   205 ;;		_Lcd_Init
   206 ;;		_Lcd_Out2
   207 ;;		_OpenI2C
   208 ;;		_ReadI2C
   209 ;;		_WriteI2C
   210 ;;		_sprintf
   211 ;; This function is called by:
   212 ;;		Startup code after reset
   213 ;; This function uses a non-reentrant model
   214 ;;
   215                           
   216                           	psect	text0
   217  000B8C                     __ptext0:
   218                           	opt stack 0
   219  000B8C                     _main:
   220                           	opt stack 29
   221                           
   222                           ;Main.c: 11: unsigned char Data;
   223                           ;Main.c: 12: char i[2];
   224                           ;Main.c: 13: OpenI2C(0b00001000,0b10000000);
   225                           
   226                           ;incstack = 0
   227  000B8C  0E80               	movlw	128
   228  000B8E  6E01               	movwf	OpenI2C@slew,c
   229  000B90  0E08               	movlw	8
   230  000B92  ECDC  F006         	call	_OpenI2C
   231                           
   232                           ;Main.c: 14: Lcd_Init();
   233  000B96  EC34  F005         	call	_Lcd_Init	;wreg free
   234                           
   235                           ;Main.c: 15: Lcd_Cmd(12);
   236  000B9A  0E0C               	movlw	12
   237  000B9C  EC9D  F004         	call	_Lcd_Cmd
   238                           
   239                           ;Main.c: 16: Lcd_Cmd(1);
   240  000BA0  0E01               	movlw	1
   241  000BA2  EC9D  F004         	call	_Lcd_Cmd
   242  000BA6                     
   243                           ;Main.c: 18: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
   244  000BA6  80C5               	bsf	4037,0,c	;volatile
   245  000BA8  B0C5               	btfsc	4037,0,c	;volatile
   246  000BAA  D7FE               	goto	l70
   247                           
   248                           ;Main.c: 19: IdleI2C();
   249  000BAC  ECF9  F006         	call	_IdleI2C	;wreg free
   250                           
   251                           ;Main.c: 20: WriteI2C(0xA0);
   252  000BB0  0EA0               	movlw	160
   253  000BB2  ECB6  F006         	call	_WriteI2C
   254                           
   255                           ;Main.c: 21: IdleI2C();
   256  000BB6  ECF9  F006         	call	_IdleI2C	;wreg free
   257                           
   258                           ;Main.c: 23: WriteI2C(0>>8);
   259  000BBA  0E00               	movlw	0
   260  000BBC  ECB6  F006         	call	_WriteI2C
   261                           
   262                           ;Main.c: 24: WriteI2C(0);
   263  000BC0  0E00               	movlw	0
   264  000BC2  ECB6  F006         	call	_WriteI2C
   265                           
   266                           ;Main.c: 25: WriteI2C(64);
   267  000BC6  0E40               	movlw	64
   268  000BC8  ECB6  F006         	call	_WriteI2C
   269                           
   270                           ;Main.c: 26: _delay((unsigned long)((10)*(4E6/4000.0)));
   271  000BCC  0E0D               	movlw	13
   272  000BCE  6E0B               	movwf	??_main& (0+255),c
   273  000BD0  0EFC               	movlw	252
   274  000BD2                     u417:
   275  000BD2  2EE8               	decfsz	wreg,f,c
   276  000BD4  D7FE               	bra	u417
   277  000BD6  2E0B               	decfsz	??_main& (0+255),f,c
   278  000BD8  D7FC               	bra	u417
   279                           
   280                           ;Main.c: 27: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
   281  000BDA  84C5               	bsf	4037,2,c	;volatile
   282  000BDC  B4C5               	btfsc	4037,2,c	;volatile
   283  000BDE  D7FE               	goto	l73
   284                           
   285                           ;Main.c: 28: _delay((unsigned long)((10)*(4E6/4000.0)));
   286  000BE0  0E0D               	movlw	13
   287  000BE2  6E0B               	movwf	??_main& (0+255),c
   288  000BE4  0EFC               	movlw	252
   289  000BE6                     u427:
   290  000BE6  2EE8               	decfsz	wreg,f,c
   291  000BE8  D7FE               	bra	u427
   292  000BEA  2E0B               	decfsz	??_main& (0+255),f,c
   293  000BEC  D7FC               	bra	u427
   294                           
   295                           ;Main.c: 29: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
   296  000BEE  80C5               	bsf	4037,0,c	;volatile
   297  000BF0  B0C5               	btfsc	4037,0,c	;volatile
   298  000BF2  D7FE               	goto	l76
   299                           
   300                           ;Main.c: 30: IdleI2C();
   301  000BF4  ECF9  F006         	call	_IdleI2C	;wreg free
   302                           
   303                           ;Main.c: 31: WriteI2C(0xA0);
   304  000BF8  0EA0               	movlw	160
   305  000BFA  ECB6  F006         	call	_WriteI2C
   306                           
   307                           ;Main.c: 32: IdleI2C();
   308  000BFE  ECF9  F006         	call	_IdleI2C	;wreg free
   309                           
   310                           ;Main.c: 34: WriteI2C(0>>8);
   311  000C02  0E00               	movlw	0
   312  000C04  ECB6  F006         	call	_WriteI2C
   313                           
   314                           ;Main.c: 35: WriteI2C(0);
   315  000C08  0E00               	movlw	0
   316  000C0A  ECB6  F006         	call	_WriteI2C
   317                           
   318                           ;Main.c: 36: SSPCON2bits.RSEN=1;while(SSPCON2bits.RSEN);
   319  000C0E  82C5               	bsf	4037,1,c	;volatile
   320  000C10  B2C5               	btfsc	4037,1,c	;volatile
   321  000C12  D7FE               	goto	l79
   322                           
   323                           ;Main.c: 37: IdleI2C();
   324  000C14  ECF9  F006         	call	_IdleI2C	;wreg free
   325                           
   326                           ;Main.c: 38: WriteI2C(0xA1);
   327  000C18  0EA1               	movlw	161
   328  000C1A  ECB6  F006         	call	_WriteI2C
   329                           
   330                           ;Main.c: 39: IdleI2C();
   331  000C1E  ECF9  F006         	call	_IdleI2C	;wreg free
   332                           
   333                           ;Main.c: 40: Data = ReadI2C();
   334  000C22  ECEB  F006         	call	_ReadI2C	;wreg free
   335  000C26  6E0C               	movwf	main@Data,c
   336                           
   337                           ;Main.c: 41: _delay((unsigned long)((10)*(4E6/4000.0)));
   338  000C28  0E0D               	movlw	13
   339  000C2A  6E0B               	movwf	??_main& (0+255),c
   340  000C2C  0EFC               	movlw	252
   341  000C2E                     u437:
   342  000C2E  2EE8               	decfsz	wreg,f,c
   343  000C30  D7FE               	bra	u437
   344  000C32  2E0B               	decfsz	??_main& (0+255),f,c
   345  000C34  D7FC               	bra	u437
   346                           
   347                           ;Main.c: 42: SSPCON2bits.ACKDT=1;SSPCON2bits.ACKEN=1;while(SSPCON2bits.ACKEN);
   348  000C36  8AC5               	bsf	4037,5,c	;volatile
   349  000C38  88C5               	bsf	4037,4,c	;volatile
   350  000C3A  B8C5               	btfsc	4037,4,c	;volatile
   351  000C3C  D7FE               	goto	l82
   352                           
   353                           ;Main.c: 43: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
   354  000C3E  84C5               	bsf	4037,2,c	;volatile
   355  000C40  B4C5               	btfsc	4037,2,c	;volatile
   356  000C42  D7FE               	goto	l85
   357                           
   358                           ;Main.c: 44: _delay((unsigned long)((10)*(4E6/4000.0)));
   359  000C44  0E0D               	movlw	13
   360  000C46  6E0B               	movwf	??_main& (0+255),c
   361  000C48  0EFC               	movlw	252
   362  000C4A                     u447:
   363  000C4A  2EE8               	decfsz	wreg,f,c
   364  000C4C  D7FE               	bra	u447
   365  000C4E  2E0B               	decfsz	??_main& (0+255),f,c
   366  000C50  D7FC               	bra	u447
   367                           
   368                           ;Main.c: 45: sprintf(i,"%c",Data);
   369  000C52  0E0D               	movlw	low main@i
   370  000C54  6E01               	movwf	sprintf@sp,c
   371  000C56  0E00               	movlw	high main@i
   372  000C58  6E02               	movwf	sprintf@sp+1,c
   373  000C5A  0E01               	movlw	low STR_1
   374  000C5C  6E03               	movwf	sprintf@f,c
   375  000C5E  0E08               	movlw	high STR_1
   376  000C60  6E04               	movwf	sprintf@f+1,c
   377  000C62  C00C  F005         	movff	main@Data,?_sprintf+4
   378  000C66  6A06               	clrf	?_sprintf+5,c
   379  000C68  EC40  F006         	call	_sprintf	;wreg free
   380                           
   381                           ;Main.c: 46: Lcd_Out2(1,0,i);
   382  000C6C  0E00               	movlw	0
   383  000C6E  6E04               	movwf	Lcd_Out2@x,c
   384  000C70  0E0D               	movlw	low main@i
   385  000C72  6E05               	movwf	Lcd_Out2@buffer,c
   386  000C74  0E00               	movlw	high main@i
   387  000C76  6E06               	movwf	Lcd_Out2@buffer+1,c
   388  000C78  0E01               	movlw	1
   389  000C7A  EC85  F006         	call	_Lcd_Out2
   390  000C7E  D793               	goto	l68
   391  000C80                     __end_of_main:
   392                           	opt stack 0
   393                           tblptru	equ	0xFF8
   394                           wreg	equ	0xFE8
   395                           
   396 ;; *************** function _sprintf *****************
   397 ;; Defined at:
   398 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
   399 ;; Parameters:    Size  Location     Type
   400 ;;  sp              2    0[COMRAM] PTR unsigned char 
   401 ;;		 -> main@i(2), 
   402 ;;  f               2    2[COMRAM] PTR const unsigned char 
   403 ;;		 -> STR_1(3), 
   404 ;; Auto vars:     Size  Location     Type
   405 ;;  tmpval          4    0        struct .
   406 ;;  cp              3    0        PTR const unsigned char 
   407 ;;  ap              2    7[COMRAM] PTR void [1]
   408 ;;		 -> ?_sprintf(2), 
   409 ;;  len             2    0        unsigned int 
   410 ;;  val             2    0        unsigned int 
   411 ;;  c               1    9[COMRAM] char 
   412 ;;  flag            1    6[COMRAM] unsigned char 
   413 ;;  prec            1    0        char 
   414 ;; Return value:  Size  Location     Type
   415 ;;                  2    0[COMRAM] int 
   416 ;; Registers used:
   417 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
   418 ;; Tracked objects:
   419 ;;		On entry : 0/0
   420 ;;		On exit  : 0/0
   421 ;;		Unchanged: 0/0
   422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   423 ;;      Params:         6       0       0       0       0       0       0       0       0
   424 ;;      Locals:         4       0       0       0       0       0       0       0       0
   425 ;;      Temps:          0       0       0       0       0       0       0       0       0
   426 ;;      Totals:        10       0       0       0       0       0       0       0       0
   427 ;;Total ram usage:       10 bytes
   428 ;; Hardware stack levels used:    1
   429 ;; This function calls:
   430 ;;		Nothing
   431 ;; This function is called by:
   432 ;;		_main
   433 ;; This function uses a non-reentrant model
   434 ;;
   435                           
   436                           	psect	text1
   437  000C80                     __ptext1:
   438                           	opt stack 0
   439  000C80                     _sprintf:
   440                           	opt stack 30
   441                           
   442                           ;doprnt.c: 494: va_list ap;
   443                           ;doprnt.c: 499: signed char c;
   444                           ;doprnt.c: 506: signed char prec;
   445                           ;doprnt.c: 508: unsigned char flag;
   446                           ;doprnt.c: 523: union {
   447                           ;doprnt.c: 524: unsigned long vd;
   448                           ;doprnt.c: 525: double integ;
   449                           ;doprnt.c: 526: } tmpval;
   450                           ;doprnt.c: 528: unsigned int val;
   451                           ;doprnt.c: 529: unsigned len;
   452                           ;doprnt.c: 530: const char * cp;
   453                           ;doprnt.c: 533: *ap = __va_start();
   454                           
   455                           ;incstack = 0
   456  000C80  0E05               	movlw	low (?_sprintf+4)
   457  000C82  6E08               	movwf	sprintf@ap,c
   458  000C84  0E00               	movlw	high (?_sprintf+4)
   459  000C86  6E09               	movwf	sprintf@ap+1,c
   460                           
   461                           ;doprnt.c: 536: while(c = *f++) {
   462  000C88  D02D               	goto	l104
   463  000C8A                     
   464                           ;doprnt.c: 538: if(c != '%')
   465  000C8A  0E25               	movlw	37
   466  000C8C  180A               	xorwf	sprintf@c,w,c
   467  000C8E  B4D8               	btfsc	status,2,c
   468  000C90  D004               	goto	l98
   469  000C92  D010               	goto	l103
   470  000C94                     l1096:
   471  000C94  4A01               	infsnz	sprintf@sp,f,c
   472  000C96  2A02               	incf	sprintf@sp+1,f,c
   473                           
   474                           ;doprnt.c: 542: continue;
   475  000C98  D025               	goto	l104
   476  000C9A                     l98:
   477                           
   478                           ;doprnt.c: 543: }
   479                           ;doprnt.c: 548: flag = 0;
   480  000C9A  0E00               	movlw	0
   481  000C9C  6E07               	movwf	sprintf@flag,c
   482                           
   483                           ;doprnt.c: 635: switch(c = *f++) {
   484  000C9E  D011               	goto	l99
   485  000CA0                     
   486                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
   487  000CA0  C008  FFD9         	movff	sprintf@ap,fsr2l
   488  000CA4  C009  FFDA         	movff	sprintf@ap+1,fsr2h
   489  000CA8  50DF               	movf	indf2,w,c
   490  000CAA  6E0A               	movwf	sprintf@c,c
   491  000CAC  0E02               	movlw	2
   492  000CAE  2608               	addwf	sprintf@ap,f,c
   493  000CB0  0E00               	movlw	0
   494  000CB2  2209               	addwfc	sprintf@ap+1,f,c
   495  000CB4                     l103:
   496                           
   497                           ;doprnt.c: 809: ((*sp++ = (c)));
   498  000CB4  C001  FFD9         	movff	sprintf@sp,fsr2l
   499  000CB8  C002  FFDA         	movff	sprintf@sp+1,fsr2h
   500  000CBC  C00A  FFDF         	movff	sprintf@c,indf2
   501  000CC0  D7E9               	goto	l1096
   502  000CC2                     l99:
   503  000CC2  C003  FFF6         	movff	sprintf@f,tblptrl
   504  000CC6  C004  FFF7         	movff	sprintf@f+1,tblptrh
   505  000CCA  4A03               	infsnz	sprintf@f,f,c
   506  000CCC  2A04               	incf	sprintf@f+1,f,c
   507  000CCE                     	if	0	;tblptru may be non-zero
   508  000CCE                     	endif
   509  000CCE                     	if	0	;tblptru may be non-zero
   510  000CCE                     	endif
   511  000CCE  0008               	tblrd		*
   512  000CD0  CFF5 F00A          	movff	tablat,sprintf@c
   513  000CD4  500A               	movf	sprintf@c,w,c
   514                           
   515                           ; Switch size 1, requested type "space"
   516                           ; Number of cases is 2, Range of values is 0 to 99
   517                           ; switch strategies available:
   518                           ; Name         Instructions Cycles
   519                           ; simple_byte            7     4 (average)
   520                           ;	Chosen strategy is simple_byte
   521  000CD6  0A00               	xorlw	0	; case 0
   522  000CD8  B4D8               	btfsc	status,2,c
   523  000CDA  D010               	goto	u340
   524  000CDC  0A63               	xorlw	99	; case 99
   525  000CDE  B4D8               	btfsc	status,2,c
   526  000CE0  D7DF               	goto	l102
   527  000CE2  D7E8               	goto	l103
   528  000CE4                     l104:
   529                           
   530                           ;doprnt.c: 1422: {
   531  000CE4  C003  FFF6         	movff	sprintf@f,tblptrl
   532  000CE8  C004  FFF7         	movff	sprintf@f+1,tblptrh
   533  000CEC  4A03               	infsnz	sprintf@f,f,c
   534  000CEE  2A04               	incf	sprintf@f+1,f,c
   535  000CF0                     	if	0	;tblptru may be non-zero
   536  000CF0                     	endif
   537  000CF0                     	if	0	;tblptru may be non-zero
   538  000CF0                     	endif
   539  000CF0  0008               	tblrd		*
   540  000CF2  CFF5 F00A          	movff	tablat,sprintf@c
   541  000CF6  500A               	movf	sprintf@c,w,c
   542  000CF8  A4D8               	btfss	status,2,c
   543  000CFA  D7C7               	goto	l97
   544  000CFC                     u340:
   545                           
   546                           ;doprnt.c: 1538: *sp = 0;
   547                           
   548                           ;doprnt.c: 1469: }
   549                           ;doprnt.c: 1533: }
   550                           ;doprnt.c: 1535: alldone:
   551  000CFC  C001  FFD9         	movff	sprintf@sp,fsr2l
   552  000D00  C002  FFDA         	movff	sprintf@sp+1,fsr2h
   553  000D04  0E00               	movlw	0
   554  000D06  6EDF               	movwf	indf2,c
   555  000D08  0012               	return	
   556  000D0A                     __end_of_sprintf:
   557                           	opt stack 0
   558                           tblptru	equ	0xFF8
   559                           tblptrh	equ	0xFF7
   560                           tblptrl	equ	0xFF6
   561                           tablat	equ	0xFF5
   562                           wreg	equ	0xFE8
   563                           indf2	equ	0xFDF
   564                           fsr2h	equ	0xFDA
   565                           fsr2l	equ	0xFD9
   566                           status	equ	0xFD8
   567                           
   568 ;; *************** function _WriteI2C *****************
   569 ;; Defined at:
   570 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\pic18\plib\i2c\i2c_writ.c"
   571 ;; Parameters:    Size  Location     Type
   572 ;;  data_out        1    wreg     unsigned char 
   573 ;; Auto vars:     Size  Location     Type
   574 ;;  data_out        1    1[COMRAM] unsigned char 
   575 ;; Return value:  Size  Location     Type
   576 ;;                  1    wreg      char 
   577 ;; Registers used:
   578 ;;		wreg, status,2, status,0, cstack
   579 ;; Tracked objects:
   580 ;;		On entry : 0/0
   581 ;;		On exit  : 0/0
   582 ;;		Unchanged: 0/0
   583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   584 ;;      Params:         0       0       0       0       0       0       0       0       0
   585 ;;      Locals:         1       0       0       0       0       0       0       0       0
   586 ;;      Temps:          0       0       0       0       0       0       0       0       0
   587 ;;      Totals:         1       0       0       0       0       0       0       0       0
   588 ;;Total ram usage:        1 bytes
   589 ;; Hardware stack levels used:    1
   590 ;; Hardware stack levels required when called:    1
   591 ;; This function calls:
   592 ;;		_IdleI2C
   593 ;; This function is called by:
   594 ;;		_main
   595 ;; This function uses a non-reentrant model
   596 ;;
   597                           
   598                           	psect	text2
   599  000D6C                     __ptext2:
   600                           	opt stack 0
   601  000D6C                     _WriteI2C:
   602                           	opt stack 29
   603                           
   604                           ;incstack = 0
   605                           ;WriteI2C@data_out stored from wreg
   606  000D6C  6E02               	movwf	WriteI2C@data_out,c
   607  000D6E  C002  FFC9         	movff	WriteI2C@data_out,4041	;volatile
   608  000D72  BEC6               	btfsc	4038,7,c	;volatile
   609  000D74  0012               	return	
   610                           
   611                           ;	Return value of _WriteI2C is never used
   612  000D76  50C6               	movf	4038,w,c	;volatile
   613  000D78  0B0F               	andlw	15
   614  000D7A  0A08               	xorlw	8
   615  000D7C  B4D8               	btfsc	status,2,c
   616  000D7E  D00C               	goto	l164
   617  000D80  50C6               	movf	4038,w,c	;volatile
   618  000D82  0B0F               	andlw	15
   619  000D84  0A0B               	xorlw	11
   620  000D86  B4D8               	btfsc	status,2,c
   621  000D88  D007               	goto	l164
   622  000D8A  88C6               	bsf	4038,4,c	;volatile
   623  000D8C  A69E               	btfss	3998,3,c	;volatile
   624  000D8E  D7FE               	goto	l166
   625  000D90  B4C7               	btfsc	4039,2,c	;volatile
   626  000D92  0012               	return	
   627  000D94  50C7               	movf	4039,w,c	;volatile
   628                           
   629                           ;	Return value of _WriteI2C is never used
   630                           
   631                           ;	Return value of _WriteI2C is never used
   632  000D96  0012               	return	
   633  000D98                     l164:
   634  000D98  50C6               	movf	4038,w,c	;volatile
   635  000D9A  0B0F               	andlw	15
   636  000D9C  0A08               	xorlw	8
   637  000D9E  B4D8               	btfsc	status,2,c
   638  000DA0  D005               	goto	u180
   639  000DA2  50C6               	movf	4038,w,c	;volatile
   640  000DA4  0B0F               	andlw	15
   641  000DA6  0A0B               	xorlw	11
   642  000DA8  A4D8               	btfss	status,2,c
   643  000DAA  0012               	return	
   644  000DAC                     u180:
   645  000DAC  B0C7               	btfsc	4039,0,c	;volatile
   646  000DAE  D7FE               	goto	u180
   647  000DB0  ECF9  F006         	call	_IdleI2C	;wreg free
   648  000DB4  50C5               	movf	4037,w,c	;volatile
   649                           
   650                           ;	Return value of _WriteI2C is never used
   651                           
   652                           ;	Return value of _WriteI2C is never used
   653  000DB6  0012               	return	
   654  000DB8                     __end_of_WriteI2C:
   655                           	opt stack 0
   656                           tblptru	equ	0xFF8
   657                           tblptrh	equ	0xFF7
   658                           tblptrl	equ	0xFF6
   659                           tablat	equ	0xFF5
   660                           wreg	equ	0xFE8
   661                           indf2	equ	0xFDF
   662                           fsr2h	equ	0xFDA
   663                           fsr2l	equ	0xFD9
   664                           status	equ	0xFD8
   665                           
   666 ;; *************** function _IdleI2C *****************
   667 ;; Defined at:
   668 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\pic18\plib\i2c\i2c_idle.c"
   669 ;; Parameters:    Size  Location     Type
   670 ;;		None
   671 ;; Auto vars:     Size  Location     Type
   672 ;;		None
   673 ;; Return value:  Size  Location     Type
   674 ;;                  1    wreg      void 
   675 ;; Registers used:
   676 ;;		wreg, status,2, status,0
   677 ;; Tracked objects:
   678 ;;		On entry : 0/0
   679 ;;		On exit  : 0/0
   680 ;;		Unchanged: 0/0
   681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   682 ;;      Params:         0       0       0       0       0       0       0       0       0
   683 ;;      Locals:         0       0       0       0       0       0       0       0       0
   684 ;;      Temps:          1       0       0       0       0       0       0       0       0
   685 ;;      Totals:         1       0       0       0       0       0       0       0       0
   686 ;;Total ram usage:        1 bytes
   687 ;; Hardware stack levels used:    1
   688 ;; This function calls:
   689 ;;		Nothing
   690 ;; This function is called by:
   691 ;;		_main
   692 ;;		_WriteI2C
   693 ;; This function uses a non-reentrant model
   694 ;;
   695                           
   696                           	psect	text3
   697  000DF2                     __ptext3:
   698                           	opt stack 0
   699  000DF2                     _IdleI2C:
   700                           	opt stack 29
   701                           
   702                           ;incstack = 0
   703  000DF2  CFC5 F001          	movff	4037,??_IdleI2C	;volatile
   704  000DF6  0E1F               	movlw	31
   705  000DF8  1601               	andwf	??_IdleI2C,f,c
   706  000DFA  A4D8               	btfss	status,2,c
   707  000DFC  D7FA               	goto	_IdleI2C
   708  000DFE  A4C7               	btfss	4039,2,c	;volatile
   709  000E00  0012               	return	
   710  000E02  D7F7               	goto	_IdleI2C
   711  000E04                     __end_of_IdleI2C:
   712                           	opt stack 0
   713                           tblptru	equ	0xFF8
   714                           tblptrh	equ	0xFF7
   715                           tblptrl	equ	0xFF6
   716                           tablat	equ	0xFF5
   717                           wreg	equ	0xFE8
   718                           indf2	equ	0xFDF
   719                           fsr2h	equ	0xFDA
   720                           fsr2l	equ	0xFD9
   721                           status	equ	0xFD8
   722                           
   723 ;; *************** function _ReadI2C *****************
   724 ;; Defined at:
   725 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\pic18\plib\i2c\i2c_read.c"
   726 ;; Parameters:    Size  Location     Type
   727 ;;		None
   728 ;; Auto vars:     Size  Location     Type
   729 ;;		None
   730 ;; Return value:  Size  Location     Type
   731 ;;                  1    wreg      unsigned char 
   732 ;; Registers used:
   733 ;;		wreg, status,2, status,0
   734 ;; Tracked objects:
   735 ;;		On entry : 0/0
   736 ;;		On exit  : 0/0
   737 ;;		Unchanged: 0/0
   738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   739 ;;      Params:         0       0       0       0       0       0       0       0       0
   740 ;;      Locals:         0       0       0       0       0       0       0       0       0
   741 ;;      Temps:          0       0       0       0       0       0       0       0       0
   742 ;;      Totals:         0       0       0       0       0       0       0       0       0
   743 ;;Total ram usage:        0 bytes
   744 ;; Hardware stack levels used:    1
   745 ;; This function calls:
   746 ;;		Nothing
   747 ;; This function is called by:
   748 ;;		_main
   749 ;; This function uses a non-reentrant model
   750 ;;
   751                           
   752                           	psect	text4
   753  000DD6                     __ptext4:
   754                           	opt stack 0
   755  000DD6                     _ReadI2C:
   756                           	opt stack 30
   757                           
   758                           ;incstack = 0
   759  000DD6  50C6               	movf	4038,w,c	;volatile
   760  000DD8  0B0F               	andlw	15
   761  000DDA  0A08               	xorlw	8
   762  000DDC  B4D8               	btfsc	status,2,c
   763  000DDE  D004               	goto	u210
   764  000DE0  50C6               	movf	4038,w,c	;volatile
   765  000DE2  0B0F               	andlw	15
   766  000DE4  0A0B               	xorlw	11
   767  000DE6  B4D8               	btfsc	status,2,c
   768  000DE8                     u210:
   769  000DE8  86C5               	bsf	4037,3,c	;volatile
   770  000DEA  A0C7               	btfss	4039,0,c	;volatile
   771  000DEC  D7FE               	goto	l138
   772  000DEE  50C9               	movf	4041,w,c	;volatile
   773  000DF0  0012               	return	
   774  000DF2                     __end_of_ReadI2C:
   775                           	opt stack 0
   776                           tblptru	equ	0xFF8
   777                           tblptrh	equ	0xFF7
   778                           tblptrl	equ	0xFF6
   779                           tablat	equ	0xFF5
   780                           wreg	equ	0xFE8
   781                           indf2	equ	0xFDF
   782                           fsr2h	equ	0xFDA
   783                           fsr2l	equ	0xFD9
   784                           status	equ	0xFD8
   785                           
   786 ;; *************** function _OpenI2C *****************
   787 ;; Defined at:
   788 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\pic18\plib\i2c\i2c_open.c"
   789 ;; Parameters:    Size  Location     Type
   790 ;;  sync_mode       1    wreg     unsigned char 
   791 ;;  slew            1    0[COMRAM] unsigned char 
   792 ;; Auto vars:     Size  Location     Type
   793 ;;  sync_mode       1    1[COMRAM] unsigned char 
   794 ;; Return value:  Size  Location     Type
   795 ;;                  1    wreg      void 
   796 ;; Registers used:
   797 ;;		wreg, status,2, status,0
   798 ;; Tracked objects:
   799 ;;		On entry : 0/0
   800 ;;		On exit  : 0/0
   801 ;;		Unchanged: 0/0
   802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   803 ;;      Params:         1       0       0       0       0       0       0       0       0
   804 ;;      Locals:         1       0       0       0       0       0       0       0       0
   805 ;;      Temps:          0       0       0       0       0       0       0       0       0
   806 ;;      Totals:         2       0       0       0       0       0       0       0       0
   807 ;;Total ram usage:        2 bytes
   808 ;; Hardware stack levels used:    1
   809 ;; This function calls:
   810 ;;		Nothing
   811 ;; This function is called by:
   812 ;;		_main
   813 ;; This function uses a non-reentrant model
   814 ;;
   815                           
   816                           	psect	text5
   817  000DB8                     __ptext5:
   818                           	opt stack 0
   819  000DB8                     _OpenI2C:
   820                           	opt stack 30
   821                           
   822                           ;incstack = 0
   823                           ;OpenI2C@sync_mode stored from wreg
   824  000DB8  6E02               	movwf	OpenI2C@sync_mode,c
   825  000DBA  0E3F               	movlw	63
   826  000DBC  16C7               	andwf	4039,f,c	;volatile
   827  000DBE  0E00               	movlw	0
   828  000DC0  6EC6               	movwf	4038,c	;volatile
   829  000DC2  0E00               	movlw	0
   830  000DC4  6EC5               	movwf	4037,c	;volatile
   831  000DC6  5002               	movf	OpenI2C@sync_mode,w,c
   832  000DC8  12C6               	iorwf	4038,f,c	;volatile
   833  000DCA  5001               	movf	OpenI2C@slew,w,c
   834  000DCC  12C7               	iorwf	4039,f,c	;volatile
   835  000DCE  8293               	bsf	3987,1,c	;volatile
   836  000DD0  8093               	bsf	3987,0,c	;volatile
   837  000DD2  8AC6               	bsf	4038,5,c	;volatile
   838  000DD4  0012               	return		;funcret
   839  000DD6                     __end_of_OpenI2C:
   840                           	opt stack 0
   841                           tblptru	equ	0xFF8
   842                           tblptrh	equ	0xFF7
   843                           tblptrl	equ	0xFF6
   844                           tablat	equ	0xFF5
   845                           wreg	equ	0xFE8
   846                           indf2	equ	0xFDF
   847                           fsr2h	equ	0xFDA
   848                           fsr2l	equ	0xFD9
   849                           status	equ	0xFD8
   850                           
   851 ;; *************** function _Lcd_Out2 *****************
   852 ;; Defined at:
   853 ;;		line 117 in file "LCD.h"
   854 ;; Parameters:    Size  Location     Type
   855 ;;  y               1    wreg     unsigned char 
   856 ;;  x               1    3[COMRAM] unsigned char 
   857 ;;  buffer          2    4[COMRAM] PTR unsigned char 
   858 ;;		 -> main@i(2), 
   859 ;; Auto vars:     Size  Location     Type
   860 ;;  y               1    6[COMRAM] unsigned char 
   861 ;;  data            1    7[COMRAM] unsigned char 
   862 ;; Return value:  Size  Location     Type
   863 ;;                  1    wreg      void 
   864 ;; Registers used:
   865 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   866 ;; Tracked objects:
   867 ;;		On entry : 0/0
   868 ;;		On exit  : 0/0
   869 ;;		Unchanged: 0/0
   870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   871 ;;      Params:         3       0       0       0       0       0       0       0       0
   872 ;;      Locals:         2       0       0       0       0       0       0       0       0
   873 ;;      Temps:          0       0       0       0       0       0       0       0       0
   874 ;;      Totals:         5       0       0       0       0       0       0       0       0
   875 ;;Total ram usage:        5 bytes
   876 ;; Hardware stack levels used:    1
   877 ;; Hardware stack levels required when called:    1
   878 ;; This function calls:
   879 ;;		_Lcd_Chr_CP
   880 ;;		_Lcd_Cmd
   881 ;; This function is called by:
   882 ;;		_main
   883 ;; This function uses a non-reentrant model
   884 ;;
   885                           
   886                           	psect	text6
   887  000D0A                     __ptext6:
   888                           	opt stack 0
   889  000D0A                     _Lcd_Out2:
   890                           	opt stack 29
   891                           
   892                           ;incstack = 0
   893                           ;Lcd_Out2@y stored from wreg
   894  000D0A  6E07               	movwf	Lcd_Out2@y,c
   895                           
   896                           ;LCD.h: 119: unsigned char data;
   897                           ;LCD.h: 120: switch (y)
   898  000D0C  D00D               	goto	l47
   899  000D0E  5004               	movf	Lcd_Out2@x,w,c
   900  000D10  0F80               	addlw	128
   901  000D12  D008               	goto	L3
   902  000D14  5004               	movf	Lcd_Out2@x,w,c
   903  000D16  0FC0               	addlw	192
   904  000D18  D005               	goto	L3
   905  000D1A  5004               	movf	Lcd_Out2@x,w,c
   906  000D1C  0F94               	addlw	148
   907  000D1E  D002               	goto	L3
   908  000D20  5004               	movf	Lcd_Out2@x,w,c
   909  000D22  0FD4               	addlw	212
   910  000D24                     L3:
   911  000D24  6E08               	movwf	Lcd_Out2@data,c
   912                           
   913                           ;LCD.h: 127: }
   914                           
   915                           ;LCD.h: 126: default: break;
   916  000D26  D00D               	goto	l49
   917  000D28                     l47:
   918  000D28  5007               	movf	Lcd_Out2@y,w,c
   919                           
   920                           ; Switch size 1, requested type "space"
   921                           ; Number of cases is 4, Range of values is 1 to 4
   922                           ; switch strategies available:
   923                           ; Name         Instructions Cycles
   924                           ; simple_byte           13     7 (average)
   925                           ;	Chosen strategy is simple_byte
   926  000D2A  0A01               	xorlw	1	; case 1
   927  000D2C  B4D8               	btfsc	status,2,c
   928  000D2E  D7EF               	goto	l48
   929  000D30  0A03               	xorlw	3	; case 2
   930  000D32  B4D8               	btfsc	status,2,c
   931  000D34  D7EF               	goto	l50
   932  000D36  0A01               	xorlw	1	; case 3
   933  000D38  B4D8               	btfsc	status,2,c
   934  000D3A  D7EF               	goto	l51
   935  000D3C  0A07               	xorlw	7	; case 4
   936  000D3E  B4D8               	btfsc	status,2,c
   937  000D40  D7EF               	goto	l52
   938  000D42                     l49:
   939                           
   940                           ;LCD.h: 128: Lcd_Cmd(data);
   941  000D42  5008               	movf	Lcd_Out2@data,w,c
   942  000D44  EC9D  F004         	call	_Lcd_Cmd
   943                           
   944                           ;LCD.h: 129: while(*buffer)
   945  000D48  D009               	goto	l54
   946  000D4A                     
   947                           ;LCD.h: 130: {
   948                           ;LCD.h: 131: Lcd_Chr_CP(*buffer);
   949  000D4A  C005  FFD9         	movff	Lcd_Out2@buffer,fsr2l
   950  000D4E  C006  FFDA         	movff	Lcd_Out2@buffer+1,fsr2h
   951  000D52  50DF               	movf	indf2,w,c
   952  000D54  EC03  F004         	call	_Lcd_Chr_CP
   953                           
   954                           ;LCD.h: 132: buffer++;
   955  000D58  4A05               	infsnz	Lcd_Out2@buffer,f,c
   956  000D5A  2A06               	incf	Lcd_Out2@buffer+1,f,c
   957  000D5C                     l54:
   958  000D5C  C005  FFD9         	movff	Lcd_Out2@buffer,fsr2l
   959  000D60  C006  FFDA         	movff	Lcd_Out2@buffer+1,fsr2h
   960  000D64  50DF               	movf	indf2,w,c
   961  000D66  B4D8               	btfsc	status,2,c
   962  000D68  0012               	return	
   963  000D6A  D7EF               	goto	l55
   964  000D6C                     __end_of_Lcd_Out2:
   965                           	opt stack 0
   966                           tblptru	equ	0xFF8
   967                           tblptrh	equ	0xFF7
   968                           tblptrl	equ	0xFF6
   969                           tablat	equ	0xFF5
   970                           wreg	equ	0xFE8
   971                           indf2	equ	0xFDF
   972                           fsr2h	equ	0xFDA
   973                           fsr2l	equ	0xFD9
   974                           status	equ	0xFD8
   975                           
   976 ;; *************** function _Lcd_Chr_CP *****************
   977 ;; Defined at:
   978 ;;		line 138 in file "LCD.h"
   979 ;; Parameters:    Size  Location     Type
   980 ;;  data            1    wreg     unsigned char 
   981 ;; Auto vars:     Size  Location     Type
   982 ;;  data            1    2[COMRAM] unsigned char 
   983 ;; Return value:  Size  Location     Type
   984 ;;                  1    wreg      void 
   985 ;; Registers used:
   986 ;;		wreg, status,2, status,0
   987 ;; Tracked objects:
   988 ;;		On entry : 0/0
   989 ;;		On exit  : 0/0
   990 ;;		Unchanged: 0/0
   991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   992 ;;      Params:         0       0       0       0       0       0       0       0       0
   993 ;;      Locals:         1       0       0       0       0       0       0       0       0
   994 ;;      Temps:          2       0       0       0       0       0       0       0       0
   995 ;;      Totals:         3       0       0       0       0       0       0       0       0
   996 ;;Total ram usage:        3 bytes
   997 ;; Hardware stack levels used:    1
   998 ;; This function calls:
   999 ;;		Nothing
  1000 ;; This function is called by:
  1001 ;;		_Lcd_Out2
  1002 ;;		_Lcd_Out
  1003 ;; This function uses a non-reentrant model
  1004 ;;
  1005                           
  1006                           	psect	text7
  1007  000806                     __ptext7:
  1008                           	opt stack 0
  1009  000806                     _Lcd_Chr_CP:
  1010                           	opt stack 29
  1011                           
  1012                           ;incstack = 0
  1013                           ;Lcd_Chr_CP@data stored from wreg
  1014  000806  6E03               	movwf	Lcd_Chr_CP@data,c
  1015                           
  1016                           ;LCD.h: 139: LATBbits.LATB5 = 0; LATBbits.LATB4 = 1;
  1017  000808  9A8A               	bcf	3978,5,c	;volatile
  1018  00080A  888A               	bsf	3978,4,c	;volatile
  1019                           
  1020                           ;LCD.h: 140: LATBbits.LATB3 = (data & 0b10000000)>>7; LATBbits.LATB2 = (data & 0b0100000
      +                          0)>>6;
  1021  00080C  6A01               	clrf	??_Lcd_Chr_CP& (0+255),c
  1022  00080E  AE03               	btfss	Lcd_Chr_CP@data,7,c
  1023  000810  D001               	bra	u45
  1024  000812  2A01               	incf	??_Lcd_Chr_CP& (0+255),f,c
  1025  000814                     u45:
  1026  000814  0E01               	movlw	1
  1027  000816  1601               	andwf	??_Lcd_Chr_CP,f,c
  1028  000818  4601               	rlncf	??_Lcd_Chr_CP,f,c
  1029  00081A  4601               	rlncf	??_Lcd_Chr_CP,f,c
  1030  00081C  4601               	rlncf	??_Lcd_Chr_CP,f,c
  1031  00081E  508A               	movf	3978,w,c	;volatile
  1032  000820  1801               	xorwf	??_Lcd_Chr_CP,w,c
  1033  000822  0BF7               	andlw	-9
  1034  000824  1801               	xorwf	??_Lcd_Chr_CP,w,c
  1035  000826  6E8A               	movwf	3978,c	;volatile
  1036  000828  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  1037  00082C  0E06               	movlw	6
  1038  00082E  6E02               	movwf	(??_Lcd_Chr_CP+1)& (0+255),c
  1039  000830                     u55:
  1040  000830  90D8               	bcf	status,0,c
  1041  000832  3201               	rrcf	??_Lcd_Chr_CP,f,c
  1042  000834  2E02               	decfsz	(??_Lcd_Chr_CP+1)& (0+255),f,c
  1043  000836  D7FC               	goto	u55
  1044  000838  0E01               	movlw	1
  1045  00083A  1601               	andwf	??_Lcd_Chr_CP,f,c
  1046  00083C  4601               	rlncf	??_Lcd_Chr_CP,f,c
  1047  00083E  4601               	rlncf	??_Lcd_Chr_CP,f,c
  1048  000840  508A               	movf	3978,w,c	;volatile
  1049  000842  1801               	xorwf	??_Lcd_Chr_CP,w,c
  1050  000844  0BFB               	andlw	-5
  1051  000846  1801               	xorwf	??_Lcd_Chr_CP,w,c
  1052  000848  6E8A               	movwf	3978,c	;volatile
  1053                           
  1054                           ;LCD.h: 141: LATDbits.LATD6 = (data & 0b00100000)>>5; LATDbits.LATD7 = (data & 0b0001000
      +                          0)>>4;
  1055  00084A  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  1056  00084E  0E05               	movlw	5
  1057  000850  6E02               	movwf	(??_Lcd_Chr_CP+1)& (0+255),c
  1058  000852                     u65:
  1059  000852  90D8               	bcf	status,0,c
  1060  000854  3201               	rrcf	??_Lcd_Chr_CP,f,c
  1061  000856  2E02               	decfsz	(??_Lcd_Chr_CP+1)& (0+255),f,c
  1062  000858  D7FC               	goto	u65
  1063  00085A  0E01               	movlw	1
  1064  00085C  1601               	andwf	??_Lcd_Chr_CP,f,c
  1065  00085E  3A01               	swapf	??_Lcd_Chr_CP,f,c
  1066  000860  4601               	rlncf	??_Lcd_Chr_CP,f,c
  1067  000862  4601               	rlncf	??_Lcd_Chr_CP,f,c
  1068  000864  508C               	movf	3980,w,c	;volatile
  1069  000866  1801               	xorwf	??_Lcd_Chr_CP,w,c
  1070  000868  0BBF               	andlw	-65
  1071  00086A  1801               	xorwf	??_Lcd_Chr_CP,w,c
  1072  00086C  6E8C               	movwf	3980,c	;volatile
  1073  00086E  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  1074  000872  3A01               	swapf	??_Lcd_Chr_CP,f,c
  1075  000874  0E0F               	movlw	15
  1076  000876  1601               	andwf	??_Lcd_Chr_CP,f,c
  1077  000878  0E01               	movlw	1
  1078  00087A  1601               	andwf	??_Lcd_Chr_CP,f,c
  1079  00087C  3201               	rrcf	??_Lcd_Chr_CP,f,c
  1080  00087E  3201               	rrcf	??_Lcd_Chr_CP,f,c
  1081  000880  508C               	movf	3980,w,c	;volatile
  1082  000882  1801               	xorwf	??_Lcd_Chr_CP,w,c
  1083  000884  0B7F               	andlw	-129
  1084  000886  1801               	xorwf	??_Lcd_Chr_CP,w,c
  1085  000888  6E8C               	movwf	3980,c	;volatile
  1086                           
  1087                           ;LCD.h: 142: _delay(10);
  1088  00088A  0E03               	movlw	3
  1089  00088C                     u457:
  1090  00088C  2EE8               	decfsz	wreg,f,c
  1091  00088E  D7FE               	bra	u457
  1092  000890  F000               	nop	
  1093                           
  1094                           ;LCD.h: 143: LATBbits.LATB5 = 1; _delay((unsigned long)((5)*(4E6/4000000.0))); LATBbits.
      +                          LATB5 = 0;
  1095  000892  8A8A               	bsf	3978,5,c	;volatile
  1096  000894  D000               	nop2		;2 cycle nop
  1097  000896  D000               	nop2		;2 cycle nop
  1098  000898  F000               	nop	
  1099  00089A  9A8A               	bcf	3978,5,c	;volatile
  1100                           
  1101                           ;LCD.h: 144: LATBbits.LATB3 = (data & 0b00001000)>>3; LATBbits.LATB2 = (data & 0b0000010
      +                          0)>>2;
  1102  00089C  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  1103  0008A0  90D8               	bcf	status,0,c
  1104  0008A2  3201               	rrcf	??_Lcd_Chr_CP,f,c
  1105  0008A4  90D8               	bcf	status,0,c
  1106  0008A6  3201               	rrcf	??_Lcd_Chr_CP,f,c
  1107  0008A8  90D8               	bcf	status,0,c
  1108  0008AA  3201               	rrcf	??_Lcd_Chr_CP,f,c
  1109  0008AC  0E01               	movlw	1
  1110  0008AE  1601               	andwf	??_Lcd_Chr_CP,f,c
  1111  0008B0  4601               	rlncf	??_Lcd_Chr_CP,f,c
  1112  0008B2  4601               	rlncf	??_Lcd_Chr_CP,f,c
  1113  0008B4  4601               	rlncf	??_Lcd_Chr_CP,f,c
  1114  0008B6  508A               	movf	3978,w,c	;volatile
  1115  0008B8  1801               	xorwf	??_Lcd_Chr_CP,w,c
  1116  0008BA  0BF7               	andlw	-9
  1117  0008BC  1801               	xorwf	??_Lcd_Chr_CP,w,c
  1118  0008BE  6E8A               	movwf	3978,c	;volatile
  1119  0008C0  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  1120  0008C4  90D8               	bcf	status,0,c
  1121  0008C6  3201               	rrcf	??_Lcd_Chr_CP,f,c
  1122  0008C8  90D8               	bcf	status,0,c
  1123  0008CA  3201               	rrcf	??_Lcd_Chr_CP,f,c
  1124  0008CC  0E01               	movlw	1
  1125  0008CE  1601               	andwf	??_Lcd_Chr_CP,f,c
  1126  0008D0  4601               	rlncf	??_Lcd_Chr_CP,f,c
  1127  0008D2  4601               	rlncf	??_Lcd_Chr_CP,f,c
  1128  0008D4  508A               	movf	3978,w,c	;volatile
  1129  0008D6  1801               	xorwf	??_Lcd_Chr_CP,w,c
  1130  0008D8  0BFB               	andlw	-5
  1131  0008DA  1801               	xorwf	??_Lcd_Chr_CP,w,c
  1132  0008DC  6E8A               	movwf	3978,c	;volatile
  1133                           
  1134                           ;LCD.h: 145: LATDbits.LATD6 = (data & 0b00000010)>>1; LATDbits.LATD7 = (data & 0b0000000
      +                          1);
  1135  0008DE  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  1136  0008E2  90D8               	bcf	status,0,c
  1137  0008E4  3201               	rrcf	??_Lcd_Chr_CP,f,c
  1138  0008E6  0E01               	movlw	1
  1139  0008E8  1601               	andwf	??_Lcd_Chr_CP,f,c
  1140  0008EA  3A01               	swapf	??_Lcd_Chr_CP,f,c
  1141  0008EC  4601               	rlncf	??_Lcd_Chr_CP,f,c
  1142  0008EE  4601               	rlncf	??_Lcd_Chr_CP,f,c
  1143  0008F0  508C               	movf	3980,w,c	;volatile
  1144  0008F2  1801               	xorwf	??_Lcd_Chr_CP,w,c
  1145  0008F4  0BBF               	andlw	-65
  1146  0008F6  1801               	xorwf	??_Lcd_Chr_CP,w,c
  1147  0008F8  6E8C               	movwf	3980,c	;volatile
  1148  0008FA  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  1149  0008FE  0E01               	movlw	1
  1150  000900  1601               	andwf	??_Lcd_Chr_CP,f,c
  1151  000902  3201               	rrcf	??_Lcd_Chr_CP,f,c
  1152  000904  3201               	rrcf	??_Lcd_Chr_CP,f,c
  1153  000906  508C               	movf	3980,w,c	;volatile
  1154  000908  1801               	xorwf	??_Lcd_Chr_CP,w,c
  1155  00090A  0B7F               	andlw	-129
  1156  00090C  1801               	xorwf	??_Lcd_Chr_CP,w,c
  1157  00090E  6E8C               	movwf	3980,c	;volatile
  1158                           
  1159                           ;LCD.h: 146: _delay(10);
  1160  000910  0E03               	movlw	3
  1161  000912                     u467:
  1162  000912  2EE8               	decfsz	wreg,f,c
  1163  000914  D7FE               	bra	u467
  1164  000916  F000               	nop	
  1165                           
  1166                           ;LCD.h: 147: LATBbits.LATB5 = 1; _delay((unsigned long)((5)*(4E6/4000000.0))); LATBbits.
      +                          LATB5 = 0;
  1167  000918  8A8A               	bsf	3978,5,c	;volatile
  1168  00091A  D000               	nop2		;2 cycle nop
  1169  00091C  D000               	nop2		;2 cycle nop
  1170  00091E  F000               	nop	
  1171  000920  9A8A               	bcf	3978,5,c	;volatile
  1172                           
  1173                           ;LCD.h: 148: _delay((unsigned long)((5)*(4E6/4000000.0))); _delay((unsigned long)((5500)
      +                          *(4E6/4000000.0)));
  1174  000922  D000               	nop2		;2 cycle nop
  1175  000924  D000               	nop2		;2 cycle nop
  1176  000926  F000               	nop	
  1177  000928  0E08               	movlw	8
  1178  00092A  6E01               	movwf	??_Lcd_Chr_CP& (0+255),c
  1179  00092C  0E23               	movlw	35
  1180  00092E                     u477:
  1181  00092E  2EE8               	decfsz	wreg,f,c
  1182  000930  D7FE               	bra	u477
  1183  000932  2E01               	decfsz	??_Lcd_Chr_CP& (0+255),f,c
  1184  000934  D7FC               	bra	u477
  1185  000936  F000               	nop	
  1186  000938  0012               	return		;funcret
  1187  00093A                     __end_of_Lcd_Chr_CP:
  1188                           	opt stack 0
  1189                           tblptru	equ	0xFF8
  1190                           tblptrh	equ	0xFF7
  1191                           tblptrl	equ	0xFF6
  1192                           tablat	equ	0xFF5
  1193                           wreg	equ	0xFE8
  1194                           indf2	equ	0xFDF
  1195                           fsr2h	equ	0xFDA
  1196                           fsr2l	equ	0xFD9
  1197                           status	equ	0xFD8
  1198                           
  1199 ;; *************** function _Lcd_Init *****************
  1200 ;; Defined at:
  1201 ;;		line 54 in file "LCD.h"
  1202 ;; Parameters:    Size  Location     Type
  1203 ;;		None
  1204 ;; Auto vars:     Size  Location     Type
  1205 ;;  data            1    4[COMRAM] unsigned char 
  1206 ;; Return value:  Size  Location     Type
  1207 ;;                  1    wreg      void 
  1208 ;; Registers used:
  1209 ;;		wreg, status,2, status,0, cstack
  1210 ;; Tracked objects:
  1211 ;;		On entry : 0/0
  1212 ;;		On exit  : 0/0
  1213 ;;		Unchanged: 0/0
  1214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1215 ;;      Params:         0       0       0       0       0       0       0       0       0
  1216 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1217 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1218 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1219 ;;Total ram usage:        2 bytes
  1220 ;; Hardware stack levels used:    1
  1221 ;; Hardware stack levels required when called:    1
  1222 ;; This function calls:
  1223 ;;		_Lcd_Cmd
  1224 ;; This function is called by:
  1225 ;;		_main
  1226 ;; This function uses a non-reentrant model
  1227 ;;
  1228                           
  1229                           	psect	text8
  1230  000A68                     __ptext8:
  1231                           	opt stack 0
  1232  000A68                     _Lcd_Init:
  1233                           	opt stack 29
  1234                           
  1235                           ;LCD.h: 55: unsigned char data;
  1236                           ;LCD.h: 56: TRISBbits.TRISB3 = 0;
  1237                           
  1238                           ;incstack = 0
  1239  000A68  9693               	bcf	3987,3,c	;volatile
  1240                           
  1241                           ;LCD.h: 57: TRISBbits.TRISB2 = 0;
  1242  000A6A  9493               	bcf	3987,2,c	;volatile
  1243                           
  1244                           ;LCD.h: 58: TRISDbits.TRISD6 = 0;
  1245  000A6C  9C95               	bcf	3989,6,c	;volatile
  1246                           
  1247                           ;LCD.h: 59: TRISDbits.TRISD7 = 0;
  1248  000A6E  9E95               	bcf	3989,7,c	;volatile
  1249                           
  1250                           ;LCD.h: 60: TRISBbits.TRISB5 = 0;
  1251  000A70  9A93               	bcf	3987,5,c	;volatile
  1252                           
  1253                           ;LCD.h: 61: TRISBbits.TRISB4 = 0;
  1254  000A72  9893               	bcf	3987,4,c	;volatile
  1255                           
  1256                           ;LCD.h: 62: LATBbits.LATB3 = 0;
  1257  000A74  968A               	bcf	3978,3,c	;volatile
  1258                           
  1259                           ;LCD.h: 63: LATBbits.LATB2 = 0;
  1260  000A76  948A               	bcf	3978,2,c	;volatile
  1261                           
  1262                           ;LCD.h: 64: LATDbits.LATD6 = 0;
  1263  000A78  9C8C               	bcf	3980,6,c	;volatile
  1264                           
  1265                           ;LCD.h: 65: LATDbits.LATD7 = 0;
  1266  000A7A  9E8C               	bcf	3980,7,c	;volatile
  1267                           
  1268                           ;LCD.h: 66: LATBbits.LATB5 = 0;
  1269  000A7C  9A8A               	bcf	3978,5,c	;volatile
  1270                           
  1271                           ;LCD.h: 67: LATBbits.LATB4 = 0;
  1272  000A7E  988A               	bcf	3978,4,c	;volatile
  1273                           
  1274                           ;LCD.h: 68: _delay((unsigned long)((5500)*(4E6/4000000.0)));
  1275  000A80  0E08               	movlw	8
  1276  000A82  6E04               	movwf	??_Lcd_Init& (0+255),c
  1277  000A84  0E23               	movlw	35
  1278  000A86                     u487:
  1279  000A86  2EE8               	decfsz	wreg,f,c
  1280  000A88  D7FE               	bra	u487
  1281  000A8A  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  1282  000A8C  D7FC               	bra	u487
  1283  000A8E  F000               	nop	
  1284                           
  1285                           ;LCD.h: 69: _delay((unsigned long)((5500)*(4E6/4000000.0)));
  1286  000A90  0E08               	movlw	8
  1287  000A92  6E04               	movwf	??_Lcd_Init& (0+255),c
  1288  000A94  0E23               	movlw	35
  1289  000A96                     u497:
  1290  000A96  2EE8               	decfsz	wreg,f,c
  1291  000A98  D7FE               	bra	u497
  1292  000A9A  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  1293  000A9C  D7FC               	bra	u497
  1294  000A9E  F000               	nop	
  1295                           
  1296                           ;LCD.h: 70: _delay((unsigned long)((5500)*(4E6/4000000.0)));
  1297  000AA0  0E08               	movlw	8
  1298  000AA2  6E04               	movwf	??_Lcd_Init& (0+255),c
  1299  000AA4  0E23               	movlw	35
  1300  000AA6                     u507:
  1301  000AA6  2EE8               	decfsz	wreg,f,c
  1302  000AA8  D7FE               	bra	u507
  1303  000AAA  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  1304  000AAC  D7FC               	bra	u507
  1305  000AAE  F000               	nop	
  1306                           
  1307                           ;LCD.h: 71: _delay((unsigned long)((5500)*(4E6/4000000.0)));
  1308  000AB0  0E08               	movlw	8
  1309  000AB2  6E04               	movwf	??_Lcd_Init& (0+255),c
  1310  000AB4  0E23               	movlw	35
  1311  000AB6                     u517:
  1312  000AB6  2EE8               	decfsz	wreg,f,c
  1313  000AB8  D7FE               	bra	u517
  1314  000ABA  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  1315  000ABC  D7FC               	bra	u517
  1316  000ABE  F000               	nop	
  1317                           
  1318                           ;LCD.h: 72: _delay((unsigned long)((5500)*(4E6/4000000.0)));
  1319  000AC0  0E08               	movlw	8
  1320  000AC2  6E04               	movwf	??_Lcd_Init& (0+255),c
  1321  000AC4  0E23               	movlw	35
  1322  000AC6                     u527:
  1323  000AC6  2EE8               	decfsz	wreg,f,c
  1324  000AC8  D7FE               	bra	u527
  1325  000ACA  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  1326  000ACC  D7FC               	bra	u527
  1327  000ACE  F000               	nop	
  1328                           
  1329                           ;LCD.h: 73: _delay((unsigned long)((5500)*(4E6/4000000.0)));
  1330  000AD0  0E08               	movlw	8
  1331  000AD2  6E04               	movwf	??_Lcd_Init& (0+255),c
  1332  000AD4  0E23               	movlw	35
  1333  000AD6                     u537:
  1334  000AD6  2EE8               	decfsz	wreg,f,c
  1335  000AD8  D7FE               	bra	u537
  1336  000ADA  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  1337  000ADC  D7FC               	bra	u537
  1338  000ADE  F000               	nop	
  1339                           
  1340                           ;LCD.h: 74: for(data = 1; data < 4; data ++)
  1341  000AE0  0E01               	movlw	1
  1342  000AE2  6E05               	movwf	Lcd_Init@data,c
  1343  000AE4  D01E               	goto	L4
  1344  000AE6                     l29:
  1345                           
  1346                           ;LCD.h: 75: {
  1347                           ;LCD.h: 76: LATBbits.LATB3 = 0; LATBbits.LATB2 = 0; LATDbits.LATD6 = 1; LATDbits.LATD7 =
      +                           1; LATBbits.LATB5 = 0;
  1348  000AE6  968A               	bcf	3978,3,c	;volatile
  1349  000AE8  948A               	bcf	3978,2,c	;volatile
  1350  000AEA  8C8C               	bsf	3980,6,c	;volatile
  1351  000AEC  8E8C               	bsf	3980,7,c	;volatile
  1352  000AEE  9A8A               	bcf	3978,5,c	;volatile
  1353                           
  1354                           ;LCD.h: 77: LATBbits.LATB4 = 0; LATBbits.LATB3 = 0; LATBbits.LATB2 = 0; LATDbits.LATD6 =
      +                           1; LATDbits.LATD7 = 1;
  1355  000AF0  988A               	bcf	3978,4,c	;volatile
  1356  000AF2  968A               	bcf	3978,3,c	;volatile
  1357  000AF4  948A               	bcf	3978,2,c	;volatile
  1358  000AF6  8C8C               	bsf	3980,6,c	;volatile
  1359  000AF8  8E8C               	bsf	3980,7,c	;volatile
  1360                           
  1361                           ;LCD.h: 78: LATBbits.LATB5 = 1; LATBbits.LATB4 = 0;
  1362  000AFA  8A8A               	bsf	3978,5,c	;volatile
  1363  000AFC  988A               	bcf	3978,4,c	;volatile
  1364                           
  1365                           ;LCD.h: 79: _delay((unsigned long)((5)*(4E6/4000000.0)));
  1366  000AFE  D000               	nop2		;2 cycle nop
  1367  000B00  D000               	nop2		;2 cycle nop
  1368  000B02  F000               	nop	
  1369                           
  1370                           ;LCD.h: 80: LATBbits.LATB3 = 0; LATBbits.LATB2 = 0; LATDbits.LATD6 = 1; LATDbits.LATD7 =
      +                           1; LATBbits.LATB5 = 0;
  1371  000B04  968A               	bcf	3978,3,c	;volatile
  1372  000B06  948A               	bcf	3978,2,c	;volatile
  1373  000B08  8C8C               	bsf	3980,6,c	;volatile
  1374  000B0A  8E8C               	bsf	3980,7,c	;volatile
  1375  000B0C  9A8A               	bcf	3978,5,c	;volatile
  1376                           
  1377                           ;LCD.h: 81: LATBbits.LATB4 = 0;
  1378  000B0E  988A               	bcf	3978,4,c	;volatile
  1379                           
  1380                           ;LCD.h: 82: _delay((unsigned long)((5500)*(4E6/4000000.0)));
  1381  000B10  0E08               	movlw	8
  1382  000B12  6E04               	movwf	??_Lcd_Init& (0+255),c
  1383  000B14  0E23               	movlw	35
  1384  000B16                     u547:
  1385  000B16  2EE8               	decfsz	wreg,f,c
  1386  000B18  D7FE               	bra	u547
  1387  000B1A  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  1388  000B1C  D7FC               	bra	u547
  1389  000B1E  F000               	nop	
  1390  000B20  2A05               	incf	Lcd_Init@data,f,c
  1391  000B22                     L4:
  1392  000B22  0E03               	movlw	3
  1393  000B24  6405               	cpfsgt	Lcd_Init@data,c
  1394  000B26  D7DF               	goto	l29
  1395                           
  1396                           ;LCD.h: 83: }
  1397                           ;LCD.h: 84: LATBbits.LATB3 = 0; LATBbits.LATB2 = 0; LATDbits.LATD6 = 1; LATDbits.LATD7 =
      +                           0; LATBbits.LATB5 = 0; LATBbits.LATB4 = 0;
  1398  000B28  968A               	bcf	3978,3,c	;volatile
  1399  000B2A  948A               	bcf	3978,2,c	;volatile
  1400  000B2C  8C8C               	bsf	3980,6,c	;volatile
  1401  000B2E  9E8C               	bcf	3980,7,c	;volatile
  1402  000B30  9A8A               	bcf	3978,5,c	;volatile
  1403  000B32  988A               	bcf	3978,4,c	;volatile
  1404                           
  1405                           ;LCD.h: 85: LATBbits.LATB3 = 0; LATBbits.LATB2 = 0; LATDbits.LATD6 = 1; LATDbits.LATD7 =
      +                           0; LATBbits.LATB5 = 1; LATBbits.LATB4 = 0;
  1406  000B34  968A               	bcf	3978,3,c	;volatile
  1407  000B36  948A               	bcf	3978,2,c	;volatile
  1408  000B38  8C8C               	bsf	3980,6,c	;volatile
  1409  000B3A  9E8C               	bcf	3980,7,c	;volatile
  1410  000B3C  8A8A               	bsf	3978,5,c	;volatile
  1411  000B3E  988A               	bcf	3978,4,c	;volatile
  1412                           
  1413                           ;LCD.h: 86: _delay((unsigned long)((5)*(4E6/4000000.0)));
  1414  000B40  D000               	nop2		;2 cycle nop
  1415  000B42  D000               	nop2		;2 cycle nop
  1416  000B44  F000               	nop	
  1417                           
  1418                           ;LCD.h: 87: LATBbits.LATB3 = 0; LATBbits.LATB2 = 0; LATDbits.LATD6 = 1; LATDbits.LATD7 =
      +                           0; LATBbits.LATB5 = 0; LATBbits.LATB4 = 0;
  1419  000B46  968A               	bcf	3978,3,c	;volatile
  1420  000B48  948A               	bcf	3978,2,c	;volatile
  1421  000B4A  8C8C               	bsf	3980,6,c	;volatile
  1422  000B4C  9E8C               	bcf	3980,7,c	;volatile
  1423  000B4E  9A8A               	bcf	3978,5,c	;volatile
  1424  000B50  988A               	bcf	3978,4,c	;volatile
  1425                           
  1426                           ;LCD.h: 88: _delay((unsigned long)((5500)*(4E6/4000000.0)));
  1427  000B52  0E08               	movlw	8
  1428  000B54  6E04               	movwf	??_Lcd_Init& (0+255),c
  1429  000B56  0E23               	movlw	35
  1430  000B58                     u557:
  1431  000B58  2EE8               	decfsz	wreg,f,c
  1432  000B5A  D7FE               	bra	u557
  1433  000B5C  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  1434  000B5E  D7FC               	bra	u557
  1435  000B60  F000               	nop	
  1436                           
  1437                           ;LCD.h: 89: data = 40; Lcd_Cmd(data);
  1438  000B62  0E28               	movlw	40
  1439  000B64  6E05               	movwf	Lcd_Init@data,c
  1440  000B66  5005               	movf	Lcd_Init@data,w,c
  1441  000B68  EC9D  F004         	call	_Lcd_Cmd
  1442                           
  1443                           ;LCD.h: 90: data = 16; Lcd_Cmd(data);
  1444  000B6C  0E10               	movlw	16
  1445  000B6E  6E05               	movwf	Lcd_Init@data,c
  1446  000B70  5005               	movf	Lcd_Init@data,w,c
  1447  000B72  EC9D  F004         	call	_Lcd_Cmd
  1448                           
  1449                           ;LCD.h: 91: data = 1; Lcd_Cmd(data);
  1450  000B76  0E01               	movlw	1
  1451  000B78  6E05               	movwf	Lcd_Init@data,c
  1452  000B7A  5005               	movf	Lcd_Init@data,w,c
  1453  000B7C  EC9D  F004         	call	_Lcd_Cmd
  1454                           
  1455                           ;LCD.h: 92: data = 15; Lcd_Cmd(data);
  1456  000B80  0E0F               	movlw	15
  1457  000B82  6E05               	movwf	Lcd_Init@data,c
  1458  000B84  5005               	movf	Lcd_Init@data,w,c
  1459  000B86  EC9D  F004         	call	_Lcd_Cmd
  1460  000B8A  0012               	return		;funcret
  1461  000B8C                     __end_of_Lcd_Init:
  1462                           	opt stack 0
  1463                           tblptru	equ	0xFF8
  1464                           tblptrh	equ	0xFF7
  1465                           tblptrl	equ	0xFF6
  1466                           tablat	equ	0xFF5
  1467                           wreg	equ	0xFE8
  1468                           indf2	equ	0xFDF
  1469                           fsr2h	equ	0xFDA
  1470                           fsr2l	equ	0xFD9
  1471                           status	equ	0xFD8
  1472                           
  1473 ;; *************** function _Lcd_Cmd *****************
  1474 ;; Defined at:
  1475 ;;		line 152 in file "LCD.h"
  1476 ;; Parameters:    Size  Location     Type
  1477 ;;  data            1    wreg     unsigned char 
  1478 ;; Auto vars:     Size  Location     Type
  1479 ;;  data            1    2[COMRAM] unsigned char 
  1480 ;; Return value:  Size  Location     Type
  1481 ;;                  1    wreg      void 
  1482 ;; Registers used:
  1483 ;;		wreg, status,2, status,0
  1484 ;; Tracked objects:
  1485 ;;		On entry : 0/0
  1486 ;;		On exit  : 0/0
  1487 ;;		Unchanged: 0/0
  1488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1489 ;;      Params:         0       0       0       0       0       0       0       0       0
  1490 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1491 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1492 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1493 ;;Total ram usage:        3 bytes
  1494 ;; Hardware stack levels used:    1
  1495 ;; This function calls:
  1496 ;;		Nothing
  1497 ;; This function is called by:
  1498 ;;		_Lcd_Init
  1499 ;;		_Lcd_Out2
  1500 ;;		_main
  1501 ;;		_Lcd_Out
  1502 ;; This function uses a non-reentrant model
  1503 ;;
  1504                           
  1505                           	psect	text9
  1506  00093A                     __ptext9:
  1507                           	opt stack 0
  1508  00093A                     _Lcd_Cmd:
  1509                           	opt stack 29
  1510                           
  1511                           ;incstack = 0
  1512                           ;Lcd_Cmd@data stored from wreg
  1513  00093A  6E03               	movwf	Lcd_Cmd@data,c
  1514                           
  1515                           ;LCD.h: 153: LATBbits.LATB5 = 0; LATBbits.LATB4 = 0;
  1516  00093C  9A8A               	bcf	3978,5,c	;volatile
  1517  00093E  988A               	bcf	3978,4,c	;volatile
  1518                           
  1519                           ;LCD.h: 154: LATBbits.LATB3 = (data & 0b10000000)>>7; LATBbits.LATB2 = (data & 0b0100000
      +                          0)>>6;
  1520  000940  6A01               	clrf	??_Lcd_Cmd& (0+255),c
  1521  000942  AE03               	btfss	Lcd_Cmd@data,7,c
  1522  000944  D001               	bra	u15
  1523  000946  2A01               	incf	??_Lcd_Cmd& (0+255),f,c
  1524  000948                     u15:
  1525  000948  0E01               	movlw	1
  1526  00094A  1601               	andwf	??_Lcd_Cmd,f,c
  1527  00094C  4601               	rlncf	??_Lcd_Cmd,f,c
  1528  00094E  4601               	rlncf	??_Lcd_Cmd,f,c
  1529  000950  4601               	rlncf	??_Lcd_Cmd,f,c
  1530  000952  508A               	movf	3978,w,c	;volatile
  1531  000954  1801               	xorwf	??_Lcd_Cmd,w,c
  1532  000956  0BF7               	andlw	-9
  1533  000958  1801               	xorwf	??_Lcd_Cmd,w,c
  1534  00095A  6E8A               	movwf	3978,c	;volatile
  1535  00095C  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  1536  000960  0E06               	movlw	6
  1537  000962  6E02               	movwf	(??_Lcd_Cmd+1)& (0+255),c
  1538  000964                     u25:
  1539  000964  90D8               	bcf	status,0,c
  1540  000966  3201               	rrcf	??_Lcd_Cmd,f,c
  1541  000968  2E02               	decfsz	(??_Lcd_Cmd+1)& (0+255),f,c
  1542  00096A  D7FC               	goto	u25
  1543  00096C  0E01               	movlw	1
  1544  00096E  1601               	andwf	??_Lcd_Cmd,f,c
  1545  000970  4601               	rlncf	??_Lcd_Cmd,f,c
  1546  000972  4601               	rlncf	??_Lcd_Cmd,f,c
  1547  000974  508A               	movf	3978,w,c	;volatile
  1548  000976  1801               	xorwf	??_Lcd_Cmd,w,c
  1549  000978  0BFB               	andlw	-5
  1550  00097A  1801               	xorwf	??_Lcd_Cmd,w,c
  1551  00097C  6E8A               	movwf	3978,c	;volatile
  1552                           
  1553                           ;LCD.h: 155: LATDbits.LATD6 = (data & 0b00100000)>>5; LATDbits.LATD7 = (data & 0b0001000
      +                          0)>>4;
  1554  00097E  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  1555  000982  0E05               	movlw	5
  1556  000984  6E02               	movwf	(??_Lcd_Cmd+1)& (0+255),c
  1557  000986                     u35:
  1558  000986  90D8               	bcf	status,0,c
  1559  000988  3201               	rrcf	??_Lcd_Cmd,f,c
  1560  00098A  2E02               	decfsz	(??_Lcd_Cmd+1)& (0+255),f,c
  1561  00098C  D7FC               	goto	u35
  1562  00098E  0E01               	movlw	1
  1563  000990  1601               	andwf	??_Lcd_Cmd,f,c
  1564  000992  3A01               	swapf	??_Lcd_Cmd,f,c
  1565  000994  4601               	rlncf	??_Lcd_Cmd,f,c
  1566  000996  4601               	rlncf	??_Lcd_Cmd,f,c
  1567  000998  508C               	movf	3980,w,c	;volatile
  1568  00099A  1801               	xorwf	??_Lcd_Cmd,w,c
  1569  00099C  0BBF               	andlw	-65
  1570  00099E  1801               	xorwf	??_Lcd_Cmd,w,c
  1571  0009A0  6E8C               	movwf	3980,c	;volatile
  1572  0009A2  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  1573  0009A6  3A01               	swapf	??_Lcd_Cmd,f,c
  1574  0009A8  0E0F               	movlw	15
  1575  0009AA  1601               	andwf	??_Lcd_Cmd,f,c
  1576  0009AC  0E01               	movlw	1
  1577  0009AE  1601               	andwf	??_Lcd_Cmd,f,c
  1578  0009B0  3201               	rrcf	??_Lcd_Cmd,f,c
  1579  0009B2  3201               	rrcf	??_Lcd_Cmd,f,c
  1580  0009B4  508C               	movf	3980,w,c	;volatile
  1581  0009B6  1801               	xorwf	??_Lcd_Cmd,w,c
  1582  0009B8  0B7F               	andlw	-129
  1583  0009BA  1801               	xorwf	??_Lcd_Cmd,w,c
  1584  0009BC  6E8C               	movwf	3980,c	;volatile
  1585                           
  1586                           ;LCD.h: 156: _delay(10);
  1587  0009BE  0E03               	movlw	3
  1588  0009C0                     u567:
  1589  0009C0  2EE8               	decfsz	wreg,f,c
  1590  0009C2  D7FE               	bra	u567
  1591  0009C4  F000               	nop	
  1592                           
  1593                           ;LCD.h: 157: LATBbits.LATB5 = 1; _delay((unsigned long)((5)*(4E6/4000000.0))); LATBbits.
      +                          LATB5 = 0;
  1594  0009C6  8A8A               	bsf	3978,5,c	;volatile
  1595  0009C8  D000               	nop2		;2 cycle nop
  1596  0009CA  D000               	nop2		;2 cycle nop
  1597  0009CC  F000               	nop	
  1598  0009CE  9A8A               	bcf	3978,5,c	;volatile
  1599                           
  1600                           ;LCD.h: 158: LATBbits.LATB3 = (data & 0b00001000)>>3; LATBbits.LATB2 = (data & 0b0000010
      +                          0)>>2;
  1601  0009D0  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  1602  0009D4  90D8               	bcf	status,0,c
  1603  0009D6  3201               	rrcf	??_Lcd_Cmd,f,c
  1604  0009D8  90D8               	bcf	status,0,c
  1605  0009DA  3201               	rrcf	??_Lcd_Cmd,f,c
  1606  0009DC  90D8               	bcf	status,0,c
  1607  0009DE  3201               	rrcf	??_Lcd_Cmd,f,c
  1608  0009E0  0E01               	movlw	1
  1609  0009E2  1601               	andwf	??_Lcd_Cmd,f,c
  1610  0009E4  4601               	rlncf	??_Lcd_Cmd,f,c
  1611  0009E6  4601               	rlncf	??_Lcd_Cmd,f,c
  1612  0009E8  4601               	rlncf	??_Lcd_Cmd,f,c
  1613  0009EA  508A               	movf	3978,w,c	;volatile
  1614  0009EC  1801               	xorwf	??_Lcd_Cmd,w,c
  1615  0009EE  0BF7               	andlw	-9
  1616  0009F0  1801               	xorwf	??_Lcd_Cmd,w,c
  1617  0009F2  6E8A               	movwf	3978,c	;volatile
  1618  0009F4  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  1619  0009F8  90D8               	bcf	status,0,c
  1620  0009FA  3201               	rrcf	??_Lcd_Cmd,f,c
  1621  0009FC  90D8               	bcf	status,0,c
  1622  0009FE  3201               	rrcf	??_Lcd_Cmd,f,c
  1623  000A00  0E01               	movlw	1
  1624  000A02  1601               	andwf	??_Lcd_Cmd,f,c
  1625  000A04  4601               	rlncf	??_Lcd_Cmd,f,c
  1626  000A06  4601               	rlncf	??_Lcd_Cmd,f,c
  1627  000A08  508A               	movf	3978,w,c	;volatile
  1628  000A0A  1801               	xorwf	??_Lcd_Cmd,w,c
  1629  000A0C  0BFB               	andlw	-5
  1630  000A0E  1801               	xorwf	??_Lcd_Cmd,w,c
  1631  000A10  6E8A               	movwf	3978,c	;volatile
  1632                           
  1633                           ;LCD.h: 159: LATDbits.LATD6 = (data & 0b00000010)>>1; LATDbits.LATD7 = (data & 0b0000000
      +                          1);
  1634  000A12  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  1635  000A16  90D8               	bcf	status,0,c
  1636  000A18  3201               	rrcf	??_Lcd_Cmd,f,c
  1637  000A1A  0E01               	movlw	1
  1638  000A1C  1601               	andwf	??_Lcd_Cmd,f,c
  1639  000A1E  3A01               	swapf	??_Lcd_Cmd,f,c
  1640  000A20  4601               	rlncf	??_Lcd_Cmd,f,c
  1641  000A22  4601               	rlncf	??_Lcd_Cmd,f,c
  1642  000A24  508C               	movf	3980,w,c	;volatile
  1643  000A26  1801               	xorwf	??_Lcd_Cmd,w,c
  1644  000A28  0BBF               	andlw	-65
  1645  000A2A  1801               	xorwf	??_Lcd_Cmd,w,c
  1646  000A2C  6E8C               	movwf	3980,c	;volatile
  1647  000A2E  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  1648  000A32  0E01               	movlw	1
  1649  000A34  1601               	andwf	??_Lcd_Cmd,f,c
  1650  000A36  3201               	rrcf	??_Lcd_Cmd,f,c
  1651  000A38  3201               	rrcf	??_Lcd_Cmd,f,c
  1652  000A3A  508C               	movf	3980,w,c	;volatile
  1653  000A3C  1801               	xorwf	??_Lcd_Cmd,w,c
  1654  000A3E  0B7F               	andlw	-129
  1655  000A40  1801               	xorwf	??_Lcd_Cmd,w,c
  1656  000A42  6E8C               	movwf	3980,c	;volatile
  1657                           
  1658                           ;LCD.h: 160: _delay(10);
  1659  000A44  0E03               	movlw	3
  1660  000A46                     u577:
  1661  000A46  2EE8               	decfsz	wreg,f,c
  1662  000A48  D7FE               	bra	u577
  1663  000A4A  F000               	nop	
  1664                           
  1665                           ;LCD.h: 161: LATBbits.LATB5 = 1; _delay((unsigned long)((5)*(4E6/4000000.0))); LATBbits.
      +                          LATB5 = 0;
  1666  000A4C  8A8A               	bsf	3978,5,c	;volatile
  1667  000A4E  D000               	nop2		;2 cycle nop
  1668  000A50  D000               	nop2		;2 cycle nop
  1669  000A52  F000               	nop	
  1670  000A54  9A8A               	bcf	3978,5,c	;volatile
  1671                           
  1672                           ;LCD.h: 162: _delay((unsigned long)((5500)*(4E6/4000000.0)));
  1673  000A56  0E08               	movlw	8
  1674  000A58  6E01               	movwf	??_Lcd_Cmd& (0+255),c
  1675  000A5A  0E23               	movlw	35
  1676  000A5C                     u587:
  1677  000A5C  2EE8               	decfsz	wreg,f,c
  1678  000A5E  D7FE               	bra	u587
  1679  000A60  2E01               	decfsz	??_Lcd_Cmd& (0+255),f,c
  1680  000A62  D7FC               	bra	u587
  1681  000A64  F000               	nop	
  1682  000A66  0012               	return		;funcret
  1683  000A68                     __end_of_Lcd_Cmd:
  1684                           	opt stack 0
  1685                           tblptru	equ	0xFF8
  1686                           tblptrh	equ	0xFF7
  1687                           tblptrl	equ	0xFF6
  1688                           tablat	equ	0xFF5
  1689                           wreg	equ	0xFE8
  1690                           indf2	equ	0xFDF
  1691                           fsr2h	equ	0xFDA
  1692                           fsr2l	equ	0xFD9
  1693                           status	equ	0xFD8
  1694                           tblptru	equ	0xFF8
  1695                           tblptrh	equ	0xFF7
  1696                           tblptrl	equ	0xFF6
  1697                           tablat	equ	0xFF5
  1698                           wreg	equ	0xFE8
  1699                           indf2	equ	0xFDF
  1700                           fsr2h	equ	0xFDA
  1701                           fsr2l	equ	0xFD9
  1702                           status	equ	0xFD8
  1703                           
  1704                           	psect	rparam
  1705  0000                     tblptru	equ	0xFF8
  1706                           tblptrh	equ	0xFF7
  1707                           tblptrl	equ	0xFF6
  1708                           tablat	equ	0xFF5
  1709                           wreg	equ	0xFE8
  1710                           indf2	equ	0xFDF
  1711                           fsr2h	equ	0xFDA
  1712                           fsr2l	equ	0xFD9
  1713                           status	equ	0xFD8


Data Sizes:
    Strings     3
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     14      14
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_1(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 2
		 -> main@i(COMRAM[2]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    Lcd_Out2@buffer	PTR unsigned char  size(2) Largest target is 2
		 -> main@i(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _WriteI2C->_IdleI2C
    _Lcd_Out2->_Lcd_Chr_CP
    _Lcd_Out2->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    1471
                                             10 COMRAM     4     4      0
                            _IdleI2C
                            _Lcd_Cmd
                           _Lcd_Init
                           _Lcd_Out2
                            _OpenI2C
                            _ReadI2C
                           _WriteI2C
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             22    16      6     358
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (1) _WriteI2C                                             1     1      0      15
                                              1 COMRAM     1     1      0
                            _IdleI2C
 ---------------------------------------------------------------------------------
 (2) _IdleI2C                                              1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ReadI2C                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _OpenI2C                                              2     1      1     120
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _Lcd_Out2                                             5     2      3     573
                                              3 COMRAM     5     2      3
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Chr_CP                                           3     3      0     120
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     210
                                              3 COMRAM     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     120
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _IdleI2C
   _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
   _Lcd_Out2
     _Lcd_Chr_CP
     _Lcd_Cmd
   _OpenI2C
   _ReadI2C
   _WriteI2C
     _IdleI2C
   _sprintf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      E       E       1       14.7%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sun Mar 15 16:42:25 2020

            _SSPSTATbits 000FC7                       l50 0D14                       l51 0D1A  
                     l52 0D20                       l29 0AE6                       l54 0D5C  
                     l70 0BA8                       l55 0D4A                       l47 0D28  
                     l48 0D0E                       l49 0D42                       l73 0BDC  
                     l82 0C3A                       l76 0BF0                       l68 0BA6  
                     l85 0C40                       l79 0C10                       l97 0C8A  
                     l98 0C9A                       l99 0CC2                       u15 0948  
                     u25 0964                       u35 0986                       u45 0814  
                     u55 0830                       u65 0852              __CFG_BOR$ON 000000  
            __CFG_BORV$3 000000             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000                      l102 0CA0  
                    l103 0CB4                      l104 0CE4                      l138 0DEA  
                    l164 0D98                      l166 0D8C             __CFG_CPB$OFF 000000  
                    u210 0DE8                      u180 0DAC                      u340 0CFC  
                    u417 0BD2             __CFG_CPD$OFF 000000                      u507 0AA6  
                    u427 0BE6                      u517 0AB6                      u437 0C2E  
                    u527 0AC6                      u447 0C4A                      u537 0AD6  
                    u457 088C                      u547 0B16                      u467 0912  
                    u557 0B58                      u477 092E                      u567 09C0  
                    u487 0A86                      u577 0A46                      u497 0A96  
                    u587 0A5C                      wreg 000FE8             __CFG_LVP$OFF 000000  
           __CFG_WDT$OFF 000000                     l1096 0C94                     STR_1 0801  
                   _main 0B8C                     fsr2h 000FDA                     indf2 000FDF  
                   fsr2l 000FD9                     start 0000            __CFG_IESO$OFF 000000  
        __end_of_IdleI2C 0E04          __end_of_Lcd_Cmd 0A68            __CFG_MCLRE$ON 000000  
           ___param_bank 000000          __end_of_ReadI2C 0DF2               _Lcd_Chr_CP 0806  
        __end_of_OpenI2C 0DD6           Lcd_Out2@buffer 0005            __CFG_PLLDIV$1 000000  
         __CFG_CCP2MX$ON 000000                    ?_main 0001            __CFG_USBDIV$1 000000  
          __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000  
          __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000  
         __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000  
         __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000                    main@i 000D  
                  tablat 000FF5                    status 000FD8          __end_of_sprintf 0D0A  
         __CFG_ICPRT$OFF 000000         __end_of_Lcd_Init 0B8C         __end_of_Lcd_Out2 0D6C  
        __initialization 0E04             __end_of_main 0C80                   ??_main 000B  
          __activetblptr 000002         __end_of_WriteI2C 0DB8              OpenI2C@slew 0001  
              ??_IdleI2C 0001                ??_Lcd_Cmd 0001                   _SSPBUF 000FC9  
              ??_ReadI2C 0001                ??_OpenI2C 0002           __CFG_XINST$OFF 000000  
            ?_Lcd_Chr_CP 0001           __CFG_STVREN$ON 000000             __mediumconst 0000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
              ??_sprintf 0007               __accesstop 0060  __end_of__initialization 0E04  
        __CFG_PBADEN$OFF 000000          __CFG_FOSC$XT_XT 000000            ___rparam_used 000001  
         __pcstackCOMRAM 0001                ?_Lcd_Init 0001                ?_Lcd_Out2 0004  
    __size_of_Lcd_Chr_CP 0134                ?_WriteI2C 0001               ??_Lcd_Init 0004  
             ??_Lcd_Out2 0007                  _SSPCON1 000FC6                  _SSPCON2 000FC5  
                _SSPSTAT 000FC7                  _IdleI2C 0DF2          __CFG_VREGEN$OFF 000000  
                _Lcd_Cmd 093A                  _ReadI2C 0DD6                  _OpenI2C 0DB8  
                __Hparam 0000                  __Lparam 0000             __psmallconst 0800  
                __pcinit 0E04               ??_WriteI2C 0002                  __ramtop 0800  
                __ptext0 0B8C                  __ptext1 0C80                  __ptext2 0D6C  
                __ptext3 0DF2                  __ptext4 0DD6                  __ptext5 0DB8  
                __ptext6 0D0A                  __ptext7 0806                  __ptext8 0A68  
                __ptext9 093A                  _sprintf 0C80     end_of_initialization 0E04  
          __Lmediumconst 0000             ??_Lcd_Chr_CP 0001                Lcd_Out2@x 0004  
              Lcd_Out2@y 0007                _TRISBbits 000F93                _TRISDbits 000F95  
     __end_of_Lcd_Chr_CP 093A      start_initialization 0E04         WriteI2C@data_out 0002  
      __size_of_Lcd_Init 0124        __size_of_Lcd_Out2 0062         __CFG_LPT1OSC$OFF 000000  
      __size_of_WriteI2C 004C                 ?_IdleI2C 0001                 ?_Lcd_Cmd 0001  
            sprintf@flag 0007                 ?_ReadI2C 0001                 ?_OpenI2C 0001  
            __smallconst 0800                 ?_sprintf 0001                 _LATBbits 000F8A  
               _LATDbits 000F8C                 _PIR1bits 000F9E         __CFG_WDTPS$32768 000000  
           Lcd_Init@data 0005             Lcd_Out2@data 0008                 _Lcd_Init 0A68  
               _Lcd_Out2 0D0A         OpenI2C@sync_mode 0002         __size_of_IdleI2C 0012  
       __size_of_Lcd_Cmd 012E         __size_of_ReadI2C 001C                 __Hrparam 0000  
       __size_of_OpenI2C 001E                 __Lrparam 0000                 _WriteI2C 0D6C  
         Lcd_Chr_CP@data 0003         __size_of_sprintf 008A              Lcd_Cmd@data 0003  
          __size_of_main 00F4                 main@Data 000C    __CFG_CPUDIV$OSC1_PLL2 000000  
              sprintf@ap 0008                sprintf@sp 0001                 sprintf@c 000A  
               sprintf@f 0003              _SSPCON1bits 000FC6              _SSPCON2bits 000FC5  
