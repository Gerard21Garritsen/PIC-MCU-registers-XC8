

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Mar 01 18:01:53 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    17                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    21  0000                     
    22                           ; Version 2.10
    23                           ; Generated 31/07/2019 GMT
    24                           ; 
    25                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC18F4550 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     
    57                           	psect	idataCOMRAM
    58  0002B4                     __pidataCOMRAM:
    59                           	opt callstack 0
    60                           
    61                           ;initializer for _Numeros
    62  0002B4  FC                 	db	252
    63  0002B5  60                 	db	96
    64  0002B6  DA                 	db	218
    65  0002B7  F2                 	db	242
    66  0002B8  66                 	db	102
    67  0002B9  B6                 	db	182
    68  0002BA  BE                 	db	190
    69  0002BB  E0                 	db	224
    70  0002BC  FE                 	db	254
    71  0002BD  F6                 	db	246
    72                           
    73                           	psect	nvCOMRAM
    74  00001B                     __pnvCOMRAM:
    75                           	opt callstack 0
    76  00001B                     _Dec:
    77                           	opt callstack 0
    78  00001B                     	ds	1
    79  00001C                     _Un:
    80                           	opt callstack 0
    81  00001C                     	ds	1
    82  0000                     _TMR1	set	4046
    83  0000                     _PIR1bits	set	3998
    84  0000                     _PIE1bits	set	3997
    85  0000                     _INTCONbits	set	4082
    86  0000                     _T1CONbits	set	4045
    87  0000                     _LATC	set	3979
    88  0000                     _LATD	set	3980
    89  0000                     _TRISC	set	3988
    90  0000                     _TRISD	set	3989
    91                           
    92                           ; #config settings
    93  0000                     
    94                           	psect	cinit
    95  00024A                     __pcinit:
    96                           	opt callstack 0
    97  00024A                     start_initialization:
    98                           	opt callstack 0
    99  00024A                     __initialization:
   100                           	opt callstack 0
   101                           
   102                           ; Initialize objects allocated to COMRAM (10 bytes)
   103                           ; load TBLPTR registers with __pidataCOMRAM
   104  00024A  0EB4               	movlw	low __pidataCOMRAM
   105  00024C  6EF6               	movwf	tblptrl,c
   106  00024E  0E02               	movlw	high __pidataCOMRAM
   107  000250  6EF7               	movwf	tblptrh,c
   108  000252  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   109  000254  6EF8               	movwf	tblptru,c
   110  000256  EE00  F011         	lfsr	0,__pdataCOMRAM
   111  00025A  EE10 F00A          	lfsr	1,10
   112  00025E                     copy_data0:
   113  00025E  0009               	tblrd		*+
   114  000260  CFF5 FFEE          	movff	tablat,postinc0
   115  000264  50E5               	movf	postdec1,w,c
   116  000266  50E1               	movf	fsr1l,w,c
   117  000268  E1FA               	bnz	copy_data0
   118                           
   119                           ; Clear objects allocated to COMRAM (2 bytes)
   120  00026A  6A1E               	clrf	(__pbssCOMRAM+1)& (0+255),c
   121  00026C  6A1D               	clrf	__pbssCOMRAM& (0+255),c
   122  00026E                     end_of_initialization:
   123                           	opt callstack 0
   124  00026E                     __end_of__initialization:
   125                           	opt callstack 0
   126  00026E  901F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   127  000270  921F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   128  000272  0100               	movlb	0
   129  000274  EF3C  F001         	goto	_main	;jump to C main() function
   130                           
   131                           	psect	bssCOMRAM
   132  00001D                     __pbssCOMRAM:
   133                           	opt callstack 0
   134  00001D                     _Count:
   135                           	opt callstack 0
   136  00001D                     	ds	1
   137  00001E                     _Num:
   138                           	opt callstack 0
   139  00001E                     	ds	1
   140                           
   141                           	psect	dataCOMRAM
   142  000011                     __pdataCOMRAM:
   143                           	opt callstack 0
   144  000011                     _Numeros:
   145                           	opt callstack 0
   146  000011                     	ds	10
   147                           
   148                           	psect	cstackCOMRAM
   149  000001                     __pcstackCOMRAM:
   150                           	opt callstack 0
   151  000001                     ?___awdiv:
   152                           	opt callstack 0
   153  000001                     ___awdiv@dividend:
   154                           	opt callstack 0
   155                           
   156                           ; 2 bytes @ 0x0
   157  000001                     	ds	2
   158  000003                     ___awdiv@divisor:
   159                           	opt callstack 0
   160                           
   161                           ; 2 bytes @ 0x2
   162  000003                     	ds	2
   163  000005                     ___awdiv@counter:
   164                           	opt callstack 0
   165                           
   166                           ; 1 bytes @ 0x4
   167  000005                     	ds	1
   168  000006                     ___awdiv@sign:
   169                           	opt callstack 0
   170                           
   171                           ; 1 bytes @ 0x5
   172  000006                     	ds	1
   173  000007                     ___awdiv@quotient:
   174                           	opt callstack 0
   175                           
   176                           ; 2 bytes @ 0x6
   177  000007                     	ds	2
   178  000009                     ?___awmod:
   179                           	opt callstack 0
   180  000009                     ___awmod@dividend:
   181                           	opt callstack 0
   182                           
   183                           ; 2 bytes @ 0x8
   184  000009                     	ds	2
   185  00000B                     ___awmod@divisor:
   186                           	opt callstack 0
   187                           
   188                           ; 2 bytes @ 0xA
   189  00000B                     	ds	2
   190  00000D                     ___awmod@counter:
   191                           	opt callstack 0
   192                           
   193                           ; 1 bytes @ 0xC
   194  00000D                     	ds	1
   195  00000E                     ___awmod@sign:
   196                           	opt callstack 0
   197                           
   198                           ; 1 bytes @ 0xD
   199  00000E                     	ds	1
   200  00000F                     ??_Display:
   201                           
   202                           ; 1 bytes @ 0xE
   203  00000F                     	ds	1
   204  000010                     Display@Num:
   205                           	opt callstack 0
   206                           
   207                           ; 1 bytes @ 0xF
   208  000010                     	ds	1
   209  000011                     
   210                           ; 1 bytes @ 0x10
   211 ;;
   212 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   213 ;;
   214 ;; *************** function _main *****************
   215 ;; Defined at:
   216 ;;		line 75 in file "Main.c"
   217 ;; Parameters:    Size  Location     Type
   218 ;;		None
   219 ;; Auto vars:     Size  Location     Type
   220 ;;		None
   221 ;; Return value:  Size  Location     Type
   222 ;;                  1    wreg      void 
   223 ;; Registers used:
   224 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   225 ;; Tracked objects:
   226 ;;		On entry : 0/0
   227 ;;		On exit  : 0/0
   228 ;;		Unchanged: 0/0
   229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   230 ;;      Params:         0       0       0       0       0       0       0       0       0
   231 ;;      Locals:         0       0       0       0       0       0       0       0       0
   232 ;;      Temps:          0       0       0       0       0       0       0       0       0
   233 ;;      Totals:         0       0       0       0       0       0       0       0       0
   234 ;;Total ram usage:        0 bytes
   235 ;; Hardware stack levels required when called:    3
   236 ;; This function calls:
   237 ;;		_Display
   238 ;;		_TIMER1
   239 ;; This function is called by:
   240 ;;		Startup code after reset
   241 ;; This function uses a non-reentrant model
   242 ;;
   243                           
   244                           	psect	text0
   245  000278                     __ptext0:
   246                           	opt callstack 0
   247  000278                     _main:
   248                           	opt callstack 28
   249  000278                     
   250                           ;Main.c: 76:     TRISD = 0x00;
   251  000278  0E00               	movlw	0
   252  00027A  6E95               	movwf	149,c	;volatile
   253                           
   254                           ;Main.c: 77:     TRISC = 0x3F;
   255  00027C  0E3F               	movlw	63
   256  00027E  6E94               	movwf	148,c	;volatile
   257                           
   258                           ;Main.c: 78:     LATD = 0x00;
   259  000280  0E00               	movlw	0
   260  000282  6E8C               	movwf	140,c	;volatile
   261                           
   262                           ;Main.c: 79:     LATC = 0x00;
   263  000284  0E00               	movlw	0
   264  000286  6E8B               	movwf	139,c	;volatile
   265  000288                     
   266                           ;Main.c: 80:     TIMER1();
   267  000288  EC4D  F001         	call	_TIMER1	;wreg free
   268  00028C                     l947:
   269                           
   270                           ;Main.c: 82:         Display(Num);
   271  00028C  501E               	movf	_Num^0,w,c
   272  00028E  ECC3  F000         	call	_Display
   273  000292  EF46  F001         	goto	l947
   274  000296  EF07  F000         	goto	start
   275  00029A                     __end_of_main:
   276                           	opt callstack 0
   277                           
   278 ;; *************** function _TIMER1 *****************
   279 ;; Defined at:
   280 ;;		line 86 in file "Main.c"
   281 ;; Parameters:    Size  Location     Type
   282 ;;		None
   283 ;; Auto vars:     Size  Location     Type
   284 ;;		None
   285 ;; Return value:  Size  Location     Type
   286 ;;                  1    wreg      void 
   287 ;; Registers used:
   288 ;;		wreg, status,2
   289 ;; Tracked objects:
   290 ;;		On entry : 0/0
   291 ;;		On exit  : 0/0
   292 ;;		Unchanged: 0/0
   293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   294 ;;      Params:         0       0       0       0       0       0       0       0       0
   295 ;;      Locals:         0       0       0       0       0       0       0       0       0
   296 ;;      Temps:          0       0       0       0       0       0       0       0       0
   297 ;;      Totals:         0       0       0       0       0       0       0       0       0
   298 ;;Total ram usage:        0 bytes
   299 ;; Hardware stack levels used:    1
   300 ;; Hardware stack levels required when called:    1
   301 ;; This function calls:
   302 ;;		Nothing
   303 ;; This function is called by:
   304 ;;		_main
   305 ;; This function uses a non-reentrant model
   306 ;;
   307                           
   308                           	psect	text1
   309  00029A                     __ptext1:
   310                           	opt callstack 0
   311  00029A                     _TIMER1:
   312                           	opt callstack 29
   313  00029A                     
   314                           ;Main.c: 87:     T1CONbits.RD16 = 1;
   315  00029A  8ECD               	bsf	205,7,c	;volatile
   316                           
   317                           ;Main.c: 88:     T1CONbits.T1CKPS0 = 1;
   318  00029C  88CD               	bsf	205,4,c	;volatile
   319                           
   320                           ;Main.c: 89:     T1CONbits.T1CKPS1 = 1;
   321  00029E  8ACD               	bsf	205,5,c	;volatile
   322                           
   323                           ;Main.c: 90:     T1CONbits.TMR1ON = 1;
   324  0002A0  80CD               	bsf	205,0,c	;volatile
   325                           
   326                           ;Main.c: 92:     INTCONbits.GIE = 1;
   327  0002A2  8EF2               	bsf	242,7,c	;volatile
   328                           
   329                           ;Main.c: 93:     INTCONbits.PEIE = 1;
   330  0002A4  8CF2               	bsf	242,6,c	;volatile
   331                           
   332                           ;Main.c: 94:     PIE1bits.TMR1IE = 1;
   333  0002A6  809D               	bsf	157,0,c	;volatile
   334                           
   335                           ;Main.c: 95:     PIR1bits.TMR1IF = 0;
   336  0002A8  909E               	bcf	158,0,c	;volatile
   337  0002AA                     
   338                           ;Main.c: 96:     TMR1 = 3035;
   339  0002AA  0E0B               	movlw	11
   340  0002AC  6ECF               	movwf	207,c	;volatile
   341  0002AE  0EDB               	movlw	219
   342  0002B0  6ECE               	movwf	206,c	;volatile
   343  0002B2  0012               	return		;funcret
   344  0002B4                     __end_of_TIMER1:
   345                           	opt callstack 0
   346                           
   347 ;; *************** function _Display *****************
   348 ;; Defined at:
   349 ;;		line 99 in file "Main.c"
   350 ;; Parameters:    Size  Location     Type
   351 ;;  Num             1    wreg     unsigned char 
   352 ;; Auto vars:     Size  Location     Type
   353 ;;  Num             1   15[COMRAM] unsigned char 
   354 ;; Return value:  Size  Location     Type
   355 ;;                  1    wreg      void 
   356 ;; Registers used:
   357 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   358 ;; Tracked objects:
   359 ;;		On entry : 0/0
   360 ;;		On exit  : 0/0
   361 ;;		Unchanged: 0/0
   362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   363 ;;      Params:         0       0       0       0       0       0       0       0       0
   364 ;;      Locals:         1       0       0       0       0       0       0       0       0
   365 ;;      Temps:          1       0       0       0       0       0       0       0       0
   366 ;;      Totals:         2       0       0       0       0       0       0       0       0
   367 ;;Total ram usage:        2 bytes
   368 ;; Hardware stack levels used:    1
   369 ;; Hardware stack levels required when called:    2
   370 ;; This function calls:
   371 ;;		___awdiv
   372 ;;		___awmod
   373 ;; This function is called by:
   374 ;;		_main
   375 ;; This function uses a non-reentrant model
   376 ;;
   377                           
   378                           	psect	text2
   379  000186                     __ptext2:
   380                           	opt callstack 0
   381  000186                     _Display:
   382                           	opt callstack 28
   383                           
   384                           ;incstack = 0
   385                           ;Display@Num stored from wreg
   386  000186  6E10               	movwf	Display@Num^0,c
   387  000188                     
   388                           ;Main.c: 100:     Dec = (Num/10)%10;
   389  000188  0E00               	movlw	0
   390  00018A  6E04               	movwf	(___awdiv@divisor+1)^0,c
   391  00018C  0E0A               	movlw	10
   392  00018E  6E03               	movwf	___awdiv@divisor^0,c
   393  000190  C010  F001         	movff	Display@Num,___awdiv@dividend
   394  000194  6A02               	clrf	(___awdiv@dividend+1)^0,c
   395  000196  EC09  F000         	call	___awdiv	;wreg free
   396  00019A  C001  F009         	movff	?___awdiv,___awmod@dividend
   397  00019E  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
   398  0001A2  0E00               	movlw	0
   399  0001A4  6E0C               	movwf	(___awmod@divisor+1)^0,c
   400  0001A6  0E0A               	movlw	10
   401  0001A8  6E0B               	movwf	___awmod@divisor^0,c
   402  0001AA  EC6B  F000         	call	___awmod	;wreg free
   403  0001AE  5009               	movf	?___awmod^0,w,c
   404  0001B0  6E1B               	movwf	_Dec^0,c
   405                           
   406                           ;Main.c: 101:     Un = Num%10;
   407  0001B2  C010  F009         	movff	Display@Num,___awmod@dividend
   408  0001B6  6A0A               	clrf	(___awmod@dividend+1)^0,c
   409  0001B8  0E00               	movlw	0
   410  0001BA  6E0C               	movwf	(___awmod@divisor+1)^0,c
   411  0001BC  0E0A               	movlw	10
   412  0001BE  6E0B               	movwf	___awmod@divisor^0,c
   413  0001C0  EC6B  F000         	call	___awmod	;wreg free
   414  0001C4  5009               	movf	?___awmod^0,w,c
   415  0001C6  6E1C               	movwf	_Un^0,c
   416  0001C8                     
   417                           ;Main.c: 102:     LATD = Numeros[Un];
   418  0001C8  0E11               	movlw	low _Numeros
   419  0001CA  241C               	addwf	_Un^0,w,c
   420  0001CC  6ED9               	movwf	fsr2l,c
   421  0001CE  6ADA               	clrf	fsr2h,c
   422  0001D0  0E00               	movlw	high _Numeros
   423  0001D2  22DA               	addwfc	fsr2h,f,c
   424  0001D4  50DF               	movf	indf2,w,c
   425  0001D6  6E8C               	movwf	140,c	;volatile
   426  0001D8                     
   427                           ;Main.c: 103:     LATC = 0x80;
   428  0001D8  0E80               	movlw	128
   429  0001DA  6E8B               	movwf	139,c	;volatile
   430  0001DC                     
   431                           ;Main.c: 104:     _delay((unsigned long)((5)*(4E6/4000.0)));
   432  0001DC  0E07               	movlw	7
   433  0001DE  6E0F               	movwf	??_Display^0,c
   434  0001E0  0E7D               	movlw	125
   435  0001E2                     u277:
   436  0001E2  2EE8               	decfsz	wreg,f,c
   437  0001E4  D7FE               	bra	u277
   438  0001E6  2E0F               	decfsz	??_Display^0,f,c
   439  0001E8  D7FC               	bra	u277
   440  0001EA  F000               	nop	
   441  0001EC                     
   442                           ;Main.c: 105:     LATD = Numeros[Dec];
   443  0001EC  0E11               	movlw	low _Numeros
   444  0001EE  241B               	addwf	_Dec^0,w,c
   445  0001F0  6ED9               	movwf	fsr2l,c
   446  0001F2  6ADA               	clrf	fsr2h,c
   447  0001F4  0E00               	movlw	high _Numeros
   448  0001F6  22DA               	addwfc	fsr2h,f,c
   449  0001F8  50DF               	movf	indf2,w,c
   450  0001FA  6E8C               	movwf	140,c	;volatile
   451  0001FC                     
   452                           ;Main.c: 106:     LATC = 0x40;
   453  0001FC  0E40               	movlw	64
   454  0001FE  6E8B               	movwf	139,c	;volatile
   455  000200                     
   456                           ;Main.c: 107:     _delay((unsigned long)((5)*(4E6/4000.0)));
   457  000200  0E07               	movlw	7
   458  000202  6E0F               	movwf	??_Display^0,c
   459  000204  0E7D               	movlw	125
   460  000206                     u287:
   461  000206  2EE8               	decfsz	wreg,f,c
   462  000208  D7FE               	bra	u287
   463  00020A  2E0F               	decfsz	??_Display^0,f,c
   464  00020C  D7FC               	bra	u287
   465  00020E  F000               	nop	
   466  000210  0012               	return		;funcret
   467  000212                     __end_of_Display:
   468                           	opt callstack 0
   469                           
   470 ;; *************** function ___awmod *****************
   471 ;; Defined at:
   472 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
   473 ;; Parameters:    Size  Location     Type
   474 ;;  dividend        2    8[COMRAM] int 
   475 ;;  divisor         2   10[COMRAM] int 
   476 ;; Auto vars:     Size  Location     Type
   477 ;;  sign            1   13[COMRAM] unsigned char 
   478 ;;  counter         1   12[COMRAM] unsigned char 
   479 ;; Return value:  Size  Location     Type
   480 ;;                  2    8[COMRAM] int 
   481 ;; Registers used:
   482 ;;		wreg, status,2, status,0
   483 ;; Tracked objects:
   484 ;;		On entry : 0/0
   485 ;;		On exit  : 0/0
   486 ;;		Unchanged: 0/0
   487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   488 ;;      Params:         4       0       0       0       0       0       0       0       0
   489 ;;      Locals:         2       0       0       0       0       0       0       0       0
   490 ;;      Temps:          0       0       0       0       0       0       0       0       0
   491 ;;      Totals:         6       0       0       0       0       0       0       0       0
   492 ;;Total ram usage:        6 bytes
   493 ;; Hardware stack levels used:    1
   494 ;; Hardware stack levels required when called:    1
   495 ;; This function calls:
   496 ;;		Nothing
   497 ;; This function is called by:
   498 ;;		_Display
   499 ;; This function uses a non-reentrant model
   500 ;;
   501                           
   502                           	psect	text3
   503  0000D6                     __ptext3:
   504                           	opt callstack 0
   505  0000D6                     ___awmod:
   506                           	opt callstack 28
   507  0000D6  0E00               	movlw	0
   508  0000D8  6E0E               	movwf	___awmod@sign^0,c
   509  0000DA  BE0A               	btfsc	(___awmod@dividend+1)^0,7,c
   510  0000DC  EF74  F000         	goto	u210
   511  0000E0  EF72  F000         	goto	u211
   512  0000E4                     u211:
   513  0000E4  EF7A  F000         	goto	l901
   514  0000E8                     u210:
   515  0000E8  6C09               	negf	___awmod@dividend^0,c
   516  0000EA  1E0A               	comf	(___awmod@dividend+1)^0,f,c
   517  0000EC  B0D8               	btfsc	status,0,c
   518  0000EE  2A0A               	incf	(___awmod@dividend+1)^0,f,c
   519  0000F0  0E01               	movlw	1
   520  0000F2  6E0E               	movwf	___awmod@sign^0,c
   521  0000F4                     l901:
   522  0000F4  BE0C               	btfsc	(___awmod@divisor+1)^0,7,c
   523  0000F6  EF81  F000         	goto	u220
   524  0000FA  EF7F  F000         	goto	u221
   525  0000FE                     u221:
   526  0000FE  EF85  F000         	goto	l905
   527  000102                     u220:
   528  000102  6C0B               	negf	___awmod@divisor^0,c
   529  000104  1E0C               	comf	(___awmod@divisor+1)^0,f,c
   530  000106  B0D8               	btfsc	status,0,c
   531  000108  2A0C               	incf	(___awmod@divisor+1)^0,f,c
   532  00010A                     l905:
   533  00010A  500B               	movf	___awmod@divisor^0,w,c
   534  00010C  100C               	iorwf	(___awmod@divisor+1)^0,w,c
   535  00010E  B4D8               	btfsc	status,2,c
   536  000110  EF8C  F000         	goto	u231
   537  000114  EF8E  F000         	goto	u230
   538  000118                     u231:
   539  000118  EFB2  F000         	goto	l921
   540  00011C                     u230:
   541  00011C  0E01               	movlw	1
   542  00011E  6E0D               	movwf	___awmod@counter^0,c
   543  000120  EF96  F000         	goto	l911
   544  000124                     l909:
   545  000124  90D8               	bcf	status,0,c
   546  000126  360B               	rlcf	___awmod@divisor^0,f,c
   547  000128  360C               	rlcf	(___awmod@divisor+1)^0,f,c
   548  00012A  2A0D               	incf	___awmod@counter^0,f,c
   549  00012C                     l911:
   550  00012C  AE0C               	btfss	(___awmod@divisor+1)^0,7,c
   551  00012E  EF9B  F000         	goto	u241
   552  000132  EF9D  F000         	goto	u240
   553  000136                     u241:
   554  000136  EF92  F000         	goto	l909
   555  00013A                     u240:
   556  00013A                     l913:
   557  00013A  500B               	movf	___awmod@divisor^0,w,c
   558  00013C  5C09               	subwf	___awmod@dividend^0,w,c
   559  00013E  500C               	movf	(___awmod@divisor+1)^0,w,c
   560  000140  580A               	subwfb	(___awmod@dividend+1)^0,w,c
   561  000142  A0D8               	btfss	status,0,c
   562  000144  EFA6  F000         	goto	u251
   563  000148  EFA8  F000         	goto	u250
   564  00014C                     u251:
   565  00014C  EFAC  F000         	goto	l917
   566  000150                     u250:
   567  000150  500B               	movf	___awmod@divisor^0,w,c
   568  000152  5E09               	subwf	___awmod@dividend^0,f,c
   569  000154  500C               	movf	(___awmod@divisor+1)^0,w,c
   570  000156  5A0A               	subwfb	(___awmod@dividend+1)^0,f,c
   571  000158                     l917:
   572  000158  90D8               	bcf	status,0,c
   573  00015A  320C               	rrcf	(___awmod@divisor+1)^0,f,c
   574  00015C  320B               	rrcf	___awmod@divisor^0,f,c
   575  00015E  2E0D               	decfsz	___awmod@counter^0,f,c
   576  000160  EF9D  F000         	goto	l913
   577  000164                     l921:
   578  000164  500E               	movf	___awmod@sign^0,w,c
   579  000166  B4D8               	btfsc	status,2,c
   580  000168  EFB8  F000         	goto	u261
   581  00016C  EFBA  F000         	goto	u260
   582  000170                     u261:
   583  000170  EFBE  F000         	goto	l925
   584  000174                     u260:
   585  000174  6C09               	negf	___awmod@dividend^0,c
   586  000176  1E0A               	comf	(___awmod@dividend+1)^0,f,c
   587  000178  B0D8               	btfsc	status,0,c
   588  00017A  2A0A               	incf	(___awmod@dividend+1)^0,f,c
   589  00017C                     l925:
   590  00017C  C009  F009         	movff	___awmod@dividend,?___awmod
   591  000180  C00A  F00A         	movff	___awmod@dividend+1,?___awmod+1
   592  000184  0012               	return		;funcret
   593  000186                     __end_of___awmod:
   594                           	opt callstack 0
   595                           
   596 ;; *************** function ___awdiv *****************
   597 ;; Defined at:
   598 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
   599 ;; Parameters:    Size  Location     Type
   600 ;;  dividend        2    0[COMRAM] int 
   601 ;;  divisor         2    2[COMRAM] int 
   602 ;; Auto vars:     Size  Location     Type
   603 ;;  quotient        2    6[COMRAM] int 
   604 ;;  sign            1    5[COMRAM] unsigned char 
   605 ;;  counter         1    4[COMRAM] unsigned char 
   606 ;; Return value:  Size  Location     Type
   607 ;;                  2    0[COMRAM] int 
   608 ;; Registers used:
   609 ;;		wreg, status,2, status,0
   610 ;; Tracked objects:
   611 ;;		On entry : 0/0
   612 ;;		On exit  : 0/0
   613 ;;		Unchanged: 0/0
   614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   615 ;;      Params:         4       0       0       0       0       0       0       0       0
   616 ;;      Locals:         4       0       0       0       0       0       0       0       0
   617 ;;      Temps:          0       0       0       0       0       0       0       0       0
   618 ;;      Totals:         8       0       0       0       0       0       0       0       0
   619 ;;Total ram usage:        8 bytes
   620 ;; Hardware stack levels used:    1
   621 ;; Hardware stack levels required when called:    1
   622 ;; This function calls:
   623 ;;		Nothing
   624 ;; This function is called by:
   625 ;;		_Display
   626 ;; This function uses a non-reentrant model
   627 ;;
   628                           
   629                           	psect	text4
   630  000012                     __ptext4:
   631                           	opt callstack 0
   632  000012                     ___awdiv:
   633                           	opt callstack 28
   634  000012  0E00               	movlw	0
   635  000014  6E06               	movwf	___awdiv@sign^0,c
   636  000016  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
   637  000018  EF12  F000         	goto	u150
   638  00001C  EF10  F000         	goto	u151
   639  000020                     u151:
   640  000020  EF18  F000         	goto	l857
   641  000024                     u150:
   642  000024  6C03               	negf	___awdiv@divisor^0,c
   643  000026  1E04               	comf	(___awdiv@divisor+1)^0,f,c
   644  000028  B0D8               	btfsc	status,0,c
   645  00002A  2A04               	incf	(___awdiv@divisor+1)^0,f,c
   646  00002C  0E01               	movlw	1
   647  00002E  6E06               	movwf	___awdiv@sign^0,c
   648  000030                     l857:
   649  000030  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
   650  000032  EF1F  F000         	goto	u160
   651  000036  EF1D  F000         	goto	u161
   652  00003A                     u161:
   653  00003A  EF25  F000         	goto	l863
   654  00003E                     u160:
   655  00003E  6C01               	negf	___awdiv@dividend^0,c
   656  000040  1E02               	comf	(___awdiv@dividend+1)^0,f,c
   657  000042  B0D8               	btfsc	status,0,c
   658  000044  2A02               	incf	(___awdiv@dividend+1)^0,f,c
   659  000046  0E01               	movlw	1
   660  000048  1A06               	xorwf	___awdiv@sign^0,f,c
   661  00004A                     l863:
   662  00004A  0E00               	movlw	0
   663  00004C  6E08               	movwf	(___awdiv@quotient+1)^0,c
   664  00004E  0E00               	movlw	0
   665  000050  6E07               	movwf	___awdiv@quotient^0,c
   666  000052  5003               	movf	___awdiv@divisor^0,w,c
   667  000054  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
   668  000056  B4D8               	btfsc	status,2,c
   669  000058  EF30  F000         	goto	u171
   670  00005C  EF32  F000         	goto	u170
   671  000060                     u171:
   672  000060  EF5A  F000         	goto	l885
   673  000064                     u170:
   674  000064  0E01               	movlw	1
   675  000066  6E05               	movwf	___awdiv@counter^0,c
   676  000068  EF3A  F000         	goto	l871
   677  00006C                     l869:
   678  00006C  90D8               	bcf	status,0,c
   679  00006E  3603               	rlcf	___awdiv@divisor^0,f,c
   680  000070  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
   681  000072  2A05               	incf	___awdiv@counter^0,f,c
   682  000074                     l871:
   683  000074  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
   684  000076  EF3F  F000         	goto	u181
   685  00007A  EF41  F000         	goto	u180
   686  00007E                     u181:
   687  00007E  EF36  F000         	goto	l869
   688  000082                     u180:
   689  000082                     l873:
   690  000082  90D8               	bcf	status,0,c
   691  000084  3607               	rlcf	___awdiv@quotient^0,f,c
   692  000086  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
   693  000088  5003               	movf	___awdiv@divisor^0,w,c
   694  00008A  5C01               	subwf	___awdiv@dividend^0,w,c
   695  00008C  5004               	movf	(___awdiv@divisor+1)^0,w,c
   696  00008E  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
   697  000090  A0D8               	btfss	status,0,c
   698  000092  EF4D  F000         	goto	u191
   699  000096  EF4F  F000         	goto	u190
   700  00009A                     u191:
   701  00009A  EF54  F000         	goto	l881
   702  00009E                     u190:
   703  00009E  5003               	movf	___awdiv@divisor^0,w,c
   704  0000A0  5E01               	subwf	___awdiv@dividend^0,f,c
   705  0000A2  5004               	movf	(___awdiv@divisor+1)^0,w,c
   706  0000A4  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
   707  0000A6  8007               	bsf	___awdiv@quotient^0,0,c
   708  0000A8                     l881:
   709  0000A8  90D8               	bcf	status,0,c
   710  0000AA  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
   711  0000AC  3203               	rrcf	___awdiv@divisor^0,f,c
   712  0000AE  2E05               	decfsz	___awdiv@counter^0,f,c
   713  0000B0  EF41  F000         	goto	l873
   714  0000B4                     l885:
   715  0000B4  5006               	movf	___awdiv@sign^0,w,c
   716  0000B6  B4D8               	btfsc	status,2,c
   717  0000B8  EF60  F000         	goto	u201
   718  0000BC  EF62  F000         	goto	u200
   719  0000C0                     u201:
   720  0000C0  EF66  F000         	goto	l889
   721  0000C4                     u200:
   722  0000C4  6C07               	negf	___awdiv@quotient^0,c
   723  0000C6  1E08               	comf	(___awdiv@quotient+1)^0,f,c
   724  0000C8  B0D8               	btfsc	status,0,c
   725  0000CA  2A08               	incf	(___awdiv@quotient+1)^0,f,c
   726  0000CC                     l889:
   727  0000CC  C007  F001         	movff	___awdiv@quotient,?___awdiv
   728  0000D0  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
   729  0000D4  0012               	return		;funcret
   730  0000D6                     __end_of___awdiv:
   731                           	opt callstack 0
   732                           
   733 ;; *************** function _Rutina *****************
   734 ;; Defined at:
   735 ;;		line 110 in file "Main.c"
   736 ;; Parameters:    Size  Location     Type
   737 ;;		None
   738 ;; Auto vars:     Size  Location     Type
   739 ;;		None
   740 ;; Return value:  Size  Location     Type
   741 ;;                  1    wreg      void 
   742 ;; Registers used:
   743 ;;		wreg, status,2, status,0
   744 ;; Tracked objects:
   745 ;;		On entry : 0/0
   746 ;;		On exit  : 0/0
   747 ;;		Unchanged: 0/0
   748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   749 ;;      Params:         0       0       0       0       0       0       0       0       0
   750 ;;      Locals:         0       0       0       0       0       0       0       0       0
   751 ;;      Temps:          0       0       0       0       0       0       0       0       0
   752 ;;      Totals:         0       0       0       0       0       0       0       0       0
   753 ;;Total ram usage:        0 bytes
   754 ;; Hardware stack levels used:    1
   755 ;; This function calls:
   756 ;;		Nothing
   757 ;; This function is called by:
   758 ;;		Interrupt level 2
   759 ;; This function uses a non-reentrant model
   760 ;;
   761                           
   762                           	psect	intcode
   763  000008                     __pintcode:
   764                           	opt callstack 0
   765  000008                     _Rutina:
   766                           	opt callstack 28
   767                           
   768                           ;incstack = 0
   769  000008  821F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   770  00000A  ED09  F001         	call	int_func,f	;refresh shadow registers
   771                           
   772                           	psect	intcode_body
   773  000212                     __pintcode_body:
   774                           	opt callstack 28
   775  000212                     int_func:
   776                           	opt callstack 28
   777  000212  0006               	pop		; remove dummy address from shadow register refresh
   778  000214                     
   779                           ;Main.c: 111:     if(PIR1bits.TMR1IF == 1){
   780  000214  A09E               	btfss	158,0,c	;volatile
   781  000216  EF0F  F001         	goto	i2u13_41
   782  00021A  EF11  F001         	goto	i2u13_40
   783  00021E                     i2u13_41:
   784  00021E  EF23  F001         	goto	i2l55
   785  000222                     i2u13_40:
   786  000222                     
   787                           ;Main.c: 112:         PIR1bits.TMR1IF = 0;
   788  000222  909E               	bcf	158,0,c	;volatile
   789  000224                     
   790                           ;Main.c: 113:         Count++;
   791  000224  2A1D               	incf	_Count^0,f,c
   792  000226                     
   793                           ;Main.c: 114:         TMR1 = 3035;
   794  000226  0E0B               	movlw	11
   795  000228  6ECF               	movwf	207,c	;volatile
   796  00022A  0EDB               	movlw	219
   797  00022C  6ECE               	movwf	206,c	;volatile
   798  00022E                     
   799                           ;Main.c: 115:         if(Count == 2){
   800  00022E  0E02               	movlw	2
   801  000230  181D               	xorwf	_Count^0,w,c
   802  000232  A4D8               	btfss	status,2,c
   803  000234  EF1E  F001         	goto	i2u14_41
   804  000238  EF20  F001         	goto	i2u14_40
   805  00023C                     i2u14_41:
   806  00023C  EF23  F001         	goto	i2l55
   807  000240                     i2u14_40:
   808  000240                     
   809                           ;Main.c: 116:             Num++;
   810  000240  2A1E               	incf	_Num^0,f,c
   811  000242                     
   812                           ;Main.c: 117:             Count = 0;
   813  000242  0E00               	movlw	0
   814  000244  6E1D               	movwf	_Count^0,c
   815  000246                     i2l55:
   816  000246  921F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   817  000248  0011               	retfie		f
   818  00024A                     __end_of_Rutina:
   819                           	opt callstack 0
   820  0000                     
   821                           	psect	rparam
   822  0000                     
   823                           	psect	temp
   824  00001F                     btemp:
   825                           	opt callstack 0
   826  00001F                     	ds	1
   827  0000                     int$flags	set	btemp
   828  0000                     wtemp8	set	btemp+1
   829  0000                     ttemp5	set	btemp+1
   830  0000                     ttemp6	set	btemp+4
   831  0000                     ttemp7	set	btemp+8
   832                           tosu	equ	0xFFF
   833                           tosh	equ	0xFFE
   834                           tosl	equ	0xFFD
   835                           stkptr	equ	0xFFC
   836                           pclatu	equ	0xFFB
   837                           pclath	equ	0xFFA
   838                           pcl	equ	0xFF9
   839                           tblptru	equ	0xFF8
   840                           tblptrh	equ	0xFF7
   841                           tblptrl	equ	0xFF6
   842                           tablat	equ	0xFF5
   843                           prodh	equ	0xFF4
   844                           prodl	equ	0xFF3
   845                           indf0	equ	0xFEF
   846                           postinc0	equ	0xFEE
   847                           postdec0	equ	0xFED
   848                           preinc0	equ	0xFEC
   849                           plusw0	equ	0xFEB
   850                           fsr0h	equ	0xFEA
   851                           fsr0l	equ	0xFE9
   852                           wreg	equ	0xFE8
   853                           indf1	equ	0xFE7
   854                           postinc1	equ	0xFE6
   855                           postdec1	equ	0xFE5
   856                           preinc1	equ	0xFE4
   857                           plusw1	equ	0xFE3
   858                           fsr1h	equ	0xFE2
   859                           fsr1l	equ	0xFE1
   860                           bsr	equ	0xFE0
   861                           indf2	equ	0xFDF
   862                           postinc2	equ	0xFDE
   863                           postdec2	equ	0xFDD
   864                           preinc2	equ	0xFDC
   865                           plusw2	equ	0xFDB
   866                           fsr2h	equ	0xFDA
   867                           fsr2l	equ	0xFD9
   868                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         2
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     16      30
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_Display
    _Display->___awmod
    ___awmod->___awdiv

Critical Paths under _Rutina in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _Rutina in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Rutina in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Rutina in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Rutina in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Rutina in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Rutina in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Rutina in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Rutina in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1096
                            _Display
                             _TIMER1
 ---------------------------------------------------------------------------------
 (1) _TIMER1                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Display                                              2     2      0    1096
                                             14 COMRAM     2     2      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     600
                                              8 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _Rutina                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Display
     ___awdiv
     ___awmod
       ___awdiv (ARG)
   _TIMER1

 _Rutina (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     10      1E       1       31.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      1E      20        0.0%
DATA                 0      0      1E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Mar 01 18:01:53 2020

                     l45 02B2                       l48 0210             ___awdiv@sign 0006  
                     _Un 001C              __CFG_BOR$ON 000000              __CFG_BORV$3 000000  
           __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000  
           __CFG_CP3$OFF 000000                      l302 0184                      l289 00D4  
                    l811 029A                      l901 00F4                      l813 02AA  
                    l911 012C                      l903 0102                      l913 013A  
                    l921 0164                      l905 010A                      l851 0016  
                    l923 0174                      l915 0150                      l907 011C  
                    l931 01C8                      l861 0046                      l853 0024  
                    l925 017C                      l917 0158                      l909 0124  
                    l941 0200                      l933 01D8                      l871 0074  
                    l863 004A                      l855 002C                      l919 015E  
                    l935 01DC                      l943 0278                      l881 00A8  
                    l873 0082                      l865 0052                      l857 0030  
                    l849 0012                      l937 01EC                      l929 0188  
                    l945 0288                      l883 00AE                      l875 0088  
                    l867 0064                      l859 003E                      l939 01FC  
                    l947 028C                      l877 009E                      l869 006C  
                    l885 00B4                      l893 00D6                      l887 00C4  
                    l879 00A6                      l895 00DA                      l889 00CC  
                    l897 00E8                      l899 00F0             __CFG_CPB$OFF 000000  
                    u200 00C4                      u201 00C0                      u210 00E8  
                    u211 00E4                      u220 0102                      u221 00FE  
                    u150 0024                      u230 011C                      u151 0020  
                    u231 0118                      u160 003E                      u240 013A  
                    u161 003A                      u241 0136                      u170 0064  
                    u250 0150                      u171 0060                      u251 014C  
                    u180 0082                      u260 0174                      u181 007E  
                    u261 0170                      u190 009E                      u191 009A  
           __CFG_CPD$OFF 000000                      u277 01E2                      u287 0206  
                    _Dec 001B                      _Num 001E             ___awmod@sign 000E  
                    wreg 000FE8             __CFG_LVP$OFF 000000             __CFG_WDT$OFF 000000  
                   _LATC 000F8B                     _LATD 000F8C                     i2l55 0246  
                   _TMR1 000FCE                     _main 0278                     indf2 000FDF  
                   fsr1l 000FE1                     fsr2l 000FD9                     btemp 001F  
                   start 000E            __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000  
        __end_of_Display 0212             ___param_bank 000000            __CFG_PLLDIV$1 000000  
         __CFG_CCP2MX$ON 000000                    ?_main 0001          __end_of___awdiv 00D6  
        __end_of___awmod 0186          ___awdiv@divisor 0003                    i2l841 0226  
                  i2l843 022E                    i2l835 0214                    i2l845 0240  
                  i2l837 0222                    i2l847 0242                    i2l839 0224  
        ___awdiv@counter 0005            __CFG_USBDIV$1 000000                    _TRISC 000F94  
                  _TRISD 000F95            __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000  
          __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000  
                  _Count 001D           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000  
         __CFG_EBTRB$OFF 000000                    tablat 000FF5                    ttemp5 0020  
                  ttemp6 0023                    ttemp7 0027                    status 000FD8  
                  wtemp8 0020           __CFG_ICPRT$OFF 000000           __CFG_PBADEN$ON 000000  
        __initialization 024A             __end_of_main 029A                   ??_main 0011  
          __activetblptr 000000         ___awdiv@dividend 0001                   _TIMER1 029A  
              ??_Display 000F           __CFG_XINST$OFF 000000                   _Rutina 0008  
              ??___awdiv 0005           __CFG_STVREN$ON 000000                ??___awmod 000D  
       ___awdiv@quotient 0007          ___awmod@divisor 000B          ___awmod@counter 000D  
           __pdataCOMRAM 0011                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8               __accesstop 0060  __end_of__initialization 026E  
        __CFG_FOSC$XT_XT 000000            ___rparam_used 000001           __pcstackCOMRAM 0001  
                ?_TIMER1 0001               __pnvCOMRAM 001B                  ?_Rutina 0001  
                i2u13_40 0222                  i2u13_41 021E                  i2u14_40 0240  
                i2u14_41 023C          __CFG_VREGEN$OFF 000000          __size_of_TIMER1 001A  
                _Display 0186                  __Hparam 0000                  __Lparam 0000  
                _Numeros 0011          __size_of_Rutina 0242                  ___awdiv 0012  
                ___awmod 00D6                  __pcinit 024A                  __ramtop 0800  
                __ptext0 0278                  __ptext1 029A                  __ptext2 0186  
                __ptext3 00D6                  __ptext4 0012                _T1CONbits 000FCD  
       ___awmod@dividend 0009           __pintcode_body 0212     end_of_initialization 026E  
                int_func 0212                  postdec1 000FE5                  postinc0 000FEE  
         __end_of_TIMER1 02B4           __end_of_Rutina 024A            __pidataCOMRAM 02B4  
    start_initialization 024A                 ??_TIMER1 0001                 ??_Rutina 0001  
       __CFG_LPT1OSC$OFF 000000              __pbssCOMRAM 001D                 ?_Display 0001  
              __pintcode 0008                 ?___awdiv 0001                 ?___awmod 0009  
               _PIE1bits 000F9D                 _PIR1bits 000F9E         __CFG_WDTPS$32768 000000  
              copy_data0 025E         __size_of_Display 008C                 __Hrparam 0000  
               __Lrparam 0000         __size_of___awdiv 00C4         __size_of___awmod 00B0  
          __size_of_main 0022                 int$flags 001F    __CFG_CPUDIV$OSC1_PLL2 000000  
             _INTCONbits 000FF2                 intlevel2 0000               Display@Num 0010  
