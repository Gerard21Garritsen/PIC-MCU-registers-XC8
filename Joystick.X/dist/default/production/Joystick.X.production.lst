

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Fri Apr 17 22:49:13 2020

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	text0,global,reloc=2,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	text4,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    14  0000                     _ADCON0	set	4034
    15  0000                     _ADCON0bits	set	4034
    16  0000                     _ADCON1	set	4033
    17  0000                     _ADCON2	set	4032
    18  0000                     _ADRESH	set	4036
    19  0000                     _ADRESL	set	4035
    20  0000                     _INTCONbits	set	4082
    21  0000                     _LATDbits	set	3980
    22  0000                     _PIE1bits	set	3997
    23  0000                     _PIR1bits	set	3998
    24  0000                     _PORTAbits	set	3968
    25  0000                     _TRISD	set	3989
    26                           
    27 ;;
    28 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
    29 ;;
    30 ;; *************** function _main *****************
    31 ;; Defined at:
    32 ;;		line 8 in file "Main.c"
    33 ;; Parameters:    Size  Location     Type
    34 ;;		None
    35 ;; Auto vars:     Size  Location     Type
    36 ;;  i               1    6[COMRAM] unsigned char 
    37 ;;  lect            4    7[COMRAM] int [2]
    38 ;; Return value:  Size  Location     Type
    39 ;;		None               void
    40 ;; Registers used:
    41 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
    42 ;; Tracked objects:
    43 ;;		On entry : 0/0
    44 ;;		On exit  : 0/0
    45 ;;		Unchanged: 0/0
    46 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
    47 ;;      Params:         0       0       0       0       0       0       0       0       0
    48 ;;      Locals:         5       0       0       0       0       0       0       0       0
    49 ;;      Temps:          1       0       0       0       0       0       0       0       0
    50 ;;      Totals:         6       0       0       0       0       0       0       0       0
    51 ;;Total ram usage:        6 bytes
    52 ;; Hardware stack levels required when called:    1
    53 ;; This function calls:
    54 ;;		_BusyADC
    55 ;;		_ConvertADC
    56 ;;		_OpenADC
    57 ;;		_ReadADC
    58 ;; This function is called by:
    59 ;;		Startup code after reset
    60 ;; This function uses a non-reentrant model
    61 ;;
    62                           
    63                           	psect	text0
    64  007F10                     __ptext0:
    65                           	opt stack 0
    66  007F10                     _main:
    67                           	opt stack 30
    68                           
    69                           ;Main.c: 9: TRISD = 0xE0;
    70                           
    71                           ;incstack = 0
    72  007F10  0EE0               	movlw	224
    73  007F12  6E95               	movwf	3989,c	;volatile
    74                           
    75                           ;Main.c: 10: int lect[2];
    76                           ;Main.c: 13: OpenADC(0b11001111 & 0b11110101 & 0b11111111,0b10000111 & 0b01111111 & 0b11
      +                          111100,0b11111101);
    77  007F14  0E04               	movlw	4
    78  007F16  6E01               	movwf	OpenADC@config2,c
    79  007F18  0EFD               	movlw	253
    80  007F1A  6E02               	movwf	OpenADC@portconfig,c
    81  007F1C  0EC5               	movlw	197
    82  007F1E  EC59  F03F         	call	_OpenADC
    83  007F22  D000               	goto	l744
    84  007F24                     l744:
    85                           
    86                           ;Main.c: 16: for(uint8_t i = 0; i < 2; i++){
    87  007F24  0E00               	movlw	0
    88  007F26  6E07               	movwf	main@i,c
    89  007F28                     l746:
    90  007F28  0E01               	movlw	1
    91  007F2A  6407               	cpfsgt	main@i,c
    92  007F2C  D001               	goto	l750
    93  007F2E  D021               	goto	l762
    94  007F30                     l750:
    95                           
    96                           ;Main.c: 17: ADCON0bits.CHS = i;
    97  007F30  C007  F006         	movff	main@i,??_main
    98  007F34  4606               	rlncf	??_main,f,c
    99  007F36  4606               	rlncf	??_main,f,c
   100  007F38  50C2               	movf	4034,w,c	;volatile
   101  007F3A  1806               	xorwf	??_main,w,c
   102  007F3C  0BC3               	andlw	-61
   103  007F3E  1806               	xorwf	??_main,w,c
   104  007F40  6EC2               	movwf	4034,c	;volatile
   105                           
   106                           ;Main.c: 18: ConvertADC();
   107  007F42  EC45  F03F         	call	_ConvertADC	;wreg free
   108                           
   109                           ;Main.c: 19: while(BusyADC());
   110  007F46  D000               	goto	l754
   111  007F48                     l754:
   112  007F48  EC4A  F03F         	call	_BusyADC	;wreg free
   113  007F4C  0900               	iorlw	0
   114  007F4E  A4D8               	btfss	status,2,c
   115  007F50  D7FB               	goto	l754
   116                           
   117                           ;Main.c: 20: lect[i] = ReadADC();
   118  007F52  EC51  F03F         	call	_ReadADC	;wreg free
   119  007F56  5007               	movf	main@i,w,c
   120  007F58  0D02               	mullw	2
   121  007F5A  0E08               	movlw	low main@lect
   122  007F5C  24F3               	addwf	prodl,w,c
   123  007F5E  6ED9               	movwf	fsr2l,c
   124  007F60  0E00               	movlw	high main@lect
   125  007F62  20F4               	addwfc	prodh,w,c
   126  007F64  6EDA               	movwf	fsr2h,c
   127  007F66  C001  FFDE         	movff	?_ReadADC,postinc2
   128  007F6A  C002  FFDD         	movff	?_ReadADC+1,postdec2
   129  007F6E  2A07               	incf	main@i,f,c
   130  007F70  D7DB               	goto	l746
   131  007F72                     l762:
   132                           
   133                           ;Main.c: 21: }
   134                           ;Main.c: 24: if(lect[0] >= 0 && lect[0] < 480){
   135  007F72  BE09               	btfsc	main@lect+1,7,c
   136  007F74  D00A               	goto	l25
   137  007F76  BE09               	btfsc	main@lect+1,7,c
   138  007F78  D006               	goto	l766
   139  007F7A  0EE0               	movlw	224
   140  007F7C  5C08               	subwf	main@lect,w,c
   141  007F7E  0E01               	movlw	1
   142  007F80  5809               	subwfb	main@lect+1,w,c
   143  007F82  B0D8               	btfsc	status,0,c
   144  007F84  D002               	goto	l25
   145  007F86                     l766:
   146                           
   147                           ;Main.c: 25: LATDbits.LATD0 = 1;
   148  007F86  808C               	bsf	3980,0,c	;volatile
   149                           
   150                           ;Main.c: 26: }
   151  007F88  D002               	goto	l768
   152  007F8A                     l25:
   153                           
   154                           ;Main.c: 27: else{
   155                           ;Main.c: 28: LATDbits.LATD0 = 0;
   156  007F8A  908C               	bcf	3980,0,c	;volatile
   157  007F8C  D000               	goto	l768
   158  007F8E                     l768:
   159                           
   160                           ;Main.c: 29: }
   161                           ;Main.c: 30: if(lect[0] >= 530 && lect[0] <= 1023){
   162  007F8E  BE09               	btfsc	main@lect+1,7,c
   163  007F90  D00E               	goto	l27
   164  007F92  0E12               	movlw	18
   165  007F94  5C08               	subwf	main@lect,w,c
   166  007F96  0E02               	movlw	2
   167  007F98  5809               	subwfb	main@lect+1,w,c
   168  007F9A  A0D8               	btfss	status,0,c
   169  007F9C  D008               	goto	l27
   170  007F9E  BE09               	btfsc	main@lect+1,7,c
   171  007FA0  D004               	goto	l772
   172  007FA2  0E04               	movlw	4
   173  007FA4  5C09               	subwf	main@lect+1,w,c
   174  007FA6  B0D8               	btfsc	status,0,c
   175  007FA8  D002               	goto	l27
   176  007FAA                     l772:
   177                           
   178                           ;Main.c: 31: LATDbits.LATD1 = 1;
   179  007FAA  828C               	bsf	3980,1,c	;volatile
   180                           
   181                           ;Main.c: 32: }
   182  007FAC  D002               	goto	l774
   183  007FAE                     l27:
   184                           
   185                           ;Main.c: 33: else{
   186                           ;Main.c: 34: LATDbits.LATD1 = 0;
   187  007FAE  928C               	bcf	3980,1,c	;volatile
   188  007FB0  D000               	goto	l774
   189  007FB2                     l774:
   190                           
   191                           ;Main.c: 35: }
   192                           ;Main.c: 37: if(lect[1] >= 0 && lect[1] < 480){
   193  007FB2  BE0B               	btfsc	main@lect+3,7,c
   194  007FB4  D00A               	goto	l29
   195  007FB6  BE0B               	btfsc	main@lect+3,7,c
   196  007FB8  D006               	goto	l778
   197  007FBA  0EE0               	movlw	224
   198  007FBC  5C0A               	subwf	main@lect+2,w,c
   199  007FBE  0E01               	movlw	1
   200  007FC0  580B               	subwfb	main@lect+3,w,c
   201  007FC2  B0D8               	btfsc	status,0,c
   202  007FC4  D002               	goto	l29
   203  007FC6                     l778:
   204                           
   205                           ;Main.c: 38: LATDbits.LATD2 = 1;
   206  007FC6  848C               	bsf	3980,2,c	;volatile
   207                           
   208                           ;Main.c: 39: }
   209  007FC8  D002               	goto	l780
   210  007FCA                     l29:
   211                           
   212                           ;Main.c: 40: else{
   213                           ;Main.c: 41: LATDbits.LATD2 = 0;
   214  007FCA  948C               	bcf	3980,2,c	;volatile
   215  007FCC  D000               	goto	l780
   216  007FCE                     l780:
   217                           
   218                           ;Main.c: 42: }
   219                           ;Main.c: 43: if(lect[1] >= 530 && lect[1] <= 1023){
   220  007FCE  BE0B               	btfsc	main@lect+3,7,c
   221  007FD0  D00E               	goto	l31
   222  007FD2  0E12               	movlw	18
   223  007FD4  5C0A               	subwf	main@lect+2,w,c
   224  007FD6  0E02               	movlw	2
   225  007FD8  580B               	subwfb	main@lect+3,w,c
   226  007FDA  A0D8               	btfss	status,0,c
   227  007FDC  D008               	goto	l31
   228  007FDE  BE0B               	btfsc	main@lect+3,7,c
   229  007FE0  D004               	goto	l784
   230  007FE2  0E04               	movlw	4
   231  007FE4  5C0B               	subwf	main@lect+3,w,c
   232  007FE6  B0D8               	btfsc	status,0,c
   233  007FE8  D002               	goto	l31
   234  007FEA                     l784:
   235                           
   236                           ;Main.c: 44: LATDbits.LATD3 = 1;
   237  007FEA  868C               	bsf	3980,3,c	;volatile
   238                           
   239                           ;Main.c: 45: }
   240  007FEC  D001               	goto	l32
   241  007FEE                     l31:
   242                           
   243                           ;Main.c: 46: else{
   244                           ;Main.c: 47: LATDbits.LATD3 = 0;
   245  007FEE  968C               	bcf	3980,3,c	;volatile
   246  007FF0                     l32:
   247                           
   248                           ;Main.c: 48: }
   249                           ;Main.c: 50: if(PORTAbits.RA2 == 1){
   250  007FF0  A480               	btfss	3968,2,c	;volatile
   251  007FF2  D002               	goto	l33
   252                           
   253                           ;Main.c: 51: LATDbits.LATD4 = 0;
   254  007FF4  988C               	bcf	3980,4,c	;volatile
   255                           
   256                           ;Main.c: 52: }
   257  007FF6  D796               	goto	l744
   258  007FF8                     l33:
   259                           
   260                           ;Main.c: 53: else{
   261                           ;Main.c: 54: LATDbits.LATD4 = 1;
   262  007FF8  888C               	bsf	3980,4,c	;volatile
   263  007FFA  D794               	goto	l744
   264  007FFC  EF00  F000         	goto	start
   265  008000                     __end_of_main:
   266                           	opt stack 0
   267                           prodh	equ	0xFF4
   268                           prodl	equ	0xFF3
   269                           postinc2	equ	0xFDE
   270                           postdec2	equ	0xFDD
   271                           fsr2h	equ	0xFDA
   272                           fsr2l	equ	0xFD9
   273                           status	equ	0xFD8
   274                           
   275                           	psect	cinit
   276  007E8E                     __pcinit:
   277                           	opt stack 0
   278  007E8E                     start_initialization:
   279                           	opt stack 0
   280  007E8E                     __initialization:
   281                           	opt stack 0
   282  007E8E                     end_of_initialization:
   283                           	opt stack 0
   284  007E8E                     __end_of__initialization:
   285                           	opt stack 0
   286  007E8E  0100               	movlb	0
   287  007E90  EF88  F03F         	goto	_main	;jump to C main() function
   288                           prodh	equ	0xFF4
   289                           prodl	equ	0xFF3
   290                           postinc2	equ	0xFDE
   291                           postdec2	equ	0xFDD
   292                           fsr2h	equ	0xFDA
   293                           fsr2l	equ	0xFD9
   294                           status	equ	0xFD8
   295                           
   296                           	psect	cstackCOMRAM
   297  000001                     __pcstackCOMRAM:
   298                           	opt stack 0
   299  000001                     ?_ReadADC:
   300                           	opt stack 0
   301  000001                     OpenADC@config2:
   302                           	opt stack 0
   303                           
   304                           ; 1 bytes @ 0x0
   305  000001                     	ds	1
   306  000002                     OpenADC@portconfig:
   307                           	opt stack 0
   308                           
   309                           ; 1 bytes @ 0x1
   310  000002                     	ds	1
   311  000003                     ??_OpenADC:
   312  000003                     ??_ReadADC:
   313                           
   314                           ; 0 bytes @ 0x2
   315  000003                     	ds	2
   316  000005                     OpenADC@config:
   317                           	opt stack 0
   318                           
   319                           ; 1 bytes @ 0x4
   320  000005                     	ds	1
   321  000006                     ??_main:
   322                           
   323                           ; 0 bytes @ 0x5
   324  000006                     	ds	1
   325  000007                     main@i:
   326                           	opt stack 0
   327                           
   328                           ; 1 bytes @ 0x6
   329  000007                     	ds	1
   330  000008                     main@lect:
   331                           	opt stack 0
   332                           
   333                           ; 4 bytes @ 0x7
   334  000008                     	ds	4
   335                           prodh	equ	0xFF4
   336                           prodl	equ	0xFF3
   337                           postinc2	equ	0xFDE
   338                           postdec2	equ	0xFDD
   339                           fsr2h	equ	0xFDA
   340                           fsr2l	equ	0xFD9
   341                           status	equ	0xFD8
   342                           
   343 ;; *************** function _ReadADC *****************
   344 ;; Defined at:
   345 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcread.c"
   346 ;; Parameters:    Size  Location     Type
   347 ;;		None
   348 ;; Auto vars:     Size  Location     Type
   349 ;;		None
   350 ;; Return value:  Size  Location     Type
   351 ;;                  2    0[COMRAM] int 
   352 ;; Registers used:
   353 ;;		wreg, status,2
   354 ;; Tracked objects:
   355 ;;		On entry : 0/0
   356 ;;		On exit  : 0/0
   357 ;;		Unchanged: 0/0
   358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   359 ;;      Params:         2       0       0       0       0       0       0       0       0
   360 ;;      Locals:         0       0       0       0       0       0       0       0       0
   361 ;;      Temps:          2       0       0       0       0       0       0       0       0
   362 ;;      Totals:         4       0       0       0       0       0       0       0       0
   363 ;;Total ram usage:        4 bytes
   364 ;; Hardware stack levels used:    1
   365 ;; This function calls:
   366 ;;		Nothing
   367 ;; This function is called by:
   368 ;;		_main
   369 ;; This function uses a non-reentrant model
   370 ;;
   371                           
   372                           	psect	text1
   373  007EA2                     __ptext1:
   374                           	opt stack 0
   375  007EA2                     _ReadADC:
   376                           	opt stack 30
   377                           
   378                           ;incstack = 0
   379  007EA2  50C4               	movf	4036,w,c	;volatile
   380  007EA4  6E03               	movwf	??_ReadADC& (0+255),c
   381  007EA6  50C3               	movf	4035,w,c	;volatile
   382  007EA8  6E01               	movwf	?_ReadADC,c
   383  007EAA  C003  F002         	movff	??_ReadADC,?_ReadADC+1
   384  007EAE  D000               	goto	l72
   385  007EB0                     l72:
   386  007EB0  0012               	return		;funcret
   387  007EB2                     __end_of_ReadADC:
   388                           	opt stack 0
   389                           prodh	equ	0xFF4
   390                           prodl	equ	0xFF3
   391                           postinc2	equ	0xFDE
   392                           postdec2	equ	0xFDD
   393                           fsr2h	equ	0xFDA
   394                           fsr2l	equ	0xFD9
   395                           status	equ	0xFD8
   396                           
   397 ;; *************** function _OpenADC *****************
   398 ;; Defined at:
   399 ;;		line 68 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcopen.c"
   400 ;; Parameters:    Size  Location     Type
   401 ;;  config          1    wreg     unsigned char 
   402 ;;  config2         1    0[COMRAM] unsigned char 
   403 ;;  portconfig      1    1[COMRAM] unsigned char 
   404 ;; Auto vars:     Size  Location     Type
   405 ;;  config          1    4[COMRAM] unsigned char 
   406 ;; Return value:  Size  Location     Type
   407 ;;		None               void
   408 ;; Registers used:
   409 ;;		wreg, status,2, status,0
   410 ;; Tracked objects:
   411 ;;		On entry : 0/0
   412 ;;		On exit  : 0/0
   413 ;;		Unchanged: 0/0
   414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   415 ;;      Params:         2       0       0       0       0       0       0       0       0
   416 ;;      Locals:         1       0       0       0       0       0       0       0       0
   417 ;;      Temps:          2       0       0       0       0       0       0       0       0
   418 ;;      Totals:         5       0       0       0       0       0       0       0       0
   419 ;;Total ram usage:        5 bytes
   420 ;; Hardware stack levels used:    1
   421 ;; This function calls:
   422 ;;		Nothing
   423 ;; This function is called by:
   424 ;;		_main
   425 ;; This function uses a non-reentrant model
   426 ;;
   427                           
   428                           	psect	text2
   429  007EB2                     __ptext2:
   430                           	opt stack 0
   431  007EB2                     _OpenADC:
   432                           	opt stack 30
   433                           
   434                           ;incstack = 0
   435                           ;OpenADC@config stored from wreg
   436  007EB2  6E05               	movwf	OpenADC@config,c
   437  007EB4  0E00               	movlw	0
   438  007EB6  6EC2               	movwf	4034,c	;volatile
   439  007EB8  0E00               	movlw	0
   440  007EBA  6EC0               	movwf	4032,c	;volatile
   441  007EBC  90D8               	bcf	status,0,c
   442  007EBE  3001               	rrcf	OpenADC@config2,w,c
   443  007EC0  0B3C               	andlw	60
   444  007EC2  6EC2               	movwf	4034,c	;volatile
   445  007EC4  C001  F003         	movff	OpenADC@config2,??_OpenADC
   446  007EC8  3A03               	swapf	??_OpenADC,f,c
   447  007ECA  0EF0               	movlw	240
   448  007ECC  1603               	andwf	??_OpenADC,f,c
   449  007ECE  0E30               	movlw	48
   450  007ED0  1603               	andwf	??_OpenADC,f,c
   451  007ED2  5002               	movf	OpenADC@portconfig,w,c
   452  007ED4  0B0F               	andlw	15
   453  007ED6  1003               	iorwf	??_OpenADC,w,c
   454  007ED8  6EC1               	movwf	4033,c	;volatile
   455  007EDA  C005  F003         	movff	OpenADC@config,??_OpenADC
   456  007EDE  90D8               	bcf	status,0,c
   457  007EE0  3603               	rlcf	??_OpenADC,f,c
   458  007EE2  90D8               	bcf	status,0,c
   459  007EE4  3603               	rlcf	??_OpenADC,f,c
   460  007EE6  0E38               	movlw	56
   461  007EE8  1603               	andwf	??_OpenADC,f,c
   462  007EEA  C005  F004         	movff	OpenADC@config,??_OpenADC+1
   463  007EEE  3A04               	swapf	??_OpenADC+1,f,c
   464  007EF0  0E0F               	movlw	15
   465  007EF2  1604               	andwf	??_OpenADC+1,f,c
   466  007EF4  0E07               	movlw	7
   467  007EF6  1604               	andwf	??_OpenADC+1,f,c
   468  007EF8  5005               	movf	OpenADC@config,w,c
   469  007EFA  0B80               	andlw	128
   470  007EFC  1004               	iorwf	??_OpenADC+1,w,c
   471  007EFE  1003               	iorwf	??_OpenADC,w,c
   472  007F00  6EC0               	movwf	4032,c	;volatile
   473  007F02  AE01               	btfss	OpenADC@config2,7,c
   474  007F04  D003               	goto	l64
   475  007F06  9C9E               	bcf	3998,6,c	;volatile
   476  007F08  8C9D               	bsf	3997,6,c	;volatile
   477  007F0A  8CF2               	bsf	intcon,6,c	;volatile
   478  007F0C                     l64:
   479  007F0C  80C2               	bsf	4034,0,c	;volatile
   480  007F0E  0012               	return		;funcret
   481  007F10                     __end_of_OpenADC:
   482                           	opt stack 0
   483                           prodh	equ	0xFF4
   484                           prodl	equ	0xFF3
   485                           intcon	equ	0xFF2
   486                           postinc2	equ	0xFDE
   487                           postdec2	equ	0xFDD
   488                           fsr2h	equ	0xFDA
   489                           fsr2l	equ	0xFD9
   490                           status	equ	0xFD8
   491                           
   492 ;; *************** function _ConvertADC *****************
   493 ;; Defined at:
   494 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcconv.c"
   495 ;; Parameters:    Size  Location     Type
   496 ;;		None
   497 ;; Auto vars:     Size  Location     Type
   498 ;;		None
   499 ;; Return value:  Size  Location     Type
   500 ;;		None               void
   501 ;; Registers used:
   502 ;;		None
   503 ;; Tracked objects:
   504 ;;		On entry : 0/0
   505 ;;		On exit  : 0/0
   506 ;;		Unchanged: 0/0
   507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   508 ;;      Params:         0       0       0       0       0       0       0       0       0
   509 ;;      Locals:         0       0       0       0       0       0       0       0       0
   510 ;;      Temps:          0       0       0       0       0       0       0       0       0
   511 ;;      Totals:         0       0       0       0       0       0       0       0       0
   512 ;;Total ram usage:        0 bytes
   513 ;; Hardware stack levels used:    1
   514 ;; This function calls:
   515 ;;		Nothing
   516 ;; This function is called by:
   517 ;;		_main
   518 ;; This function uses a non-reentrant model
   519 ;;
   520                           
   521                           	psect	text3
   522  007E8A                     __ptext3:
   523                           	opt stack 0
   524  007E8A                     _ConvertADC:
   525                           	opt stack 30
   526                           
   527                           ;incstack = 0
   528  007E8A  82C2               	bsf	4034,1,c	;volatile
   529  007E8C  0012               	return		;funcret
   530  007E8E                     __end_of_ConvertADC:
   531                           	opt stack 0
   532                           prodh	equ	0xFF4
   533                           prodl	equ	0xFF3
   534                           intcon	equ	0xFF2
   535                           postinc2	equ	0xFDE
   536                           postdec2	equ	0xFDD
   537                           fsr2h	equ	0xFDA
   538                           fsr2l	equ	0xFD9
   539                           status	equ	0xFD8
   540                           
   541 ;; *************** function _BusyADC *****************
   542 ;; Defined at:
   543 ;;		line 26 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcbusy.c"
   544 ;; Parameters:    Size  Location     Type
   545 ;;		None
   546 ;; Auto vars:     Size  Location     Type
   547 ;;		None
   548 ;; Return value:  Size  Location     Type
   549 ;;                  1    wreg      unsigned char 
   550 ;; Registers used:
   551 ;;		wreg
   552 ;; Tracked objects:
   553 ;;		On entry : 0/0
   554 ;;		On exit  : 0/0
   555 ;;		Unchanged: 0/0
   556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   557 ;;      Params:         0       0       0       0       0       0       0       0       0
   558 ;;      Locals:         0       0       0       0       0       0       0       0       0
   559 ;;      Temps:          0       0       0       0       0       0       0       0       0
   560 ;;      Totals:         0       0       0       0       0       0       0       0       0
   561 ;;Total ram usage:        0 bytes
   562 ;; Hardware stack levels used:    1
   563 ;; This function calls:
   564 ;;		Nothing
   565 ;; This function is called by:
   566 ;;		_main
   567 ;; This function uses a non-reentrant model
   568 ;;
   569                           
   570                           	psect	text4
   571  007E94                     __ptext4:
   572                           	opt stack 0
   573  007E94                     _BusyADC:
   574                           	opt stack 30
   575                           
   576                           ;incstack = 0
   577  007E94  A2C2               	btfss	4034,1,c	;volatile
   578  007E96  D002               	goto	u20
   579  007E98  0E01               	movlw	1
   580  007E9A  D002               	goto	l42
   581  007E9C                     u20:
   582  007E9C  0E00               	movlw	0
   583  007E9E  D000               	goto	l42
   584  007EA0                     l42:
   585  007EA0  0012               	return		;funcret
   586  007EA2                     __end_of_BusyADC:
   587                           	opt stack 0
   588  0000                     prodh	equ	0xFF4
   589                           prodl	equ	0xFF3
   590                           intcon	equ	0xFF2
   591                           postinc2	equ	0xFDE
   592                           postdec2	equ	0xFDD
   593                           fsr2h	equ	0xFDA
   594                           fsr2l	equ	0xFD9
   595                           status	equ	0xFD8
   596                           prodh	equ	0xFF4
   597                           prodl	equ	0xFF3
   598                           intcon	equ	0xFF2
   599                           postinc2	equ	0xFDE
   600                           postdec2	equ	0xFDD
   601                           fsr2h	equ	0xFDA
   602                           fsr2l	equ	0xFD9
   603                           status	equ	0xFD8
   604                           
   605                           	psect	rparam
   606  0000                     prodh	equ	0xFF4
   607                           prodl	equ	0xFF3
   608                           intcon	equ	0xFF2
   609                           postinc2	equ	0xFDE
   610                           postdec2	equ	0xFDD
   611                           fsr2h	equ	0xFDA
   612                           fsr2l	equ	0xFD9
   613                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     11      11
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_OpenADC

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0     534
                                              5 COMRAM     6     6      0
                            _BusyADC
                         _ConvertADC
                            _OpenADC
                            _ReadADC
 ---------------------------------------------------------------------------------
 (1) _ReadADC                                              4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _OpenADC                                              5     3      2     240
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BusyADC
   _ConvertADC
   _OpenADC
   _ReadADC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      B       B       1       11.6%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Fri Apr 17 22:49:13 2020

                     l31 7FEE                       l32 7FF0                       l33 7FF8  
                     l25 7F8A                       l42 7EA0                       l27 7FAE  
                     l29 7FCA                       l64 7F0C                       l72 7EB0  
                     u20 7E9C              __CFG_BOR$ON 000000              __CFG_BORV$3 000000  
           __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000  
           __CFG_CP3$OFF 000000                      l750 7F30                      l744 7F24  
                    l754 7F48                      l762 7F72                      l746 7F28  
                    l780 7FCE                      l772 7FAA                      l774 7FB2  
                    l766 7F86                      l784 7FEA                      l768 7F8E  
                    l778 7FC6             __CFG_CPB$OFF 000000             __CFG_CPD$OFF 000000  
                    prod 000FF3             __CFG_LVP$OFF 000000             __CFG_WDT$OFF 000000  
                   _main 7F10                     fsr2l 000FD9                     prodl 000FF3  
                   start 0000            __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000  
           ___param_bank 000010          __end_of_BusyADC 7EA2          __end_of_ReadADC 7EB2  
        __end_of_OpenADC 7F10            __CFG_PLLDIV$1 000000           __CFG_CCP2MX$ON 000000  
                  ?_main 0001            __CFG_USBDIV$1 000000                    _TRISD 000F95  
          __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000  
          __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000  
         __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000  
         __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000                    main@i 0007  
             _ConvertADC 7E8A                    status 000FD8           __CFG_ICPRT$OFF 000000  
        __initialization 7E8E             __end_of_main 8000                   ??_main 0006  
          __activetblptr 000000                   _ADCON0 000FC2                   _ADCON1 000FC1  
                 _ADCON2 000FC0                   _ADRESH 000FC4                   _ADRESL 000FC3  
              ??_BusyADC 0001                ??_ReadADC 0003                ??_OpenADC 0003  
         __CFG_XINST$OFF 000000           __CFG_STVREN$ON 000000              ?_ConvertADC 0001  
             __accesstop 0060  __end_of__initialization 7E8E          __CFG_PBADEN$OFF 000000  
        __CFG_FOSC$XT_XT 000000            ___rparam_used 000001           __pcstackCOMRAM 0001  
    __size_of_ConvertADC 0004          __CFG_VREGEN$OFF 000000                  _BusyADC 7E94  
                _ReadADC 7EA2                  _OpenADC 7EB2                  __Hparam 0000  
                __Lparam 0000                  __pcinit 7E8E                  __ramtop 0800  
                __ptext0 7F10                  __ptext1 7EA2                  __ptext2 7EB2  
                __ptext3 7E8A                  __ptext4 7E94           OpenADC@config2 0001  
   end_of_initialization 7E8E                  postdec2 000FDD                  postinc2 000FDE  
              _PORTAbits 000F80             ??_ConvertADC 0001       __end_of_ConvertADC 7E8E  
    start_initialization 7E8E         __CFG_LPT1OSC$OFF 000000                 ?_BusyADC 0001  
               ?_ReadADC 0001        OpenADC@portconfig 0002                 ?_OpenADC 0001  
          OpenADC@config 0005                 _LATDbits 000F8C                 _PIE1bits 000F9D  
               _PIR1bits 000F9E         __CFG_WDTPS$32768 000000               _ADCON0bits 000FC2  
       __size_of_BusyADC 000E         __size_of_ReadADC 0010                 __Hrparam 0000  
       __size_of_OpenADC 005E                 __Lrparam 0000            __size_of_main 00F0  
               main@lect 0008    __CFG_CPUDIV$OSC1_PLL2 000000               _INTCONbits 000FF2  
