

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Apr 22 21:35:53 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    16                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    19  0000                     
    20                           ; Version 2.20
    21                           ; Generated 12/02/2020 GMT
    22                           ; 
    23                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC18F4550 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     _LATDbits	set	3980
    55  0000                     _LATD	set	3980
    56  0000                     _TRISD	set	3989
    57  0000                     _OSCCONbits	set	4051
    58                           
    59                           	psect	smallconst
    60  000800                     __psmallconst:
    61                           	callstack 0
    62  000800  00                 	db	0
    63  000801                     STR_1:
    64  000801  4C                 	db	76	;'L'
    65  000802  43                 	db	67	;'C'
    66  000803  44                 	db	68	;'D'
    67  000804  5F                 	db	95	;'_'
    68  000805  32                 	db	50	;'2'
    69  000806  30                 	db	48	;'0'
    70  000807  58                 	db	88	;'X'
    71  000808  34                 	db	52	;'4'
    72  000809  00                 	db	0
    73  00080A  00                 	db	0	; dummy byte at the end
    74  0000                     
    75                           ; #config settings
    76                           
    77                           	psect	cinit
    78  000CBC                     __pcinit:
    79                           	callstack 0
    80  000CBC                     start_initialization:
    81                           	callstack 0
    82  000CBC                     __initialization:
    83                           	callstack 0
    84  000CBC                     end_of_initialization:
    85                           	callstack 0
    86  000CBC                     __end_of__initialization:
    87                           	callstack 0
    88  000CBC  0E00               	movlw	low (__Lmediumconst shr (0+16))
    89  000CBE  6EF8               	movwf	tblptru,c
    90  000CC0  0100               	movlb	0
    91  000CC2  EFA0  F005         	goto	_main	;jump to C main() function
    92                           
    93                           	psect	cstackCOMRAM
    94  000001                     __pcstackCOMRAM:
    95                           	callstack 0
    96  000001                     ??_LCD_Init:
    97  000001                     ??_LCD_Clear:
    98  000001                     ??_LCD_Cmd:
    99  000001                     ??_LCD_Char_CP:
   100                           
   101                           ; 1 bytes @ 0x0
   102  000001                     	ds	2
   103  000003                     LCD_Cmd@data:
   104                           	callstack 0
   105  000003                     LCD_Char_CP@letter:
   106                           	callstack 0
   107                           
   108                           ; 1 bytes @ 0x2
   109  000003                     	ds	1
   110  000004                     LCD_Write@x:
   111                           	callstack 0
   112  000004                     LCD_Scroll@data:
   113                           	callstack 0
   114                           
   115                           ; 1 bytes @ 0x3
   116  000004                     	ds	1
   117  000005                     LCD_Write@cadena:
   118                           	callstack 0
   119                           
   120                           ; 2 bytes @ 0x4
   121  000005                     	ds	2
   122  000007                     ??_LCD_Write:
   123                           
   124                           ; 1 bytes @ 0x6
   125  000007                     	ds	2
   126  000009                     LCD_Write@y:
   127                           	callstack 0
   128                           
   129                           ; 1 bytes @ 0x8
   130  000009                     	ds	1
   131  00000A                     LCD_Write@row:
   132                           	callstack 0
   133                           
   134                           ; 1 bytes @ 0x9
   135  00000A                     	ds	1
   136  00000B                     ??_main:
   137                           
   138                           ; 1 bytes @ 0xA
   139  00000B                     	ds	2
   140  00000D                     main@i:
   141                           	callstack 0
   142                           
   143                           ; 1 bytes @ 0xC
   144  00000D                     	ds	1
   145  00000E                     main@i_94:
   146                           	callstack 0
   147                           
   148                           ; 1 bytes @ 0xD
   149  00000E                     	ds	1
   150                           
   151 ;;
   152 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   153 ;;
   154 ;; *************** function _main *****************
   155 ;; Defined at:
   156 ;;		line 7 in file "main.c"
   157 ;; Parameters:    Size  Location     Type
   158 ;;		None
   159 ;; Auto vars:     Size  Location     Type
   160 ;;  i               1   13[COMRAM] unsigned char 
   161 ;;  i               1   12[COMRAM] unsigned char 
   162 ;; Return value:  Size  Location     Type
   163 ;;                  1    wreg      void 
   164 ;; Registers used:
   165 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   166 ;; Tracked objects:
   167 ;;		On entry : 0/0
   168 ;;		On exit  : 0/0
   169 ;;		Unchanged: 0/0
   170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   171 ;;      Params:         0       0       0       0       0       0       0       0       0
   172 ;;      Locals:         2       0       0       0       0       0       0       0       0
   173 ;;      Temps:          2       0       0       0       0       0       0       0       0
   174 ;;      Totals:         4       0       0       0       0       0       0       0       0
   175 ;;Total ram usage:        4 bytes
   176 ;; Hardware stack levels required when called:    2
   177 ;; This function calls:
   178 ;;		_LCD_Clear
   179 ;;		_LCD_Init
   180 ;;		_LCD_Scroll
   181 ;;		_LCD_Write
   182 ;; This function is called by:
   183 ;;		Startup code after reset
   184 ;; This function uses a non-reentrant model
   185 ;;
   186                           
   187                           	psect	text0
   188  000B40                     __ptext0:
   189                           	callstack 0
   190  000B40                     _main:
   191                           	callstack 29
   192  000B40                     
   193                           ;main.c: 8:     OSCCONbits.IRCF = 0x06;
   194  000B40  50D3               	movf	211,w,c	;volatile
   195  000B42  0B8F               	andlw	-113
   196  000B44  0960               	iorlw	96
   197  000B46  6ED3               	movwf	211,c	;volatile
   198                           
   199                           ;main.c: 9:     OSCCONbits.SCS = 0x02;
   200  000B48  50D3               	movf	211,w,c	;volatile
   201  000B4A  0BFC               	andlw	-4
   202  000B4C  0902               	iorlw	2
   203  000B4E  6ED3               	movwf	211,c	;volatile
   204  000B50                     
   205                           ;main.c: 10:     LCD_Init();
   206  000B50  EC06  F004         	call	_LCD_Init	;wreg free
   207  000B54                     
   208                           ;main.c: 11:     LCD_Clear();
   209  000B54  EC48  F006         	call	_LCD_Clear	;wreg free
   210  000B58                     
   211                           ;main.c: 12:     LCD_Write(2,6,"LCD_20X4");
   212  000B58  0E06               	movlw	6
   213  000B5A  6E04               	movwf	LCD_Write@x^0,c
   214  000B5C  0E01               	movlw	low STR_1
   215  000B5E  6E05               	movwf	LCD_Write@cadena^0,c
   216  000B60  0E08               	movlw	high STR_1
   217  000B62  6E06               	movwf	(LCD_Write@cadena+1)^0,c
   218  000B64  0E02               	movlw	2
   219  000B66  ECF6  F005         	call	_LCD_Write
   220  000B6A                     
   221                           ;main.c: 13:     _delay((unsigned long)((1000)*(4000000/4000.0)));
   222  000B6A  0E06               	movlw	6
   223  000B6C  6E0C               	movwf	(??_main+1)^0,c
   224  000B6E  0E13               	movlw	19
   225  000B70  6E0B               	movwf	??_main^0,c
   226  000B72  0EAE               	movlw	174
   227  000B74                     u167:
   228  000B74  2EE8               	decfsz	wreg,f,c
   229  000B76  D7FE               	bra	u167
   230  000B78  2E0B               	decfsz	??_main^0,f,c
   231  000B7A  D7FC               	bra	u167
   232  000B7C  2E0C               	decfsz	(??_main+1)^0,f,c
   233  000B7E  D7FA               	bra	u167
   234  000B80                     
   235                           ;main.c: 14:     for(uint8_t i = 0; i < 6; i++){
   236  000B80  0E00               	movlw	0
   237  000B82  6E0D               	movwf	main@i^0,c
   238  000B84                     l1113:
   239                           
   240                           ;main.c: 15:         LCD_Scroll(0x1C);
   241  000B84  0E1C               	movlw	28
   242  000B86  EC63  F006         	call	_LCD_Scroll
   243  000B8A                     
   244                           ;main.c: 16:         _delay((unsigned long)((1000)*(4000000/4000.0)));
   245  000B8A  0E06               	movlw	6
   246  000B8C  6E0C               	movwf	(??_main+1)^0,c
   247  000B8E  0E13               	movlw	19
   248  000B90  6E0B               	movwf	??_main^0,c
   249  000B92  0EAE               	movlw	174
   250  000B94                     u177:
   251  000B94  2EE8               	decfsz	wreg,f,c
   252  000B96  D7FE               	bra	u177
   253  000B98  2E0B               	decfsz	??_main^0,f,c
   254  000B9A  D7FC               	bra	u177
   255  000B9C  2E0C               	decfsz	(??_main+1)^0,f,c
   256  000B9E  D7FA               	bra	u177
   257  000BA0                     
   258                           ;main.c: 17:     }
   259  000BA0  2A0D               	incf	main@i^0,f,c
   260  000BA2  0E05               	movlw	5
   261  000BA4  640D               	cpfsgt	main@i^0,c
   262  000BA6  EFD7  F005         	goto	u141
   263  000BAA  EFD9  F005         	goto	u140
   264  000BAE                     u141:
   265  000BAE  EFC2  F005         	goto	l1113
   266  000BB2                     u140:
   267  000BB2                     
   268                           ;main.c: 18:     for(uint8_t i = 0; i < 6; i++){
   269  000BB2  0E00               	movlw	0
   270  000BB4  6E0E               	movwf	main@i_94^0,c
   271  000BB6                     l1127:
   272                           
   273                           ;main.c: 19:         LCD_Scroll(0x18);
   274  000BB6  0E18               	movlw	24
   275  000BB8  EC63  F006         	call	_LCD_Scroll
   276  000BBC                     
   277                           ;main.c: 20:         _delay((unsigned long)((1000)*(4000000/4000.0)));
   278  000BBC  0E06               	movlw	6
   279  000BBE  6E0C               	movwf	(??_main+1)^0,c
   280  000BC0  0E13               	movlw	19
   281  000BC2  6E0B               	movwf	??_main^0,c
   282  000BC4  0EAE               	movlw	174
   283  000BC6                     u187:
   284  000BC6  2EE8               	decfsz	wreg,f,c
   285  000BC8  D7FE               	bra	u187
   286  000BCA  2E0B               	decfsz	??_main^0,f,c
   287  000BCC  D7FC               	bra	u187
   288  000BCE  2E0C               	decfsz	(??_main+1)^0,f,c
   289  000BD0  D7FA               	bra	u187
   290  000BD2                     
   291                           ;main.c: 21:     }
   292  000BD2  2A0E               	incf	main@i_94^0,f,c
   293  000BD4  0E05               	movlw	5
   294  000BD6  640E               	cpfsgt	main@i_94^0,c
   295  000BD8  EFF0  F005         	goto	u151
   296  000BDC  EFF2  F005         	goto	u150
   297  000BE0                     u151:
   298  000BE0  EFDB  F005         	goto	l1127
   299  000BE4                     u150:
   300  000BE4                     l21:
   301  000BE4  EFF2  F005         	goto	l21
   302  000BE8  EF00  F000         	goto	start
   303  000BEC                     __end_of_main:
   304                           	callstack 0
   305                           
   306 ;; *************** function _LCD_Write *****************
   307 ;; Defined at:
   308 ;;		line 67 in file "LCD_HDD44780.c"
   309 ;; Parameters:    Size  Location     Type
   310 ;;  y               1    wreg     unsigned char 
   311 ;;  x               1    3[COMRAM] unsigned char 
   312 ;;  cadena          2    4[COMRAM] PTR unsigned char 
   313 ;;		 -> STR_1(9), 
   314 ;; Auto vars:     Size  Location     Type
   315 ;;  y               1    8[COMRAM] unsigned char 
   316 ;;  row             1    9[COMRAM] unsigned char 
   317 ;; Return value:  Size  Location     Type
   318 ;;                  1    wreg      void 
   319 ;; Registers used:
   320 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   321 ;; Tracked objects:
   322 ;;		On entry : 0/0
   323 ;;		On exit  : 0/0
   324 ;;		Unchanged: 0/0
   325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   326 ;;      Params:         3       0       0       0       0       0       0       0       0
   327 ;;      Locals:         2       0       0       0       0       0       0       0       0
   328 ;;      Temps:          2       0       0       0       0       0       0       0       0
   329 ;;      Totals:         7       0       0       0       0       0       0       0       0
   330 ;;Total ram usage:        7 bytes
   331 ;; Hardware stack levels used:    1
   332 ;; Hardware stack levels required when called:    1
   333 ;; This function calls:
   334 ;;		_LCD_Char_CP
   335 ;;		_LCD_Cmd
   336 ;; This function is called by:
   337 ;;		_main
   338 ;; This function uses a non-reentrant model
   339 ;;
   340                           
   341                           	psect	text1
   342  000BEC                     __ptext1:
   343                           	callstack 0
   344  000BEC                     _LCD_Write:
   345                           	callstack 29
   346                           
   347                           ;incstack = 0
   348                           ;LCD_Write@y stored from wreg
   349  000BEC  6E09               	movwf	LCD_Write@y^0,c
   350  000BEE                     
   351                           ;LCD_HDD44780.c: 68:     unsigned char row;;LCD_HDD44780.c: 69:     switch (y){
   352  000BEE  EF0D  F006         	goto	l1083
   353  000BF2                     l1073:
   354  000BF2  5004               	movf	LCD_Write@x^0,w,c
   355  000BF4  0F80               	addlw	128
   356  000BF6  6E0A               	movwf	LCD_Write@row^0,c
   357                           
   358                           ;LCD_HDD44780.c: 71:         break;
   359  000BF8  EF2A  F006         	goto	l1085
   360  000BFC                     l1075:
   361  000BFC  5004               	movf	LCD_Write@x^0,w,c
   362  000BFE  0FC0               	addlw	192
   363  000C00  6E0A               	movwf	LCD_Write@row^0,c
   364                           
   365                           ;LCD_HDD44780.c: 73:         break;
   366  000C02  EF2A  F006         	goto	l1085
   367  000C06                     l1077:
   368  000C06  5004               	movf	LCD_Write@x^0,w,c
   369  000C08  0F94               	addlw	148
   370  000C0A  6E0A               	movwf	LCD_Write@row^0,c
   371                           
   372                           ;LCD_HDD44780.c: 75:         break;
   373  000C0C  EF2A  F006         	goto	l1085
   374  000C10                     l1079:
   375  000C10  5004               	movf	LCD_Write@x^0,w,c
   376  000C12  0FD4               	addlw	212
   377  000C14  6E0A               	movwf	LCD_Write@row^0,c
   378  000C16  EF2A  F006         	goto	l1085
   379  000C1A                     l1083:
   380  000C1A  5009               	movf	LCD_Write@y^0,w,c
   381  000C1C  6E07               	movwf	??_LCD_Write^0,c
   382  000C1E  6A08               	clrf	(??_LCD_Write+1)^0,c
   383                           
   384                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   385                           ; Switch size 1, requested type "simple"
   386                           ; Number of cases is 1, Range of values is 0 to 0
   387                           ; switch strategies available:
   388                           ; Name         Instructions Cycles
   389                           ; simple_byte            4     3 (average)
   390                           ;	Chosen strategy is simple_byte
   391  000C20  5008               	movf	(??_LCD_Write+1)^0,w,c
   392  000C22  0A00               	xorlw	0	; case 0
   393  000C24  B4D8               	btfsc	status,2,c
   394  000C26  EF17  F006         	goto	l1139
   395  000C2A  EF2A  F006         	goto	l1085
   396  000C2E                     l1139:
   397                           
   398                           ; Switch size 1, requested type "simple"
   399                           ; Number of cases is 4, Range of values is 0 to 3
   400                           ; switch strategies available:
   401                           ; Name         Instructions Cycles
   402                           ; simple_byte           13     7 (average)
   403                           ;	Chosen strategy is simple_byte
   404  000C2E  5007               	movf	??_LCD_Write^0,w,c
   405  000C30  0A00               	xorlw	0	; case 0
   406  000C32  B4D8               	btfsc	status,2,c
   407  000C34  EFF9  F005         	goto	l1073
   408  000C38  0A01               	xorlw	1	; case 1
   409  000C3A  B4D8               	btfsc	status,2,c
   410  000C3C  EFFE  F005         	goto	l1075
   411  000C40  0A03               	xorlw	3	; case 2
   412  000C42  B4D8               	btfsc	status,2,c
   413  000C44  EF03  F006         	goto	l1077
   414  000C48  0A01               	xorlw	1	; case 3
   415  000C4A  B4D8               	btfsc	status,2,c
   416  000C4C  EF08  F006         	goto	l1079
   417  000C50  EF2A  F006         	goto	l1085
   418  000C54                     l1085:
   419                           
   420                           ;LCD_HDD44780.c: 79:     LCD_Cmd(row);
   421  000C54  500A               	movf	LCD_Write@row^0,w,c
   422  000C56  EC21  F005         	call	_LCD_Cmd
   423                           
   424                           ;LCD_HDD44780.c: 80:     while(*cadena != 0){
   425  000C5A  EF39  F006         	goto	l1091
   426  000C5E                     l1087:
   427                           
   428                           ;LCD_HDD44780.c: 81:         LCD_Char_CP(*cadena);
   429  000C5E  C005  FFF6         	movff	LCD_Write@cadena,tblptrl
   430  000C62  C006  FFF7         	movff	LCD_Write@cadena+1,tblptrh
   431  000C66                     	if	0	;tblptru may be non-zero
   432  000C66                     	endif
   433  000C66                     	if	0	;tblptru may be non-zero
   434  000C66                     	endif
   435  000C66  0008               	tblrd		*
   436  000C68  50F5               	movf	tablat,w,c
   437  000C6A  ECA2  F004         	call	_LCD_Char_CP
   438  000C6E                     
   439                           ;LCD_HDD44780.c: 82:         cadena++;
   440  000C6E  4A05               	infsnz	LCD_Write@cadena^0,f,c
   441  000C70  2A06               	incf	(LCD_Write@cadena+1)^0,f,c
   442  000C72                     l1091:
   443                           
   444                           ;LCD_HDD44780.c: 80:     while(*cadena != 0){
   445  000C72  C005  FFF6         	movff	LCD_Write@cadena,tblptrl
   446  000C76  C006  FFF7         	movff	LCD_Write@cadena+1,tblptrh
   447  000C7A                     	if	0	;tblptru may be non-zero
   448  000C7A                     	endif
   449  000C7A                     	if	0	;tblptru may be non-zero
   450  000C7A                     	endif
   451  000C7A  0008               	tblrd		*
   452  000C7C  50F5               	movf	tablat,w,c
   453  000C7E  0900               	iorlw	0
   454  000C80  A4D8               	btfss	status,2,c
   455  000C82  EF45  F006         	goto	u131
   456  000C86  EF47  F006         	goto	u130
   457  000C8A                     u131:
   458  000C8A  EF2F  F006         	goto	l1087
   459  000C8E                     u130:
   460  000C8E  0012               	return		;funcret
   461  000C90                     __end_of_LCD_Write:
   462                           	callstack 0
   463                           
   464 ;; *************** function _LCD_Char_CP *****************
   465 ;; Defined at:
   466 ;;		line 59 in file "LCD_HDD44780.c"
   467 ;; Parameters:    Size  Location     Type
   468 ;;  letter          1    wreg     unsigned char 
   469 ;; Auto vars:     Size  Location     Type
   470 ;;  letter          1    2[COMRAM] unsigned char 
   471 ;; Return value:  Size  Location     Type
   472 ;;                  1    wreg      void 
   473 ;; Registers used:
   474 ;;		wreg, status,2, status,0
   475 ;; Tracked objects:
   476 ;;		On entry : 0/0
   477 ;;		On exit  : 0/0
   478 ;;		Unchanged: 0/0
   479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   480 ;;      Params:         0       0       0       0       0       0       0       0       0
   481 ;;      Locals:         1       0       0       0       0       0       0       0       0
   482 ;;      Temps:          2       0       0       0       0       0       0       0       0
   483 ;;      Totals:         3       0       0       0       0       0       0       0       0
   484 ;;Total ram usage:        3 bytes
   485 ;; Hardware stack levels used:    1
   486 ;; This function calls:
   487 ;;		Nothing
   488 ;; This function is called by:
   489 ;;		_LCD_Write
   490 ;; This function uses a non-reentrant model
   491 ;;
   492                           
   493                           	psect	text2
   494  000944                     __ptext2:
   495                           	callstack 0
   496  000944                     _LCD_Char_CP:
   497                           	callstack 29
   498                           
   499                           ;incstack = 0
   500                           ;LCD_Char_CP@letter stored from wreg
   501  000944  6E03               	movwf	LCD_Char_CP@letter^0,c
   502  000946                     
   503                           ;LCD_HDD44780.c: 60:     LATDbits.LATD4 = 1; LATDbits.LATD5 = 1; LATDbits.LATD3 = (lette
      +                          r & 0b10000000)>>7; LATDbits.LATD2 = (letter & 0b01000000)>>6; LATDbits.LATD1 = (letter 
      +                          & 0b00100000)>>5;
   504  000946  888C               	bsf	140,4,c	;volatile
   505  000948  8A8C               	bsf	140,5,c	;volatile
   506  00094A  6A01               	clrf	??_LCD_Char_CP^0,c
   507  00094C  AE03               	btfss	LCD_Char_CP@letter^0,7,c
   508  00094E  D001               	bra	u45
   509  000950  2A01               	incf	??_LCD_Char_CP^0,f,c
   510  000952                     u45:
   511  000952  0E01               	movlw	1
   512  000954  1601               	andwf	??_LCD_Char_CP^0,f,c
   513  000956  4601               	rlncf	??_LCD_Char_CP^0,f,c
   514  000958  4601               	rlncf	??_LCD_Char_CP^0,f,c
   515  00095A  4601               	rlncf	??_LCD_Char_CP^0,f,c
   516  00095C  508C               	movf	140,w,c	;volatile
   517  00095E  1801               	xorwf	??_LCD_Char_CP^0,w,c
   518  000960  0BF7               	andlw	-9
   519  000962  1801               	xorwf	??_LCD_Char_CP^0,w,c
   520  000964  6E8C               	movwf	140,c	;volatile
   521  000966  C003  F001         	movff	LCD_Char_CP@letter,??_LCD_Char_CP
   522  00096A  0E06               	movlw	6
   523  00096C  6E02               	movwf	(??_LCD_Char_CP+1)^0,c
   524  00096E                     u55:
   525  00096E  90D8               	bcf	status,0,c
   526  000970  3201               	rrcf	??_LCD_Char_CP^0,f,c
   527  000972  2E02               	decfsz	(??_LCD_Char_CP+1)^0,f,c
   528  000974  EFB7  F004         	goto	u55
   529  000978  0E01               	movlw	1
   530  00097A  1601               	andwf	??_LCD_Char_CP^0,f,c
   531  00097C  4601               	rlncf	??_LCD_Char_CP^0,f,c
   532  00097E  4601               	rlncf	??_LCD_Char_CP^0,f,c
   533  000980  508C               	movf	140,w,c	;volatile
   534  000982  1801               	xorwf	??_LCD_Char_CP^0,w,c
   535  000984  0BFB               	andlw	-5
   536  000986  1801               	xorwf	??_LCD_Char_CP^0,w,c
   537  000988  6E8C               	movwf	140,c	;volatile
   538  00098A  C003  F001         	movff	LCD_Char_CP@letter,??_LCD_Char_CP
   539  00098E  0E05               	movlw	5
   540  000990  6E02               	movwf	(??_LCD_Char_CP+1)^0,c
   541  000992                     u65:
   542  000992  90D8               	bcf	status,0,c
   543  000994  3201               	rrcf	??_LCD_Char_CP^0,f,c
   544  000996  2E02               	decfsz	(??_LCD_Char_CP+1)^0,f,c
   545  000998  EFC9  F004         	goto	u65
   546  00099C  0E01               	movlw	1
   547  00099E  1601               	andwf	??_LCD_Char_CP^0,f,c
   548  0009A0  4601               	rlncf	??_LCD_Char_CP^0,f,c
   549  0009A2  508C               	movf	140,w,c	;volatile
   550  0009A4  1801               	xorwf	??_LCD_Char_CP^0,w,c
   551  0009A6  0BFD               	andlw	-3
   552  0009A8  1801               	xorwf	??_LCD_Char_CP^0,w,c
   553  0009AA  6E8C               	movwf	140,c	;volatile
   554                           
   555                           ;LCD_HDD44780.c: 61:     LATDbits.LATD0 = (letter & 0b00010000)>>4; LATDbits.LATD5 = 0;
   556  0009AC  C003  F001         	movff	LCD_Char_CP@letter,??_LCD_Char_CP
   557  0009B0  3A01               	swapf	??_LCD_Char_CP^0,f,c
   558  0009B2  0E0F               	movlw	15
   559  0009B4  1601               	andwf	??_LCD_Char_CP^0,f,c
   560  0009B6  0E01               	movlw	1
   561  0009B8  1601               	andwf	??_LCD_Char_CP^0,f,c
   562  0009BA  508C               	movf	140,w,c	;volatile
   563  0009BC  1801               	xorwf	??_LCD_Char_CP^0,w,c
   564  0009BE  0BFE               	andlw	-2
   565  0009C0  1801               	xorwf	??_LCD_Char_CP^0,w,c
   566  0009C2  6E8C               	movwf	140,c	;volatile
   567  0009C4  9A8C               	bcf	140,5,c	;volatile
   568  0009C6                     
   569                           ;LCD_HDD44780.c: 62:     LATDbits.LATD4 = 1; LATDbits.LATD5 = 1; LATDbits.LATD3 = (lette
      +                          r & 0b00001000)>>3; LATDbits.LATD2 = (letter & 0b00000100)>>2; LATDbits.LATD1 = (letter 
      +                          & 0b00000010)>>1;
   570  0009C6  888C               	bsf	140,4,c	;volatile
   571  0009C8  8A8C               	bsf	140,5,c	;volatile
   572  0009CA  C003  F001         	movff	LCD_Char_CP@letter,??_LCD_Char_CP
   573  0009CE  90D8               	bcf	status,0,c
   574  0009D0  3201               	rrcf	??_LCD_Char_CP^0,f,c
   575  0009D2  90D8               	bcf	status,0,c
   576  0009D4  3201               	rrcf	??_LCD_Char_CP^0,f,c
   577  0009D6  90D8               	bcf	status,0,c
   578  0009D8  3201               	rrcf	??_LCD_Char_CP^0,f,c
   579  0009DA  0E01               	movlw	1
   580  0009DC  1601               	andwf	??_LCD_Char_CP^0,f,c
   581  0009DE  4601               	rlncf	??_LCD_Char_CP^0,f,c
   582  0009E0  4601               	rlncf	??_LCD_Char_CP^0,f,c
   583  0009E2  4601               	rlncf	??_LCD_Char_CP^0,f,c
   584  0009E4  508C               	movf	140,w,c	;volatile
   585  0009E6  1801               	xorwf	??_LCD_Char_CP^0,w,c
   586  0009E8  0BF7               	andlw	-9
   587  0009EA  1801               	xorwf	??_LCD_Char_CP^0,w,c
   588  0009EC  6E8C               	movwf	140,c	;volatile
   589  0009EE  C003  F001         	movff	LCD_Char_CP@letter,??_LCD_Char_CP
   590  0009F2  90D8               	bcf	status,0,c
   591  0009F4  3201               	rrcf	??_LCD_Char_CP^0,f,c
   592  0009F6  90D8               	bcf	status,0,c
   593  0009F8  3201               	rrcf	??_LCD_Char_CP^0,f,c
   594  0009FA  0E01               	movlw	1
   595  0009FC  1601               	andwf	??_LCD_Char_CP^0,f,c
   596  0009FE  4601               	rlncf	??_LCD_Char_CP^0,f,c
   597  000A00  4601               	rlncf	??_LCD_Char_CP^0,f,c
   598  000A02  508C               	movf	140,w,c	;volatile
   599  000A04  1801               	xorwf	??_LCD_Char_CP^0,w,c
   600  000A06  0BFB               	andlw	-5
   601  000A08  1801               	xorwf	??_LCD_Char_CP^0,w,c
   602  000A0A  6E8C               	movwf	140,c	;volatile
   603  000A0C  C003  F001         	movff	LCD_Char_CP@letter,??_LCD_Char_CP
   604  000A10  90D8               	bcf	status,0,c
   605  000A12  3201               	rrcf	??_LCD_Char_CP^0,f,c
   606  000A14  0E01               	movlw	1
   607  000A16  1601               	andwf	??_LCD_Char_CP^0,f,c
   608  000A18  4601               	rlncf	??_LCD_Char_CP^0,f,c
   609  000A1A  508C               	movf	140,w,c	;volatile
   610  000A1C  1801               	xorwf	??_LCD_Char_CP^0,w,c
   611  000A1E  0BFD               	andlw	-3
   612  000A20  1801               	xorwf	??_LCD_Char_CP^0,w,c
   613  000A22  6E8C               	movwf	140,c	;volatile
   614                           
   615                           ;LCD_HDD44780.c: 63:     LATDbits.LATD0 = (letter & 0b00000001); LATDbits.LATD5 = 0;
   616  000A24  C003  F001         	movff	LCD_Char_CP@letter,??_LCD_Char_CP
   617  000A28  0E01               	movlw	1
   618  000A2A  1601               	andwf	??_LCD_Char_CP^0,f,c
   619  000A2C  508C               	movf	140,w,c	;volatile
   620  000A2E  1801               	xorwf	??_LCD_Char_CP^0,w,c
   621  000A30  0BFE               	andlw	-2
   622  000A32  1801               	xorwf	??_LCD_Char_CP^0,w,c
   623  000A34  6E8C               	movwf	140,c	;volatile
   624  000A36  9A8C               	bcf	140,5,c	;volatile
   625  000A38                     
   626                           ;LCD_HDD44780.c: 64:     _delay((unsigned long)((50)*(4000000/4000000.0)));
   627  000A38  0E10               	movlw	16
   628  000A3A                     u197:
   629  000A3A  2EE8               	decfsz	wreg,f,c
   630  000A3C  D7FE               	bra	u197
   631  000A3E  D000               	nop2	
   632  000A40  0012               	return		;funcret
   633  000A42                     __end_of_LCD_Char_CP:
   634                           	callstack 0
   635                           
   636 ;; *************** function _LCD_Scroll *****************
   637 ;; Defined at:
   638 ;;		line 86 in file "LCD_HDD44780.c"
   639 ;; Parameters:    Size  Location     Type
   640 ;;  data            1    wreg     unsigned char 
   641 ;; Auto vars:     Size  Location     Type
   642 ;;  data            1    3[COMRAM] unsigned char 
   643 ;; Return value:  Size  Location     Type
   644 ;;                  1    wreg      void 
   645 ;; Registers used:
   646 ;;		wreg, status,2, status,0, cstack
   647 ;; Tracked objects:
   648 ;;		On entry : 0/0
   649 ;;		On exit  : 0/0
   650 ;;		Unchanged: 0/0
   651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   652 ;;      Params:         0       0       0       0       0       0       0       0       0
   653 ;;      Locals:         1       0       0       0       0       0       0       0       0
   654 ;;      Temps:          0       0       0       0       0       0       0       0       0
   655 ;;      Totals:         1       0       0       0       0       0       0       0       0
   656 ;;Total ram usage:        1 bytes
   657 ;; Hardware stack levels used:    1
   658 ;; Hardware stack levels required when called:    1
   659 ;; This function calls:
   660 ;;		_LCD_Cmd
   661 ;; This function is called by:
   662 ;;		_main
   663 ;; This function uses a non-reentrant model
   664 ;;
   665                           
   666                           	psect	text3
   667  000CC6                     __ptext3:
   668                           	callstack 0
   669  000CC6                     _LCD_Scroll:
   670                           	callstack 29
   671                           
   672                           ;incstack = 0
   673                           ;LCD_Scroll@data stored from wreg
   674  000CC6  6E04               	movwf	LCD_Scroll@data^0,c
   675  000CC8                     
   676                           ;LCD_HDD44780.c: 87:     LCD_Cmd(data);
   677  000CC8  5004               	movf	LCD_Scroll@data^0,w,c
   678  000CCA  EC21  F005         	call	_LCD_Cmd
   679  000CCE  0012               	return		;funcret
   680  000CD0                     __end_of_LCD_Scroll:
   681                           	callstack 0
   682                           
   683 ;; *************** function _LCD_Cmd *****************
   684 ;; Defined at:
   685 ;;		line 51 in file "LCD_HDD44780.c"
   686 ;; Parameters:    Size  Location     Type
   687 ;;  data            1    wreg     unsigned char 
   688 ;; Auto vars:     Size  Location     Type
   689 ;;  data            1    2[COMRAM] unsigned char 
   690 ;; Return value:  Size  Location     Type
   691 ;;                  1    wreg      void 
   692 ;; Registers used:
   693 ;;		wreg, status,2, status,0
   694 ;; Tracked objects:
   695 ;;		On entry : 0/0
   696 ;;		On exit  : 0/0
   697 ;;		Unchanged: 0/0
   698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   699 ;;      Params:         0       0       0       0       0       0       0       0       0
   700 ;;      Locals:         1       0       0       0       0       0       0       0       0
   701 ;;      Temps:          2       0       0       0       0       0       0       0       0
   702 ;;      Totals:         3       0       0       0       0       0       0       0       0
   703 ;;Total ram usage:        3 bytes
   704 ;; Hardware stack levels used:    1
   705 ;; This function calls:
   706 ;;		Nothing
   707 ;; This function is called by:
   708 ;;		_LCD_Write
   709 ;;		_LCD_Scroll
   710 ;; This function uses a non-reentrant model
   711 ;;
   712                           
   713                           	psect	text4
   714  000A42                     __ptext4:
   715                           	callstack 0
   716  000A42                     _LCD_Cmd:
   717                           	callstack 29
   718                           
   719                           ;incstack = 0
   720                           ;LCD_Cmd@data stored from wreg
   721  000A42  6E03               	movwf	LCD_Cmd@data^0,c
   722  000A44                     
   723                           ;LCD_HDD44780.c: 52:     LATDbits.LATD4 = 0; LATDbits.LATD5 = 1; LATDbits.LATD3 = (data 
      +                          & 0b10000000)>>7; LATDbits.LATD2 = (data & 0b01000000)>>6; LATDbits.LATD1 = (data & 0b00
      +                          100000)>>5;
   724  000A44  988C               	bcf	140,4,c	;volatile
   725  000A46  8A8C               	bsf	140,5,c	;volatile
   726  000A48  6A01               	clrf	??_LCD_Cmd^0,c
   727  000A4A  AE03               	btfss	LCD_Cmd@data^0,7,c
   728  000A4C  D001               	bra	u15
   729  000A4E  2A01               	incf	??_LCD_Cmd^0,f,c
   730  000A50                     u15:
   731  000A50  0E01               	movlw	1
   732  000A52  1601               	andwf	??_LCD_Cmd^0,f,c
   733  000A54  4601               	rlncf	??_LCD_Cmd^0,f,c
   734  000A56  4601               	rlncf	??_LCD_Cmd^0,f,c
   735  000A58  4601               	rlncf	??_LCD_Cmd^0,f,c
   736  000A5A  508C               	movf	140,w,c	;volatile
   737  000A5C  1801               	xorwf	??_LCD_Cmd^0,w,c
   738  000A5E  0BF7               	andlw	-9
   739  000A60  1801               	xorwf	??_LCD_Cmd^0,w,c
   740  000A62  6E8C               	movwf	140,c	;volatile
   741  000A64  C003  F001         	movff	LCD_Cmd@data,??_LCD_Cmd
   742  000A68  0E06               	movlw	6
   743  000A6A  6E02               	movwf	(??_LCD_Cmd+1)^0,c
   744  000A6C                     u25:
   745  000A6C  90D8               	bcf	status,0,c
   746  000A6E  3201               	rrcf	??_LCD_Cmd^0,f,c
   747  000A70  2E02               	decfsz	(??_LCD_Cmd+1)^0,f,c
   748  000A72  EF36  F005         	goto	u25
   749  000A76  0E01               	movlw	1
   750  000A78  1601               	andwf	??_LCD_Cmd^0,f,c
   751  000A7A  4601               	rlncf	??_LCD_Cmd^0,f,c
   752  000A7C  4601               	rlncf	??_LCD_Cmd^0,f,c
   753  000A7E  508C               	movf	140,w,c	;volatile
   754  000A80  1801               	xorwf	??_LCD_Cmd^0,w,c
   755  000A82  0BFB               	andlw	-5
   756  000A84  1801               	xorwf	??_LCD_Cmd^0,w,c
   757  000A86  6E8C               	movwf	140,c	;volatile
   758  000A88  C003  F001         	movff	LCD_Cmd@data,??_LCD_Cmd
   759  000A8C  0E05               	movlw	5
   760  000A8E  6E02               	movwf	(??_LCD_Cmd+1)^0,c
   761  000A90                     u35:
   762  000A90  90D8               	bcf	status,0,c
   763  000A92  3201               	rrcf	??_LCD_Cmd^0,f,c
   764  000A94  2E02               	decfsz	(??_LCD_Cmd+1)^0,f,c
   765  000A96  EF48  F005         	goto	u35
   766  000A9A  0E01               	movlw	1
   767  000A9C  1601               	andwf	??_LCD_Cmd^0,f,c
   768  000A9E  4601               	rlncf	??_LCD_Cmd^0,f,c
   769  000AA0  508C               	movf	140,w,c	;volatile
   770  000AA2  1801               	xorwf	??_LCD_Cmd^0,w,c
   771  000AA4  0BFD               	andlw	-3
   772  000AA6  1801               	xorwf	??_LCD_Cmd^0,w,c
   773  000AA8  6E8C               	movwf	140,c	;volatile
   774                           
   775                           ;LCD_HDD44780.c: 53:     LATDbits.LATD0 = (data & 0b00010000)>>4; LATDbits.LATD5 = 0;
   776  000AAA  C003  F001         	movff	LCD_Cmd@data,??_LCD_Cmd
   777  000AAE  3A01               	swapf	??_LCD_Cmd^0,f,c
   778  000AB0  0E0F               	movlw	15
   779  000AB2  1601               	andwf	??_LCD_Cmd^0,f,c
   780  000AB4  0E01               	movlw	1
   781  000AB6  1601               	andwf	??_LCD_Cmd^0,f,c
   782  000AB8  508C               	movf	140,w,c	;volatile
   783  000ABA  1801               	xorwf	??_LCD_Cmd^0,w,c
   784  000ABC  0BFE               	andlw	-2
   785  000ABE  1801               	xorwf	??_LCD_Cmd^0,w,c
   786  000AC0  6E8C               	movwf	140,c	;volatile
   787  000AC2  9A8C               	bcf	140,5,c	;volatile
   788  000AC4                     
   789                           ;LCD_HDD44780.c: 54:     LATDbits.LATD4 = 0; LATDbits.LATD5 = 1; LATDbits.LATD3 = (data 
      +                          & 0b00001000)>>3; LATDbits.LATD2 = (data & 0b00000100)>>2; LATDbits.LATD1 = (data & 0b00
      +                          000010)>>1;
   790  000AC4  988C               	bcf	140,4,c	;volatile
   791  000AC6  8A8C               	bsf	140,5,c	;volatile
   792  000AC8  C003  F001         	movff	LCD_Cmd@data,??_LCD_Cmd
   793  000ACC  90D8               	bcf	status,0,c
   794  000ACE  3201               	rrcf	??_LCD_Cmd^0,f,c
   795  000AD0  90D8               	bcf	status,0,c
   796  000AD2  3201               	rrcf	??_LCD_Cmd^0,f,c
   797  000AD4  90D8               	bcf	status,0,c
   798  000AD6  3201               	rrcf	??_LCD_Cmd^0,f,c
   799  000AD8  0E01               	movlw	1
   800  000ADA  1601               	andwf	??_LCD_Cmd^0,f,c
   801  000ADC  4601               	rlncf	??_LCD_Cmd^0,f,c
   802  000ADE  4601               	rlncf	??_LCD_Cmd^0,f,c
   803  000AE0  4601               	rlncf	??_LCD_Cmd^0,f,c
   804  000AE2  508C               	movf	140,w,c	;volatile
   805  000AE4  1801               	xorwf	??_LCD_Cmd^0,w,c
   806  000AE6  0BF7               	andlw	-9
   807  000AE8  1801               	xorwf	??_LCD_Cmd^0,w,c
   808  000AEA  6E8C               	movwf	140,c	;volatile
   809  000AEC  C003  F001         	movff	LCD_Cmd@data,??_LCD_Cmd
   810  000AF0  90D8               	bcf	status,0,c
   811  000AF2  3201               	rrcf	??_LCD_Cmd^0,f,c
   812  000AF4  90D8               	bcf	status,0,c
   813  000AF6  3201               	rrcf	??_LCD_Cmd^0,f,c
   814  000AF8  0E01               	movlw	1
   815  000AFA  1601               	andwf	??_LCD_Cmd^0,f,c
   816  000AFC  4601               	rlncf	??_LCD_Cmd^0,f,c
   817  000AFE  4601               	rlncf	??_LCD_Cmd^0,f,c
   818  000B00  508C               	movf	140,w,c	;volatile
   819  000B02  1801               	xorwf	??_LCD_Cmd^0,w,c
   820  000B04  0BFB               	andlw	-5
   821  000B06  1801               	xorwf	??_LCD_Cmd^0,w,c
   822  000B08  6E8C               	movwf	140,c	;volatile
   823  000B0A  C003  F001         	movff	LCD_Cmd@data,??_LCD_Cmd
   824  000B0E  90D8               	bcf	status,0,c
   825  000B10  3201               	rrcf	??_LCD_Cmd^0,f,c
   826  000B12  0E01               	movlw	1
   827  000B14  1601               	andwf	??_LCD_Cmd^0,f,c
   828  000B16  4601               	rlncf	??_LCD_Cmd^0,f,c
   829  000B18  508C               	movf	140,w,c	;volatile
   830  000B1A  1801               	xorwf	??_LCD_Cmd^0,w,c
   831  000B1C  0BFD               	andlw	-3
   832  000B1E  1801               	xorwf	??_LCD_Cmd^0,w,c
   833  000B20  6E8C               	movwf	140,c	;volatile
   834                           
   835                           ;LCD_HDD44780.c: 55:     LATDbits.LATD0 = (data & 0b00000001); LATDbits.LATD5 = 0;
   836  000B22  C003  F001         	movff	LCD_Cmd@data,??_LCD_Cmd
   837  000B26  0E01               	movlw	1
   838  000B28  1601               	andwf	??_LCD_Cmd^0,f,c
   839  000B2A  508C               	movf	140,w,c	;volatile
   840  000B2C  1801               	xorwf	??_LCD_Cmd^0,w,c
   841  000B2E  0BFE               	andlw	-2
   842  000B30  1801               	xorwf	??_LCD_Cmd^0,w,c
   843  000B32  6E8C               	movwf	140,c	;volatile
   844  000B34  9A8C               	bcf	140,5,c	;volatile
   845  000B36                     
   846                           ;LCD_HDD44780.c: 56:     _delay((unsigned long)((50)*(4000000/4000000.0)));
   847  000B36  0E10               	movlw	16
   848  000B38                     u207:
   849  000B38  2EE8               	decfsz	wreg,f,c
   850  000B3A  D7FE               	bra	u207
   851  000B3C  D000               	nop2	
   852  000B3E  0012               	return		;funcret
   853  000B40                     __end_of_LCD_Cmd:
   854                           	callstack 0
   855                           
   856 ;; *************** function _LCD_Init *****************
   857 ;; Defined at:
   858 ;;		line 5 in file "LCD_HDD44780.c"
   859 ;; Parameters:    Size  Location     Type
   860 ;;		None
   861 ;; Auto vars:     Size  Location     Type
   862 ;;		None
   863 ;; Return value:  Size  Location     Type
   864 ;;                  1    wreg      void 
   865 ;; Registers used:
   866 ;;		wreg, status,2
   867 ;; Tracked objects:
   868 ;;		On entry : 0/0
   869 ;;		On exit  : 0/0
   870 ;;		Unchanged: 0/0
   871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   872 ;;      Params:         0       0       0       0       0       0       0       0       0
   873 ;;      Locals:         0       0       0       0       0       0       0       0       0
   874 ;;      Temps:          1       0       0       0       0       0       0       0       0
   875 ;;      Totals:         1       0       0       0       0       0       0       0       0
   876 ;;Total ram usage:        1 bytes
   877 ;; Hardware stack levels used:    1
   878 ;; This function calls:
   879 ;;		Nothing
   880 ;; This function is called by:
   881 ;;		_main
   882 ;; This function uses a non-reentrant model
   883 ;;
   884                           
   885                           	psect	text5
   886  00080C                     __ptext5:
   887                           	callstack 0
   888  00080C                     _LCD_Init:
   889                           	callstack 30
   890  00080C                     
   891                           ;LCD_HDD44780.c: 6:     TRISD = 0x00;
   892  00080C  0E00               	movlw	0
   893  00080E  6E95               	movwf	149,c	;volatile
   894                           
   895                           ;LCD_HDD44780.c: 7:     LATD = 0x00;
   896  000810  0E00               	movlw	0
   897  000812  6E8C               	movwf	140,c	;volatile
   898  000814                     
   899                           ;LCD_HDD44780.c: 8:     _delay((unsigned long)((20)*(4000000/4000.0)));
   900  000814  0E1A               	movlw	26
   901  000816  6E01               	movwf	??_LCD_Init^0,c
   902  000818  0EF8               	movlw	248
   903  00081A                     u217:
   904  00081A  2EE8               	decfsz	wreg,f,c
   905  00081C  D7FE               	bra	u217
   906  00081E  2E01               	decfsz	??_LCD_Init^0,f,c
   907  000820  D7FC               	bra	u217
   908  000822  D000               	nop2	
   909  000824                     
   910                           ;LCD_HDD44780.c: 9:     LATDbits.LATD4 = 0; LATDbits.LATD5 = 1; LATDbits.LATD3 = 0; LATD
      +                          bits.LATD2 = 0; LATDbits.LATD1 = 1; LATDbits.LATD0 = 1; LATDbits.LATD5 = 0;
   911  000824  988C               	bcf	140,4,c	;volatile
   912  000826  8A8C               	bsf	140,5,c	;volatile
   913  000828  968C               	bcf	140,3,c	;volatile
   914  00082A  948C               	bcf	140,2,c	;volatile
   915  00082C  828C               	bsf	140,1,c	;volatile
   916  00082E  808C               	bsf	140,0,c	;volatile
   917  000830  9A8C               	bcf	140,5,c	;volatile
   918  000832                     
   919                           ;LCD_HDD44780.c: 10:     _delay((unsigned long)((5)*(4000000/4000.0)));
   920  000832  0E07               	movlw	7
   921  000834  6E01               	movwf	??_LCD_Init^0,c
   922  000836  0E7D               	movlw	125
   923  000838                     u227:
   924  000838  2EE8               	decfsz	wreg,f,c
   925  00083A  D7FE               	bra	u227
   926  00083C  2E01               	decfsz	??_LCD_Init^0,f,c
   927  00083E  D7FC               	bra	u227
   928  000840  F000               	nop	
   929  000842                     
   930                           ;LCD_HDD44780.c: 11:     LATDbits.LATD4 = 0; LATDbits.LATD5 = 1; LATDbits.LATD3 = 0; LAT
      +                          Dbits.LATD2 = 0; LATDbits.LATD1 = 1; LATDbits.LATD0 = 1; LATDbits.LATD5 = 0;
   931  000842  988C               	bcf	140,4,c	;volatile
   932  000844  8A8C               	bsf	140,5,c	;volatile
   933  000846  968C               	bcf	140,3,c	;volatile
   934  000848  948C               	bcf	140,2,c	;volatile
   935  00084A  828C               	bsf	140,1,c	;volatile
   936  00084C  808C               	bsf	140,0,c	;volatile
   937  00084E  9A8C               	bcf	140,5,c	;volatile
   938  000850                     
   939                           ;LCD_HDD44780.c: 12:     _delay((unsigned long)((120)*(4000000/4000000.0)));
   940  000850  0E28               	movlw	40
   941  000852                     u237:
   942  000852  2EE8               	decfsz	wreg,f,c
   943  000854  D7FE               	bra	u237
   944  000856                     
   945                           ;LCD_HDD44780.c: 13:     LATDbits.LATD4 = 0; LATDbits.LATD5 = 1; LATDbits.LATD3 = 0; LAT
      +                          Dbits.LATD2 = 0; LATDbits.LATD1 = 1; LATDbits.LATD0 = 1; LATDbits.LATD5 = 0;
   946  000856  988C               	bcf	140,4,c	;volatile
   947  000858  8A8C               	bsf	140,5,c	;volatile
   948  00085A  968C               	bcf	140,3,c	;volatile
   949  00085C  948C               	bcf	140,2,c	;volatile
   950  00085E  828C               	bsf	140,1,c	;volatile
   951  000860  808C               	bsf	140,0,c	;volatile
   952  000862  9A8C               	bcf	140,5,c	;volatile
   953  000864                     
   954                           ;LCD_HDD44780.c: 14:     _delay((unsigned long)((120)*(4000000/4000000.0)));
   955  000864  0E28               	movlw	40
   956  000866                     u247:
   957  000866  2EE8               	decfsz	wreg,f,c
   958  000868  D7FE               	bra	u247
   959  00086A                     
   960                           ;LCD_HDD44780.c: 15:     LATDbits.LATD4 = 0; LATDbits.LATD5 = 1; LATDbits.LATD3 = 0; LAT
      +                          Dbits.LATD2 = 0; LATDbits.LATD1 = 1; LATDbits.LATD0 = 0; LATDbits.LATD5 = 0;
   961  00086A  988C               	bcf	140,4,c	;volatile
   962  00086C  8A8C               	bsf	140,5,c	;volatile
   963  00086E  968C               	bcf	140,3,c	;volatile
   964  000870  948C               	bcf	140,2,c	;volatile
   965  000872  828C               	bsf	140,1,c	;volatile
   966  000874  908C               	bcf	140,0,c	;volatile
   967  000876  9A8C               	bcf	140,5,c	;volatile
   968  000878                     
   969                           ;LCD_HDD44780.c: 16:     _delay((unsigned long)((120)*(4000000/4000.0)));
   970  000878  0E9C               	movlw	156
   971  00087A  6E01               	movwf	??_LCD_Init^0,c
   972  00087C  0ED7               	movlw	215
   973  00087E                     u257:
   974  00087E  2EE8               	decfsz	wreg,f,c
   975  000880  D7FE               	bra	u257
   976  000882  2E01               	decfsz	??_LCD_Init^0,f,c
   977  000884  D7FC               	bra	u257
   978  000886  F000               	nop	
   979  000888                     
   980                           ;LCD_HDD44780.c: 17:     LATDbits.LATD4 = 0; LATDbits.LATD5 = 1; LATDbits.LATD3 = 0; LAT
      +                          Dbits.LATD2 = 0; LATDbits.LATD1 = 1; LATDbits.LATD0 = 0; LATDbits.LATD5 = 0;
   981  000888  988C               	bcf	140,4,c	;volatile
   982  00088A  8A8C               	bsf	140,5,c	;volatile
   983  00088C  968C               	bcf	140,3,c	;volatile
   984  00088E  948C               	bcf	140,2,c	;volatile
   985  000890  828C               	bsf	140,1,c	;volatile
   986  000892  908C               	bcf	140,0,c	;volatile
   987  000894  9A8C               	bcf	140,5,c	;volatile
   988  000896                     
   989                           ;LCD_HDD44780.c: 18:     LATDbits.LATD4 = 0; LATDbits.LATD5 = 1; LATDbits.LATD3 = 1; LAT
      +                          Dbits.LATD2 = 0; LATDbits.LATD1 = 0; LATDbits.LATD0 = 0; LATDbits.LATD5 = 0;
   990  000896  988C               	bcf	140,4,c	;volatile
   991  000898  8A8C               	bsf	140,5,c	;volatile
   992  00089A  868C               	bsf	140,3,c	;volatile
   993  00089C  948C               	bcf	140,2,c	;volatile
   994  00089E  928C               	bcf	140,1,c	;volatile
   995  0008A0  908C               	bcf	140,0,c	;volatile
   996  0008A2  9A8C               	bcf	140,5,c	;volatile
   997  0008A4                     
   998                           ;LCD_HDD44780.c: 19:     _delay((unsigned long)((50)*(4000000/4000000.0)));
   999  0008A4  0E10               	movlw	16
  1000  0008A6                     u267:
  1001  0008A6  2EE8               	decfsz	wreg,f,c
  1002  0008A8  D7FE               	bra	u267
  1003  0008AA  D000               	nop2	
  1004  0008AC                     
  1005                           ;LCD_HDD44780.c: 21:     LATDbits.LATD4 = 0; LATDbits.LATD5 = 1; LATDbits.LATD3 = 0; LAT
      +                          Dbits.LATD2 = 0; LATDbits.LATD1 = 0; LATDbits.LATD0 = 0; LATDbits.LATD5 = 0;
  1006  0008AC  988C               	bcf	140,4,c	;volatile
  1007  0008AE  8A8C               	bsf	140,5,c	;volatile
  1008  0008B0  968C               	bcf	140,3,c	;volatile
  1009  0008B2  948C               	bcf	140,2,c	;volatile
  1010  0008B4  928C               	bcf	140,1,c	;volatile
  1011  0008B6  908C               	bcf	140,0,c	;volatile
  1012  0008B8  9A8C               	bcf	140,5,c	;volatile
  1013  0008BA                     
  1014                           ;LCD_HDD44780.c: 22:     LATDbits.LATD4 = 0; LATDbits.LATD5 = 1; LATDbits.LATD3 = 1; LAT
      +                          Dbits.LATD2 = 0; LATDbits.LATD1 = 0; LATDbits.LATD0 = 0; LATDbits.LATD5 = 0;
  1015  0008BA  988C               	bcf	140,4,c	;volatile
  1016  0008BC  8A8C               	bsf	140,5,c	;volatile
  1017  0008BE  868C               	bsf	140,3,c	;volatile
  1018  0008C0  948C               	bcf	140,2,c	;volatile
  1019  0008C2  928C               	bcf	140,1,c	;volatile
  1020  0008C4  908C               	bcf	140,0,c	;volatile
  1021  0008C6  9A8C               	bcf	140,5,c	;volatile
  1022  0008C8                     
  1023                           ;LCD_HDD44780.c: 23:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  1024  0008C8  0E10               	movlw	16
  1025  0008CA                     u277:
  1026  0008CA  2EE8               	decfsz	wreg,f,c
  1027  0008CC  D7FE               	bra	u277
  1028  0008CE  D000               	nop2	
  1029  0008D0                     
  1030                           ;LCD_HDD44780.c: 25:     LATDbits.LATD4 = 0; LATDbits.LATD5 = 1; LATDbits.LATD3 = 0; LAT
      +                          Dbits.LATD2 = 0; LATDbits.LATD1 = 0; LATDbits.LATD0 = 0; LATDbits.LATD5 = 0;
  1031  0008D0  988C               	bcf	140,4,c	;volatile
  1032  0008D2  8A8C               	bsf	140,5,c	;volatile
  1033  0008D4  968C               	bcf	140,3,c	;volatile
  1034  0008D6  948C               	bcf	140,2,c	;volatile
  1035  0008D8  928C               	bcf	140,1,c	;volatile
  1036  0008DA  908C               	bcf	140,0,c	;volatile
  1037  0008DC  9A8C               	bcf	140,5,c	;volatile
  1038  0008DE                     
  1039                           ;LCD_HDD44780.c: 26:     LATDbits.LATD4 = 0; LATDbits.LATD5 = 1; LATDbits.LATD3 = 0; LAT
      +                          Dbits.LATD2 = 0; LATDbits.LATD1 = 0; LATDbits.LATD0 = 1; LATDbits.LATD5 = 0;
  1040  0008DE  988C               	bcf	140,4,c	;volatile
  1041  0008E0  8A8C               	bsf	140,5,c	;volatile
  1042  0008E2  968C               	bcf	140,3,c	;volatile
  1043  0008E4  948C               	bcf	140,2,c	;volatile
  1044  0008E6  928C               	bcf	140,1,c	;volatile
  1045  0008E8  808C               	bsf	140,0,c	;volatile
  1046  0008EA  9A8C               	bcf	140,5,c	;volatile
  1047  0008EC                     
  1048                           ;LCD_HDD44780.c: 27:     _delay((unsigned long)((2)*(4000000/4000.0)));
  1049  0008EC  0E03               	movlw	3
  1050  0008EE  6E01               	movwf	??_LCD_Init^0,c
  1051  0008F0  0E98               	movlw	152
  1052  0008F2                     u287:
  1053  0008F2  2EE8               	decfsz	wreg,f,c
  1054  0008F4  D7FE               	bra	u287
  1055  0008F6  2E01               	decfsz	??_LCD_Init^0,f,c
  1056  0008F8  D7FC               	bra	u287
  1057  0008FA                     
  1058                           ;LCD_HDD44780.c: 29:     LATDbits.LATD4 = 0; LATDbits.LATD5 = 1; LATDbits.LATD3 = 0; LAT
      +                          Dbits.LATD2 = 0; LATDbits.LATD1 = 0; LATDbits.LATD0 = 0; LATDbits.LATD5 = 0;
  1059  0008FA  988C               	bcf	140,4,c	;volatile
  1060  0008FC  8A8C               	bsf	140,5,c	;volatile
  1061  0008FE  968C               	bcf	140,3,c	;volatile
  1062  000900  948C               	bcf	140,2,c	;volatile
  1063  000902  928C               	bcf	140,1,c	;volatile
  1064  000904  908C               	bcf	140,0,c	;volatile
  1065  000906  9A8C               	bcf	140,5,c	;volatile
  1066  000908                     
  1067                           ;LCD_HDD44780.c: 30:     LATDbits.LATD4 = 0; LATDbits.LATD5 = 1; LATDbits.LATD3 = 0; LAT
      +                          Dbits.LATD2 = 1; LATDbits.LATD1 = 1; LATDbits.LATD0 = 0; LATDbits.LATD5 = 0;
  1068  000908  988C               	bcf	140,4,c	;volatile
  1069  00090A  8A8C               	bsf	140,5,c	;volatile
  1070  00090C  968C               	bcf	140,3,c	;volatile
  1071  00090E  848C               	bsf	140,2,c	;volatile
  1072  000910  828C               	bsf	140,1,c	;volatile
  1073  000912  908C               	bcf	140,0,c	;volatile
  1074  000914  9A8C               	bcf	140,5,c	;volatile
  1075  000916                     
  1076                           ;LCD_HDD44780.c: 31:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  1077  000916  0E10               	movlw	16
  1078  000918                     u297:
  1079  000918  2EE8               	decfsz	wreg,f,c
  1080  00091A  D7FE               	bra	u297
  1081  00091C  D000               	nop2	
  1082  00091E                     
  1083                           ;LCD_HDD44780.c: 33:     LATDbits.LATD4 = 0; LATDbits.LATD5 = 1; LATDbits.LATD3 = 0; LAT
      +                          Dbits.LATD2 = 0; LATDbits.LATD1 = 0; LATDbits.LATD0 = 0; LATDbits.LATD5 = 0;
  1084  00091E  988C               	bcf	140,4,c	;volatile
  1085  000920  8A8C               	bsf	140,5,c	;volatile
  1086  000922  968C               	bcf	140,3,c	;volatile
  1087  000924  948C               	bcf	140,2,c	;volatile
  1088  000926  928C               	bcf	140,1,c	;volatile
  1089  000928  908C               	bcf	140,0,c	;volatile
  1090  00092A  9A8C               	bcf	140,5,c	;volatile
  1091  00092C                     
  1092                           ;LCD_HDD44780.c: 34:     LATDbits.LATD4 = 0; LATDbits.LATD5 = 1; LATDbits.LATD3 = 1; LAT
      +                          Dbits.LATD2 = 1; LATDbits.LATD1 = 0; LATDbits.LATD0 = 0; LATDbits.LATD5 = 0;
  1093  00092C  988C               	bcf	140,4,c	;volatile
  1094  00092E  8A8C               	bsf	140,5,c	;volatile
  1095  000930  868C               	bsf	140,3,c	;volatile
  1096  000932  848C               	bsf	140,2,c	;volatile
  1097  000934  928C               	bcf	140,1,c	;volatile
  1098  000936  908C               	bcf	140,0,c	;volatile
  1099  000938  9A8C               	bcf	140,5,c	;volatile
  1100  00093A                     
  1101                           ;LCD_HDD44780.c: 35:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  1102  00093A  0E10               	movlw	16
  1103  00093C                     u307:
  1104  00093C  2EE8               	decfsz	wreg,f,c
  1105  00093E  D7FE               	bra	u307
  1106  000940  D000               	nop2	
  1107  000942  0012               	return		;funcret
  1108  000944                     __end_of_LCD_Init:
  1109                           	callstack 0
  1110                           
  1111 ;; *************** function _LCD_Clear *****************
  1112 ;; Defined at:
  1113 ;;		line 45 in file "LCD_HDD44780.c"
  1114 ;; Parameters:    Size  Location     Type
  1115 ;;		None
  1116 ;; Auto vars:     Size  Location     Type
  1117 ;;		None
  1118 ;; Return value:  Size  Location     Type
  1119 ;;                  1    wreg      void 
  1120 ;; Registers used:
  1121 ;;		wreg
  1122 ;; Tracked objects:
  1123 ;;		On entry : 0/0
  1124 ;;		On exit  : 0/0
  1125 ;;		Unchanged: 0/0
  1126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1127 ;;      Params:         0       0       0       0       0       0       0       0       0
  1128 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1129 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1130 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1131 ;;Total ram usage:        1 bytes
  1132 ;; Hardware stack levels used:    1
  1133 ;; This function calls:
  1134 ;;		Nothing
  1135 ;; This function is called by:
  1136 ;;		_main
  1137 ;; This function uses a non-reentrant model
  1138 ;;
  1139                           
  1140                           	psect	text6
  1141  000C90                     __ptext6:
  1142                           	callstack 0
  1143  000C90                     _LCD_Clear:
  1144                           	callstack 30
  1145  000C90                     
  1146                           ;LCD_HDD44780.c: 46:     LATDbits.LATD4 = 0; LATDbits.LATD5 = 1; LATDbits.LATD3 = 0; LAT
      +                          Dbits.LATD2 = 0; LATDbits.LATD1 = 0; LATDbits.LATD0 = 0; LATDbits.LATD5 = 0;
  1147  000C90  988C               	bcf	140,4,c	;volatile
  1148  000C92  8A8C               	bsf	140,5,c	;volatile
  1149  000C94  968C               	bcf	140,3,c	;volatile
  1150  000C96  948C               	bcf	140,2,c	;volatile
  1151  000C98  928C               	bcf	140,1,c	;volatile
  1152  000C9A  908C               	bcf	140,0,c	;volatile
  1153  000C9C  9A8C               	bcf	140,5,c	;volatile
  1154                           
  1155                           ;LCD_HDD44780.c: 47:     LATDbits.LATD4 = 0; LATDbits.LATD5 = 1; LATDbits.LATD3 = 0; LAT
      +                          Dbits.LATD2 = 0; LATDbits.LATD1 = 0; LATDbits.LATD0 = 1; LATDbits.LATD5 = 0;
  1156  000C9E  988C               	bcf	140,4,c	;volatile
  1157  000CA0  8A8C               	bsf	140,5,c	;volatile
  1158  000CA2  968C               	bcf	140,3,c	;volatile
  1159  000CA4  948C               	bcf	140,2,c	;volatile
  1160  000CA6  928C               	bcf	140,1,c	;volatile
  1161  000CA8  808C               	bsf	140,0,c	;volatile
  1162  000CAA  9A8C               	bcf	140,5,c	;volatile
  1163  000CAC                     
  1164                           ;LCD_HDD44780.c: 48:     _delay((unsigned long)((2)*(4000000/4000.0)));
  1165  000CAC  0E03               	movlw	3
  1166  000CAE  6E01               	movwf	??_LCD_Clear^0,c
  1167  000CB0  0E98               	movlw	152
  1168  000CB2                     u317:
  1169  000CB2  2EE8               	decfsz	wreg,f,c
  1170  000CB4  D7FE               	bra	u317
  1171  000CB6  2E01               	decfsz	??_LCD_Clear^0,f,c
  1172  000CB8  D7FC               	bra	u317
  1173  000CBA  0012               	return		;funcret
  1174  000CBC                     __end_of_LCD_Clear:
  1175                           	callstack 0
  1176                           
  1177                           	psect	rparam
  1178  0000                     
  1179                           	psect	idloc
  1180                           
  1181                           ;Config register IDLOC0 @ 0x200000
  1182                           ;	unspecified, using default values
  1183  200000                     	org	2097152
  1184  200000  FF                 	db	255
  1185                           
  1186                           ;Config register IDLOC1 @ 0x200001
  1187                           ;	unspecified, using default values
  1188  200001                     	org	2097153
  1189  200001  FF                 	db	255
  1190                           
  1191                           ;Config register IDLOC2 @ 0x200002
  1192                           ;	unspecified, using default values
  1193  200002                     	org	2097154
  1194  200002  FF                 	db	255
  1195                           
  1196                           ;Config register IDLOC3 @ 0x200003
  1197                           ;	unspecified, using default values
  1198  200003                     	org	2097155
  1199  200003  FF                 	db	255
  1200                           
  1201                           ;Config register IDLOC4 @ 0x200004
  1202                           ;	unspecified, using default values
  1203  200004                     	org	2097156
  1204  200004  FF                 	db	255
  1205                           
  1206                           ;Config register IDLOC5 @ 0x200005
  1207                           ;	unspecified, using default values
  1208  200005                     	org	2097157
  1209  200005  FF                 	db	255
  1210                           
  1211                           ;Config register IDLOC6 @ 0x200006
  1212                           ;	unspecified, using default values
  1213  200006                     	org	2097158
  1214  200006  FF                 	db	255
  1215                           
  1216                           ;Config register IDLOC7 @ 0x200007
  1217                           ;	unspecified, using default values
  1218  200007                     	org	2097159
  1219  200007  FF                 	db	255
  1220                           
  1221                           	psect	config
  1222                           
  1223                           ;Config register CONFIG1L @ 0x300000
  1224                           ;	PLL Prescaler Selection bits
  1225                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  1226                           ;	System Clock Postscaler Selection bits
  1227                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  1228                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  1229                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  1230  300000                     	org	3145728
  1231  300000  00                 	db	0
  1232                           
  1233                           ;Config register CONFIG1H @ 0x300001
  1234                           ;	Oscillator Selection bits
  1235                           ;	FOSC = INTOSC_XT, Internal oscillator, XT used by USB (INTXT)
  1236                           ;	Fail-Safe Clock Monitor Enable bit
  1237                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1238                           ;	Internal/External Oscillator Switchover bit
  1239                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1240  300001                     	org	3145729
  1241  300001  0A                 	db	10
  1242                           
  1243                           ;Config register CONFIG2L @ 0x300002
  1244                           ;	Power-up Timer Enable bit
  1245                           ;	PWRT = ON, PWRT enabled
  1246                           ;	Brown-out Reset Enable bits
  1247                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1248                           ;	Brown-out Reset Voltage bits
  1249                           ;	BORV = 3, Minimum setting 2.05V
  1250                           ;	USB Voltage Regulator Enable bit
  1251                           ;	VREGEN = OFF, USB voltage regulator disabled
  1252  300002                     	org	3145730
  1253  300002  1E                 	db	30
  1254                           
  1255                           ;Config register CONFIG2H @ 0x300003
  1256                           ;	Watchdog Timer Enable bit
  1257                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1258                           ;	Watchdog Timer Postscale Select bits
  1259                           ;	WDTPS = 32768, 1:32768
  1260  300003                     	org	3145731
  1261  300003  1E                 	db	30
  1262                           
  1263                           ; Padding undefined space
  1264  300004                     	org	3145732
  1265  300004  FF                 	db	255
  1266                           
  1267                           ;Config register CONFIG3H @ 0x300005
  1268                           ;	CCP2 MUX bit
  1269                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  1270                           ;	PORTB A/D Enable bit
  1271                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1272                           ;	Low-Power Timer 1 Oscillator Enable bit
  1273                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1274                           ;	MCLR Pin Enable bit
  1275                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1276  300005                     	org	3145733
  1277  300005  81                 	db	129
  1278                           
  1279                           ;Config register CONFIG4L @ 0x300006
  1280                           ;	Stack Full/Underflow Reset Enable bit
  1281                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1282                           ;	Single-Supply ICSP Enable bit
  1283                           ;	LVP = OFF, Single-Supply ICSP disabled
  1284                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  1285                           ;	ICPRT = OFF, ICPORT disabled
  1286                           ;	Extended Instruction Set Enable bit
  1287                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1288                           ;	Background Debugger Enable bit
  1289                           ;	DEBUG = 0x1, unprogrammed default
  1290  300006                     	org	3145734
  1291  300006  81                 	db	129
  1292                           
  1293                           ; Padding undefined space
  1294  300007                     	org	3145735
  1295  300007  FF                 	db	255
  1296                           
  1297                           ;Config register CONFIG5L @ 0x300008
  1298                           ;	Code Protection bit
  1299                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  1300                           ;	Code Protection bit
  1301                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  1302                           ;	Code Protection bit
  1303                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  1304                           ;	Code Protection bit
  1305                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  1306  300008                     	org	3145736
  1307  300008  0F                 	db	15
  1308                           
  1309                           ;Config register CONFIG5H @ 0x300009
  1310                           ;	Boot Block Code Protection bit
  1311                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  1312                           ;	Data EEPROM Code Protection bit
  1313                           ;	CPD = OFF, Data EEPROM is not code-protected
  1314  300009                     	org	3145737
  1315  300009  C0                 	db	192
  1316                           
  1317                           ;Config register CONFIG6L @ 0x30000A
  1318                           ;	Write Protection bit
  1319                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  1320                           ;	Write Protection bit
  1321                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  1322                           ;	Write Protection bit
  1323                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  1324                           ;	Write Protection bit
  1325                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  1326  30000A                     	org	3145738
  1327  30000A  0F                 	db	15
  1328                           
  1329                           ;Config register CONFIG6H @ 0x30000B
  1330                           ;	Configuration Register Write Protection bit
  1331                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  1332                           ;	Boot Block Write Protection bit
  1333                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  1334                           ;	Data EEPROM Write Protection bit
  1335                           ;	WRTD = OFF, Data EEPROM is not write-protected
  1336  30000B                     	org	3145739
  1337  30000B  E0                 	db	224
  1338                           
  1339                           ;Config register CONFIG7L @ 0x30000C
  1340                           ;	Table Read Protection bit
  1341                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1342                           ;	Table Read Protection bit
  1343                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1344                           ;	Table Read Protection bit
  1345                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1346                           ;	Table Read Protection bit
  1347                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1348  30000C                     	org	3145740
  1349  30000C  0F                 	db	15
  1350                           
  1351                           ;Config register CONFIG7H @ 0x30000D
  1352                           ;	Boot Block Table Read Protection bit
  1353                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  1354  30000D                     	org	3145741
  1355  30000D  40                 	db	64
  1356                           tosu	equ	0xFFF
  1357                           tosh	equ	0xFFE
  1358                           tosl	equ	0xFFD
  1359                           stkptr	equ	0xFFC
  1360                           pclatu	equ	0xFFB
  1361                           pclath	equ	0xFFA
  1362                           pcl	equ	0xFF9
  1363                           tblptru	equ	0xFF8
  1364                           tblptrh	equ	0xFF7
  1365                           tblptrl	equ	0xFF6
  1366                           tablat	equ	0xFF5
  1367                           prodh	equ	0xFF4
  1368                           prodl	equ	0xFF3
  1369                           indf0	equ	0xFEF
  1370                           postinc0	equ	0xFEE
  1371                           postdec0	equ	0xFED
  1372                           preinc0	equ	0xFEC
  1373                           plusw0	equ	0xFEB
  1374                           fsr0h	equ	0xFEA
  1375                           fsr0l	equ	0xFE9
  1376                           wreg	equ	0xFE8
  1377                           indf1	equ	0xFE7
  1378                           postinc1	equ	0xFE6
  1379                           postdec1	equ	0xFE5
  1380                           preinc1	equ	0xFE4
  1381                           plusw1	equ	0xFE3
  1382                           fsr1h	equ	0xFE2
  1383                           fsr1l	equ	0xFE1
  1384                           bsr	equ	0xFE0
  1385                           indf2	equ	0xFDF
  1386                           postinc2	equ	0xFDE
  1387                           postdec2	equ	0xFDD
  1388                           preinc2	equ	0xFDC
  1389                           plusw2	equ	0xFDB
  1390                           fsr2h	equ	0xFDA
  1391                           fsr2l	equ	0xFD9
  1392                           status	equ	0xFD8

Data Sizes:
    Strings     9
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     14      14
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    LCD_Write@cadena	PTR unsigned char  size(2) Largest target is 9
		 -> STR_1(CODE[9]), 


Critical Paths under _main in COMRAM

    _main->_LCD_Write
    _LCD_Write->_LCD_Char_CP
    _LCD_Write->_LCD_Cmd
    _LCD_Scroll->_LCD_Cmd

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     800
                                             10 COMRAM     4     4      0
                          _LCD_Clear
                           _LCD_Init
                         _LCD_Scroll
                          _LCD_Write
 ---------------------------------------------------------------------------------
 (1) _LCD_Write                                            7     4      3     573
                                              3 COMRAM     7     4      3
                        _LCD_Char_CP
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (2) _LCD_Char_CP                                          3     3      0     120
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Scroll                                           1     1      0     135
                                              3 COMRAM     1     1      0
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (2) _LCD_Cmd                                              3     3      0     120
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Clear
   _LCD_Init
   _LCD_Scroll
     _LCD_Cmd
   _LCD_Write
     _LCD_Char_CP
     _LCD_Cmd

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      E       E       1       14.7%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Apr 22 21:35:53 2021

           ?_LCD_Char_CP 0001                       l21 0BE4                       l41 0CBA  
                     l35 0942                       l44 0B3E                       l60 0C8E  
                     l63 0CCE                       l47 0A40              ?_LCD_Scroll 0001  
                     u15 0A50                       u25 0A6C                       u35 0A90  
                     u45 0952                       u55 096E                       u65 0992  
                    l801 0850                      l811 085E                      l803 0856  
                    l901 08D6                      l821 086C                      l813 0860  
                    l805 0858                      l741 0A48                      l911 08E0  
                    l903 08D8                      l831 0876                      l823 086E  
                    l815 0862                      l807 085A                      l751 0B36  
                    l743 0AC2                      l921 08EA                      l913 08E2  
                    l905 08DA                      l841 088E                      l833 0878  
                    l825 0870                      l817 0864                      l809 085C  
                    l745 0AC4                      l761 09C8                      l753 0946  
                    l931 0900                      l923 08EC                      l915 08E4  
                    l907 08DC                      l851 0898                      l843 0890  
                    l835 0888                      l827 0872                      l819 086A  
                    l771 0824                      l747 0AC6                      l739 0A44  
                    l763 0A36                      l755 094A                      l941 090A  
                    l933 0902                      l925 08FA                      l917 08E6  
                    l909 08DE                      l861 08A2                      l853 089A  
                    l845 0892                      l837 088A                      l829 0874  
                    l781 082E                      l773 0826                      l749 0B34  
                    l765 0A38                      l757 09C4                      l951 0914  
                    l943 090C                      l935 0904                      l927 08FC  
                    l919 08E8                      l871 08B2                      l863 08A4  
                    l855 089C                      l847 0894                      l839 088C  
                    l791 0846                      l783 0830                      l775 0828  
                    l767 080C                      l759 09C6                      l961 0924  
                    l953 0916                      l945 090E                      l937 0906  
                    l929 08FE                      l881 08BC                      l873 08B4  
                    l865 08AC                      l857 089E                      l849 0896  
                    l793 0848                      l785 0832                      l777 082A  
                    l769 0814                      l971 092E                      l963 0926  
                    l955 091E                      l947 0910                      l939 0908  
                    l891 08C6                      l883 08BE                      l875 08B6  
                    l867 08AE                      l859 08A0                      l795 084A  
                    l787 0842                      l779 082C                      l981 0938  
                    l973 0930                      l965 0928                      l957 0920  
                    l949 0912                      l893 08C8                      l885 08C0  
                    l877 08B8                      l869 08B0                      l797 084C  
                    l789 0844                      l983 093A                      l975 0932  
                    l967 092A                      l959 0922                      l895 08D0  
                    l887 08C2                      l879 08BA                      l799 084E  
                    l985 0C90                      l977 0934                      l969 092C  
                    l897 08D2                      l889 08C4                      l987 0CAC  
                    l979 0936                      l899 08D4                      u130 0C8E  
                    u131 0C8A                      u140 0BB2                      u141 0BAE  
                    u150 0BE4                      u207 0B38                      u151 0BE0  
                    u217 081A                      u307 093C                      u227 0838  
                    u317 0CB2                      u237 0852                      u247 0866  
                    u167 0B74                      u257 087E                      u177 0B94  
                    u267 08A6                      u187 0BC6                      u277 08CA  
                    u197 0A3A                      u287 08F2                      u297 0918  
                    wreg 000FE8              LCD_Cmd@data 0003          __end_of_LCD_Cmd 0B40  
                   l1101 0B54                     l1015 0CC8                     l1103 0B58  
                   l1121 0BB2                     l1113 0B84                     l1105 0B6A  
                   l1131 0BD2                     l1115 0B8A                     l1107 0B80  
                   l1133 0BD4                     l1117 0BA0                     l1071 0BEE  
                   l1127 0BB6                     l1119 0BA2                     l1073 0BF2  
                   l1129 0BBC                     l1091 0C72                     l1139 0C2E  
                   l1075 0BFC                     l1083 0C1A                     l1077 0C06  
                   l1085 0C54                     l1087 0C5E                     l1079 0C10  
                   l1089 0C6E                     l1097 0B40                     l1099 0B50  
                   STR_1 0801                     _LATD 000F8C                     _main 0B40  
     __size_of_LCD_Clear 002C                     start 0000       __size_of_LCD_Write 00A4  
           ___param_bank 000000         __end_of_LCD_Init 0944                    ?_main 0001  
                  _TRISD 000F95                    main@i 000D                    tablat 000FF5  
    __size_of_LCD_Scroll 000A                    status 000FD8          __initialization 0CBC  
           __end_of_main 0BEC                   ??_main 000B        __end_of_LCD_Clear 0CBC  
          __activetblptr 000002                ??_LCD_Cmd 0001        __end_of_LCD_Write 0C90  
           LCD_Write@row 000A     __size_of_LCD_Char_CP 00FE             __mediumconst 0000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
             __accesstop 0060  __end_of__initialization 0CBC                ?_LCD_Init 0001  
          ___rparam_used 000001           __pcstackCOMRAM 0001             ??_LCD_Scroll 0004  
             ??_LCD_Init 0001       __end_of_LCD_Scroll 0CD0                  _LCD_Cmd 0A42  
                __Hparam 0000                  __Lparam 0000             __psmallconst 0800  
                __pcinit 0CBC                  __ramtop 0800                  __ptext0 0B40  
                __ptext1 0BEC                  __ptext2 0944                  __ptext3 0CC6  
                __ptext4 0A42                  __ptext5 080C                  __ptext6 0C90  
              _LCD_Clear 0C90                _LCD_Write 0BEC     end_of_initialization 0CBC  
          __Lmediumconst 0000               ?_LCD_Clear 0001               ?_LCD_Write 0004  
      __size_of_LCD_Init 0138            ??_LCD_Char_CP 0001               LCD_Write@x 0004  
             LCD_Write@y 0009      start_initialization 0CBC        LCD_Char_CP@letter 0003  
        LCD_Write@cadena 0005      __end_of_LCD_Char_CP 0A42                 ?_LCD_Cmd 0001  
            ??_LCD_Clear 0001              ??_LCD_Write 0007           LCD_Scroll@data 0004  
            __smallconst 0800                 _LCD_Init 080C                 _LATDbits 000F8C  
            _LCD_Char_CP 0944         __size_of_LCD_Cmd 00FE                 __Hrparam 0000  
               __Lrparam 0000            __size_of_main 00AC                 main@i_94 000E  
             _LCD_Scroll 0CC6               _OSCCONbits 000FD3  
