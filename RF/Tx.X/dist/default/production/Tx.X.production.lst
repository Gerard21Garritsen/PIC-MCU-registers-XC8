

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Jun 24 22:04:21 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    11                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    12  0000                     
    13                           ; Version 2.10
    14                           ; Generated 31/07/2019 GMT
    15                           ; 
    16                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC18F4550 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     _RCREG	set	4014
    48  0000                     _PIR1bits	set	3998
    49  0000                     _TXREG	set	4013
    50  0000                     _RCSTAbits	set	4011
    51  0000                     _SPBRG	set	4015
    52  0000                     _TXSTAbits	set	4012
    53  0000                     _TRISCbits	set	3988
    54                           
    55                           ; #config settings
    56  0000                     
    57                           	psect	cinit
    58  007F64                     __pcinit:
    59                           	opt callstack 0
    60  007F64                     start_initialization:
    61                           	opt callstack 0
    62  007F64                     __initialization:
    63                           	opt callstack 0
    64  007F64                     end_of_initialization:
    65                           	opt callstack 0
    66  007F64                     __end_of__initialization:
    67                           	opt callstack 0
    68  007F64  0100               	movlb	0
    69  007F66  EFC4  F03F         	goto	_main	;jump to C main() function
    70                           
    71                           	psect	cstackCOMRAM
    72  000001                     __pcstackCOMRAM:
    73                           	opt callstack 0
    74  000001                     EUSART_Char@Data:
    75                           	opt callstack 0
    76  000001                     EUSART_Init@FCPU:
    77                           	opt callstack 0
    78                           
    79                           ; 4 bytes @ 0x0
    80  000001                     	ds	4
    81  000005                     EUSART_Init@BAUDRATE:
    82                           	opt callstack 0
    83                           
    84                           ; 4 bytes @ 0x4
    85  000005                     	ds	4
    86  000009                     ??_main:
    87                           
    88                           ; 1 bytes @ 0x8
    89  000009                     	ds	2
    90                           
    91 ;;
    92 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
    93 ;;
    94 ;; *************** function _main *****************
    95 ;; Defined at:
    96 ;;		line 7 in file "Main.c"
    97 ;; Parameters:    Size  Location     Type
    98 ;;		None
    99 ;; Auto vars:     Size  Location     Type
   100 ;;		None
   101 ;; Return value:  Size  Location     Type
   102 ;;                  1    wreg      void 
   103 ;; Registers used:
   104 ;;		wreg, status,2, cstack
   105 ;; Tracked objects:
   106 ;;		On entry : 0/0
   107 ;;		On exit  : 0/0
   108 ;;		Unchanged: 0/0
   109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   110 ;;      Params:         0       0       0       0       0       0       0       0       0
   111 ;;      Locals:         0       0       0       0       0       0       0       0       0
   112 ;;      Temps:          2       0       0       0       0       0       0       0       0
   113 ;;      Totals:         2       0       0       0       0       0       0       0       0
   114 ;;Total ram usage:        2 bytes
   115 ;; Hardware stack levels required when called:    1
   116 ;; This function calls:
   117 ;;		_EUSART_Char
   118 ;;		_EUSART_Init
   119 ;; This function is called by:
   120 ;;		Startup code after reset
   121 ;; This function uses a non-reentrant model
   122 ;;
   123                           
   124                           	psect	text0
   125  007F88                     __ptext0:
   126                           	opt callstack 0
   127  007F88                     _main:
   128                           	opt callstack 30
   129                           
   130                           ;Main.c: 8: EUSART_Init(4000000,1200);
   131                           
   132                           ;incstack = 0
   133  007F88  0E00               	movlw	0
   134  007F8A  6E01               	movwf	EUSART_Init@FCPU^0,c
   135  007F8C  0E09               	movlw	9
   136  007F8E  6E02               	movwf	(EUSART_Init@FCPU+1)^0,c
   137  007F90  0E3D               	movlw	61
   138  007F92  6E03               	movwf	(EUSART_Init@FCPU+2)^0,c
   139  007F94  0E00               	movlw	0
   140  007F96  6E04               	movwf	(EUSART_Init@FCPU+3)^0,c
   141  007F98  0EB0               	movlw	176
   142  007F9A  6E05               	movwf	EUSART_Init@BAUDRATE^0,c
   143  007F9C  0E04               	movlw	4
   144  007F9E  6E06               	movwf	(EUSART_Init@BAUDRATE+1)^0,c
   145  007FA0  0E00               	movlw	0
   146  007FA2  6E07               	movwf	(EUSART_Init@BAUDRATE+2)^0,c
   147  007FA4  0E00               	movlw	0
   148  007FA6  6E08               	movwf	(EUSART_Init@BAUDRATE+3)^0,c
   149  007FA8  ECBB  F03F         	call	_EUSART_Init	;wreg free
   150                           
   151                           ;Main.c: 9: _delay((unsigned long)((1000)*(4E6/4000.0)));
   152  007FAC  0E06               	movlw	6
   153  007FAE  6E0A               	movwf	(??_main+1)^0,c
   154  007FB0  0E13               	movlw	19
   155  007FB2  6E09               	movwf	??_main^0,c
   156  007FB4  0EAE               	movlw	174
   157  007FB6                     u47:
   158  007FB6  2EE8               	decfsz	wreg,f,c
   159  007FB8  D7FE               	bra	u47
   160  007FBA  2E09               	decfsz	??_main^0,f,c
   161  007FBC  D7FC               	bra	u47
   162  007FBE  2E0A               	decfsz	(??_main+1)^0,f,c
   163  007FC0  D7FA               	bra	u47
   164  007FC2                     l847:
   165                           
   166                           ;Main.c: 11: EUSART_Char('B');
   167  007FC2  0E42               	movlw	66
   168  007FC4  ECB5  F03F         	call	_EUSART_Char
   169                           
   170                           ;Main.c: 12: _delay((unsigned long)((100)*(4E6/4000.0)));
   171  007FC8  0E82               	movlw	130
   172  007FCA  6E09               	movwf	??_main^0,c
   173  007FCC  0EDE               	movlw	222
   174  007FCE                     u57:
   175  007FCE  2EE8               	decfsz	wreg,f,c
   176  007FD0  D7FE               	bra	u57
   177  007FD2  2E09               	decfsz	??_main^0,f,c
   178  007FD4  D7FC               	bra	u57
   179                           
   180                           ;Main.c: 13: EUSART_Char('G');
   181  007FD6  0E47               	movlw	71
   182  007FD8  ECB5  F03F         	call	_EUSART_Char
   183                           
   184                           ;Main.c: 14: _delay((unsigned long)((100)*(4E6/4000.0)));
   185  007FDC  0E82               	movlw	130
   186  007FDE  6E09               	movwf	??_main^0,c
   187  007FE0  0EDE               	movlw	222
   188  007FE2                     u67:
   189  007FE2  2EE8               	decfsz	wreg,f,c
   190  007FE4  D7FE               	bra	u67
   191  007FE6  2E09               	decfsz	??_main^0,f,c
   192  007FE8  D7FC               	bra	u67
   193                           
   194                           ;Main.c: 15: EUSART_Char('Y');
   195  007FEA  0E59               	movlw	89
   196  007FEC  ECB5  F03F         	call	_EUSART_Char
   197                           
   198                           ;Main.c: 16: _delay((unsigned long)((100)*(4E6/4000.0)));
   199  007FF0  0E82               	movlw	130
   200  007FF2  6E09               	movwf	??_main^0,c
   201  007FF4  0EDE               	movlw	222
   202  007FF6                     u77:
   203  007FF6  2EE8               	decfsz	wreg,f,c
   204  007FF8  D7FE               	bra	u77
   205  007FFA  2E09               	decfsz	??_main^0,f,c
   206  007FFC  D7FC               	bra	u77
   207  007FFE  D7E1               	goto	l847
   208  008000                     __end_of_main:
   209                           	opt callstack 0
   210                           
   211 ;; *************** function _EUSART_Init *****************
   212 ;; Defined at:
   213 ;;		line 9 in file "EUSART.h"
   214 ;; Parameters:    Size  Location     Type
   215 ;;  FCPU            4    0[COMRAM] unsigned long 
   216 ;;  BAUDRATE        4    4[COMRAM] unsigned long 
   217 ;; Auto vars:     Size  Location     Type
   218 ;;		None
   219 ;; Return value:  Size  Location     Type
   220 ;;                  1    wreg      void 
   221 ;; Registers used:
   222 ;;		wreg, status,2
   223 ;; Tracked objects:
   224 ;;		On entry : 0/0
   225 ;;		On exit  : 0/0
   226 ;;		Unchanged: 0/0
   227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   228 ;;      Params:         8       0       0       0       0       0       0       0       0
   229 ;;      Locals:         0       0       0       0       0       0       0       0       0
   230 ;;      Temps:          0       0       0       0       0       0       0       0       0
   231 ;;      Totals:         8       0       0       0       0       0       0       0       0
   232 ;;Total ram usage:        8 bytes
   233 ;; Hardware stack levels used:    1
   234 ;; This function calls:
   235 ;;		Nothing
   236 ;; This function is called by:
   237 ;;		_main
   238 ;; This function uses a non-reentrant model
   239 ;;
   240                           
   241                           	psect	text1
   242  007F76                     __ptext1:
   243                           	opt callstack 0
   244  007F76                     _EUSART_Init:
   245                           	opt callstack 30
   246                           
   247                           ;EUSART.h: 10: TRISCbits.TRISC7 = 1;
   248                           
   249                           ;incstack = 0
   250  007F76  8E94               	bsf	148,7,c	;volatile
   251                           
   252                           ;EUSART.h: 11: TRISCbits.TRISC6 = 0;
   253  007F78  9C94               	bcf	148,6,c	;volatile
   254                           
   255                           ;EUSART.h: 12: TXSTAbits.BRGH = 1;
   256  007F7A  84AC               	bsf	172,2,c	;volatile
   257                           
   258                           ;EUSART.h: 13: SPBRG = 207;
   259  007F7C  0ECF               	movlw	207
   260  007F7E  6EAF               	movwf	175,c	;volatile
   261                           
   262                           ;EUSART.h: 14: TXSTAbits.TXEN = 1;
   263  007F80  8AAC               	bsf	172,5,c	;volatile
   264                           
   265                           ;EUSART.h: 15: RCSTAbits.CREN = 1;
   266  007F82  88AB               	bsf	171,4,c	;volatile
   267                           
   268                           ;EUSART.h: 16: RCSTAbits.SPEN = 1;
   269  007F84  8EAB               	bsf	171,7,c	;volatile
   270  007F86  0012               	return		;funcret
   271  007F88                     __end_of_EUSART_Init:
   272                           	opt callstack 0
   273                           
   274 ;; *************** function _EUSART_Char *****************
   275 ;; Defined at:
   276 ;;		line 20 in file "EUSART.h"
   277 ;; Parameters:    Size  Location     Type
   278 ;;  Data            1    wreg     unsigned char 
   279 ;; Auto vars:     Size  Location     Type
   280 ;;  Data            1    0[COMRAM] unsigned char 
   281 ;; Return value:  Size  Location     Type
   282 ;;                  1    wreg      void 
   283 ;; Registers used:
   284 ;;		wreg
   285 ;; Tracked objects:
   286 ;;		On entry : 0/0
   287 ;;		On exit  : 0/0
   288 ;;		Unchanged: 0/0
   289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   290 ;;      Params:         0       0       0       0       0       0       0       0       0
   291 ;;      Locals:         1       0       0       0       0       0       0       0       0
   292 ;;      Temps:          0       0       0       0       0       0       0       0       0
   293 ;;      Totals:         1       0       0       0       0       0       0       0       0
   294 ;;Total ram usage:        1 bytes
   295 ;; Hardware stack levels used:    1
   296 ;; This function calls:
   297 ;;		Nothing
   298 ;; This function is called by:
   299 ;;		_main
   300 ;;		_EUSART_String
   301 ;; This function uses a non-reentrant model
   302 ;;
   303                           
   304                           	psect	text2
   305  007F6A                     __ptext2:
   306                           	opt callstack 0
   307  007F6A                     _EUSART_Char:
   308                           	opt callstack 30
   309                           
   310                           ;incstack = 0
   311                           ;EUSART_Char@Data stored from wreg
   312  007F6A  6E01               	movwf	EUSART_Char@Data^0,c
   313  007F6C                     
   314                           ;EUSART.h: 21: while(TXSTAbits.TRMT == 0);
   315  007F6C  A2AC               	btfss	172,1,c	;volatile
   316  007F6E  D7FE               	goto	l803
   317                           
   318                           ;EUSART.h: 22: TXREG = Data;
   319  007F70  C001  FFAD         	movff	EUSART_Char@Data,4013	;volatile
   320  007F74  0012               	return		;funcret
   321  007F76                     __end_of_EUSART_Char:
   322                           	opt callstack 0
   323  0000                     
   324                           	psect	rparam
   325  0000                     tosu	equ	0xFFF
   326                           tosh	equ	0xFFE
   327                           tosl	equ	0xFFD
   328                           stkptr	equ	0xFFC
   329                           pclatu	equ	0xFFB
   330                           pclath	equ	0xFFA
   331                           pcl	equ	0xFF9
   332                           tblptru	equ	0xFF8
   333                           tblptrh	equ	0xFF7
   334                           tblptrl	equ	0xFF6
   335                           tablat	equ	0xFF5
   336                           prodh	equ	0xFF4
   337                           prodl	equ	0xFF3
   338                           indf0	equ	0xFEF
   339                           postinc0	equ	0xFEE
   340                           postdec0	equ	0xFED
   341                           preinc0	equ	0xFEC
   342                           plusw0	equ	0xFEB
   343                           fsr0h	equ	0xFEA
   344                           fsr0l	equ	0xFE9
   345                           wreg	equ	0xFE8
   346                           indf1	equ	0xFE7
   347                           postinc1	equ	0xFE6
   348                           postdec1	equ	0xFE5
   349                           preinc1	equ	0xFE4
   350                           plusw1	equ	0xFE3
   351                           fsr1h	equ	0xFE2
   352                           fsr1l	equ	0xFE1
   353                           bsr	equ	0xFE0
   354                           indf2	equ	0xFDF
   355                           postinc2	equ	0xFDE
   356                           postdec2	equ	0xFDD
   357                           preinc2	equ	0xFDC
   358                           plusw2	equ	0xFDB
   359                           fsr2h	equ	0xFDA
   360                           fsr2l	equ	0xFD9
   361                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     10      10
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_EUSART_Init

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     167
                                              8 COMRAM     2     2      0
                        _EUSART_Char
                        _EUSART_Init
 ---------------------------------------------------------------------------------
 (1) _EUSART_Init                                          8     0      8     152
                                              0 COMRAM     8     0      8
 ---------------------------------------------------------------------------------
 (1) _EUSART_Char                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Char
   _EUSART_Init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      A       A       1       10.5%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Jun 24 22:04:21 2020

                     u47 7FB6                       u57 7FCE                       u67 7FE2  
                     u77 7FF6              __CFG_BOR$ON 000000              __CFG_BORV$3 000000  
           __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000  
           __CFG_CP3$OFF 000000                      l803 7F6C                      l847 7FC2  
           __CFG_CPB$OFF 000000             __CFG_CPD$OFF 000000                      wreg 000FE8  
           ?_EUSART_Char 0001             ?_EUSART_Init 0001             __CFG_LVP$OFF 000000  
           __CFG_WDT$OFF 000000                     _main 7F88                     start 0000  
          __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000             ___param_bank 000000  
          __CFG_PLLDIV$1 000000           __CFG_CCP2MX$ON 000000                    ?_main 0001  
                  _RCREG 000FAE                    _SPBRG 000FAF            __CFG_USBDIV$1 000000  
                  _TXREG 000FAD            __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000  
          __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000  
         __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000  
         __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000  
          __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000  
         __CFG_ICPRT$OFF 000000          __initialization 7F64             __end_of_main 8000  
                 ??_main 0009            __activetblptr 000000           __CFG_XINST$OFF 000000  
         __CFG_STVREN$ON 000000     __size_of_EUSART_Char 000C     __size_of_EUSART_Init 0012  
             __accesstop 0060  __end_of__initialization 7F64          __CFG_PBADEN$OFF 000000  
        __CFG_FOSC$XT_XT 000000            ___rparam_used 000001           __pcstackCOMRAM 0001  
        __CFG_VREGEN$OFF 000000                  __Hparam 0000                  __Lparam 0000  
                __pcinit 7F64                  __ramtop 0800                  __ptext0 7F88  
                __ptext1 7F76                  __ptext2 7F6A     end_of_initialization 7F64  
              _RCSTAbits 000FAB                _TRISCbits 000F94                _TXSTAbits 000FAC  
    start_initialization 7F64            ??_EUSART_Char 0001            ??_EUSART_Init 0009  
       __CFG_LPT1OSC$OFF 000000      EUSART_Init@BAUDRATE 0005      __end_of_EUSART_Char 7F76  
    __end_of_EUSART_Init 7F88                 _PIR1bits 000F9E         __CFG_WDTPS$32768 000000  
        EUSART_Char@Data 0001              _EUSART_Char 7F6A              _EUSART_Init 7F76  
        EUSART_Init@FCPU 0001                 __Hrparam 0000                 __Lrparam 0000  
          __size_of_main 0078    __CFG_CPUDIV$OSC1_PLL2 000000  
