

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Mar 03 16:38:17 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    46                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    47                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    48                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    49  0000                     
    50                           ; Version 2.20
    51                           ; Generated 12/02/2020 GMT
    52                           ; 
    53                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    54                           ; All rights reserved.
    55                           ; 
    56                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    57                           ; 
    58                           ; Redistribution and use in source and binary forms, with or without modification, are
    59                           ; permitted provided that the following conditions are met:
    60                           ; 
    61                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    62                           ;        conditions and the following disclaimer.
    63                           ; 
    64                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    65                           ;        of conditions and the following disclaimer in the documentation and/or other
    66                           ;        materials provided with the distribution.
    67                           ; 
    68                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    69                           ;        software without specific prior written permission.
    70                           ; 
    71                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    72                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    73                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    74                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    75                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    76                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    77                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    78                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    79                           ; 
    80                           ; 
    81                           ; Code-generator required, PIC18F4550 Definitions
    82                           ; 
    83                           ; SFR Addresses
    84  0000                     _SSPBUF	set	4041
    85  0000                     _SSPCON2bits	set	4037
    86  0000                     _SSPCON2	set	4037
    87  0000                     _SSPADD	set	4040
    88  0000                     _SSPCON1bits	set	4038
    89  0000                     _SSPSTATbits	set	4039
    90  0000                     _TRISBbits	set	3987
    91  0000                     _OSCCONbits	set	4051
    92  0000                     _LATDbits	set	3980
    93  0000                     _TRISDbits	set	3989
    94  0000                     _SSPIF	set	31987
    95                           
    96                           	psect	smallconst
    97  000800                     __psmallconst:
    98                           	callstack 0
    99  000800  00                 	db	0
   100  000801                     STR_3:
   101  000801  52                 	db	82	;'R'
   102  000802  65                 	db	101	;'e'
   103  000803  6C                 	db	108	;'l'
   104  000804  6F                 	db	111	;'o'
   105  000805  6A                 	db	106	;'j'
   106  000806  20                 	db	32
   107  000807  52                 	db	82	;'R'
   108  000808  54                 	db	84	;'T'
   109  000809  43                 	db	67	;'C'
   110  00080A  20                 	db	32
   111  00080B  44                 	db	68	;'D'
   112  00080C  53                 	db	83	;'S'
   113  00080D  31                 	db	49	;'1'
   114  00080E  33                 	db	51	;'3'
   115  00080F  30                 	db	48	;'0'
   116  000810  37                 	db	55	;'7'
   117  000811  00                 	db	0
   118  000812                     STR_1:
   119  000812  25                 	db	37
   120  000813  64                 	db	100	;'d'
   121  000814  2F                 	db	47
   122  000815  25                 	db	37
   123  000816  64                 	db	100	;'d'
   124  000817  2F                 	db	47
   125  000818  25                 	db	37
   126  000819  64                 	db	100	;'d'
   127  00081A  00                 	db	0
   128  00081B                     STR_2:
   129  00081B  25                 	db	37
   130  00081C  64                 	db	100	;'d'
   131  00081D  3A                 	db	58	;':'
   132  00081E  25                 	db	37
   133  00081F  64                 	db	100	;'d'
   134  000820  3A                 	db	58	;':'
   135  000821  25                 	db	37
   136  000822  64                 	db	100	;'d'
   137  000823  00                 	db	0
   138  000824  00                 	db	0	; dummy byte at the end
   139  0000                     
   140                           ; #config settings
   141                           
   142                           	psect	cinit
   143  001776                     __pcinit:
   144                           	callstack 0
   145  001776                     start_initialization:
   146                           	callstack 0
   147  001776                     __initialization:
   148                           	callstack 0
   149                           
   150                           ; Clear objects allocated to BANK0 (38 bytes)
   151  001776  EE00  F060         	lfsr	0,__pbssBANK0
   152  00177A  0E26               	movlw	38
   153  00177C                     clear_0:
   154  00177C  6AEE               	clrf	postinc0,c
   155  00177E  06E8               	decf	wreg,f,c
   156  001780  E1FD               	bnz	clear_0
   157                           
   158                           ; Clear objects allocated to COMRAM (2 bytes)
   159  001782  6A5E               	clrf	(__pbssCOMRAM+1)& (0+255),c
   160  001784  6A5D               	clrf	__pbssCOMRAM& (0+255),c
   161  001786                     end_of_initialization:
   162                           	callstack 0
   163  001786                     __end_of__initialization:
   164                           	callstack 0
   165  001786  0E00               	movlw	low (__Lmediumconst shr (0+16))
   166  001788  6EF8               	movwf	tblptru,c
   167  00178A  0100               	movlb	0
   168  00178C  EFA9  F008         	goto	_main	;jump to C main() function
   169                           
   170                           	psect	bssCOMRAM
   171  00005D                     __pbssCOMRAM:
   172                           	callstack 0
   173  00005D                     _flags:
   174                           	callstack 0
   175  00005D                     	ds	2
   176                           
   177                           	psect	bssBANK0
   178  000060                     __pbssBANK0:
   179                           	callstack 0
   180  000060                     _nout:
   181                           	callstack 0
   182  000060                     	ds	2
   183  000062                     _width:
   184                           	callstack 0
   185  000062                     	ds	2
   186  000064                     _prec:
   187                           	callstack 0
   188  000064                     	ds	2
   189  000066                     _dbuf:
   190                           	callstack 0
   191  000066                     	ds	32
   192                           
   193                           	psect	cstackBANK0
   194  000086                     __pcstackBANK0:
   195                           	callstack 0
   196  000086                     main@date:
   197                           	callstack 0
   198                           
   199                           ; 10 bytes @ 0x0
   200  000086                     	ds	10
   201  000090                     main@time:
   202                           	callstack 0
   203                           
   204                           ; 10 bytes @ 0xA
   205  000090                     	ds	10
   206  00009A                     main@datos:
   207                           	callstack 0
   208                           
   209                           ; 7 bytes @ 0x14
   210  00009A                     	ds	7
   211                           
   212                           	psect	cstackCOMRAM
   213  000001                     __pcstackCOMRAM:
   214                           	callstack 0
   215  000001                     ??_Lcd_Cmd:
   216  000001                     ??_Lcd_Chr_CP:
   217  000001                     ??_BCDbin:
   218  000001                     ??_I2Cidle:
   219  000001                     ?_strlen:
   220                           	callstack 0
   221  000001                     ?___lldiv:
   222                           	callstack 0
   223  000001                     ?___aodiv:
   224                           	callstack 0
   225  000001                     ?___aomod:
   226                           	callstack 0
   227  000001                     I2Cwrite@data:
   228                           	callstack 0
   229  000001                     ___lbdiv@divisor:
   230                           	callstack 0
   231  000001                     ___lbmod@divisor:
   232                           	callstack 0
   233  000001                     strlen@s:
   234                           	callstack 0
   235  000001                     fputc@c:
   236                           	callstack 0
   237  000001                     ___lldiv@dividend:
   238                           	callstack 0
   239  000001                     ___aodiv@dividend:
   240                           	callstack 0
   241  000001                     ___aomod@dividend:
   242                           	callstack 0
   243                           
   244                           ; 8 bytes @ 0x0
   245  000001                     	ds	1
   246  000002                     I2Cdata@data:
   247                           	callstack 0
   248  000002                     BCDbin@bcd:
   249                           	callstack 0
   250  000002                     ___lbdiv@dividend:
   251                           	callstack 0
   252  000002                     ___lbmod@dividend:
   253                           	callstack 0
   254                           
   255                           ; 1 bytes @ 0x1
   256  000002                     	ds	1
   257  000003                     Lcd_Chr_CP@data:
   258                           	callstack 0
   259  000003                     Lcd_Cmd@data:
   260                           	callstack 0
   261  000003                     I2Cdata@address:
   262                           	callstack 0
   263  000003                     ___lbdiv@counter:
   264                           	callstack 0
   265  000003                     ___lbmod@counter:
   266                           	callstack 0
   267  000003                     fputc@fp:
   268                           	callstack 0
   269  000003                     strlen@a:
   270                           	callstack 0
   271                           
   272                           ; 1 bytes @ 0x2
   273  000003                     	ds	1
   274  000004                     ??_fputc:
   275  000004                     ??_Lcd_Init:
   276  000004                     Lcd_Out2@x:
   277                           	callstack 0
   278  000004                     DS1307read@data:
   279                           	callstack 0
   280  000004                     ___lbdiv@quotient:
   281                           	callstack 0
   282  000004                     ___lbmod@rem:
   283                           	callstack 0
   284                           
   285                           ; 1 bytes @ 0x3
   286  000004                     	ds	1
   287  000005                     ??_binBCD:
   288  000005                     Lcd_Init@data:
   289                           	callstack 0
   290  000005                     Lcd_Out2@buffer:
   291                           	callstack 0
   292  000005                     ___lldiv@divisor:
   293                           	callstack 0
   294                           
   295                           ; 4 bytes @ 0x4
   296  000005                     	ds	1
   297  000006                     binBCD@bin:
   298                           	callstack 0
   299                           
   300                           ; 1 bytes @ 0x5
   301  000006                     	ds	1
   302  000007                     ??_Lcd_Out2:
   303  000007                     DS1307setTime@minutes:
   304                           	callstack 0
   305                           
   306                           ; 1 bytes @ 0x6
   307  000007                     	ds	1
   308  000008                     DS1307setTime@seconds:
   309                           	callstack 0
   310                           
   311                           ; 1 bytes @ 0x7
   312  000008                     	ds	1
   313  000009                     Lcd_Out2@y:
   314                           	callstack 0
   315  000009                     DS1307setTime@day:
   316                           	callstack 0
   317  000009                     fputs@s:
   318                           	callstack 0
   319  000009                     ___lldiv@quotient:
   320                           	callstack 0
   321  000009                     ___aodiv@divisor:
   322                           	callstack 0
   323  000009                     ___aomod@divisor:
   324                           	callstack 0
   325                           
   326                           ; 8 bytes @ 0x8
   327  000009                     	ds	1
   328  00000A                     Lcd_Out2@data:
   329                           	callstack 0
   330  00000A                     DS1307setTime@week:
   331                           	callstack 0
   332  00000A                     fputs@fp:
   333                           	callstack 0
   334                           
   335                           ; 1 bytes @ 0x9
   336  00000A                     	ds	1
   337  00000B                     DS1307setTime@month:
   338                           	callstack 0
   339  00000B                     fputs@c:
   340                           	callstack 0
   341                           
   342                           ; 1 bytes @ 0xA
   343  00000B                     	ds	1
   344  00000C                     DS1307setTime@year:
   345                           	callstack 0
   346  00000C                     fputs@i:
   347                           	callstack 0
   348                           
   349                           ; 2 bytes @ 0xB
   350  00000C                     	ds	1
   351  00000D                     DS1307setTime@hours:
   352                           	callstack 0
   353  00000D                     ___lldiv@counter:
   354                           	callstack 0
   355                           
   356                           ; 1 bytes @ 0xC
   357  00000D                     	ds	1
   358  00000E                     ?_pad:
   359                           	callstack 0
   360  00000E                     pad@fp:
   361                           	callstack 0
   362  00000E                     I2Cinit@FCPU:
   363                           	callstack 0
   364                           
   365                           ; 4 bytes @ 0xD
   366  00000E                     	ds	1
   367  00000F                     pad@buf:
   368                           	callstack 0
   369                           
   370                           ; 1 bytes @ 0xE
   371  00000F                     	ds	1
   372  000010                     pad@p:
   373                           	callstack 0
   374                           
   375                           ; 2 bytes @ 0xF
   376  000010                     	ds	1
   377  000011                     ___aodiv@counter:
   378                           	callstack 0
   379  000011                     ___aomod@counter:
   380                           	callstack 0
   381                           
   382                           ; 1 bytes @ 0x10
   383  000011                     	ds	1
   384  000012                     ??_pad:
   385  000012                     ___aodiv@sign:
   386                           	callstack 0
   387  000012                     ___aomod@sign:
   388                           	callstack 0
   389  000012                     I2Cinit@clock:
   390                           	callstack 0
   391                           
   392                           ; 4 bytes @ 0x11
   393  000012                     	ds	1
   394  000013                     ?_abs:
   395                           	callstack 0
   396  000013                     pad@i:
   397                           	callstack 0
   398  000013                     abs@a:
   399                           	callstack 0
   400  000013                     ___aodiv@quotient:
   401                           	callstack 0
   402                           
   403                           ; 8 bytes @ 0x12
   404  000013                     	ds	2
   405  000015                     ??_abs:
   406  000015                     pad@w:
   407                           	callstack 0
   408                           
   409                           ; 2 bytes @ 0x14
   410  000015                     	ds	1
   411  000016                     ??_I2Cinit:
   412                           
   413                           ; 1 bytes @ 0x15
   414  000016                     	ds	4
   415  00001A                     I2Cinit@speed:
   416                           	callstack 0
   417                           
   418                           ; 1 bytes @ 0x19
   419  00001A                     	ds	1
   420  00001B                     ?_dtoa:
   421                           	callstack 0
   422  00001B                     dtoa@fp:
   423                           	callstack 0
   424                           
   425                           ; 1 bytes @ 0x1A
   426  00001B                     	ds	1
   427  00001C                     dtoa@d:
   428                           	callstack 0
   429                           
   430                           ; 8 bytes @ 0x1B
   431  00001C                     	ds	8
   432  000024                     ??_dtoa:
   433                           
   434                           ; 1 bytes @ 0x23
   435  000024                     	ds	8
   436  00002C                     _dtoa$1063:
   437                           	callstack 0
   438                           
   439                           ; 2 bytes @ 0x2B
   440  00002C                     	ds	2
   441  00002E                     dtoa@p:
   442                           	callstack 0
   443                           
   444                           ; 2 bytes @ 0x2D
   445  00002E                     	ds	2
   446  000030                     dtoa@w:
   447                           	callstack 0
   448                           
   449                           ; 2 bytes @ 0x2F
   450  000030                     	ds	2
   451  000032                     dtoa@s:
   452                           	callstack 0
   453                           
   454                           ; 2 bytes @ 0x31
   455  000032                     	ds	2
   456  000034                     dtoa@n:
   457                           	callstack 0
   458                           
   459                           ; 8 bytes @ 0x33
   460  000034                     	ds	8
   461  00003C                     dtoa@i:
   462                           	callstack 0
   463                           
   464                           ; 2 bytes @ 0x3B
   465  00003C                     	ds	2
   466  00003E                     ?_vfpfcnvrt:
   467                           	callstack 0
   468  00003E                     vfpfcnvrt@fp:
   469                           	callstack 0
   470                           
   471                           ; 1 bytes @ 0x3D
   472  00003E                     	ds	1
   473  00003F                     vfpfcnvrt@fmt:
   474                           	callstack 0
   475                           
   476                           ; 1 bytes @ 0x3E
   477  00003F                     	ds	1
   478  000040                     vfpfcnvrt@ap:
   479                           	callstack 0
   480                           
   481                           ; 1 bytes @ 0x3F
   482  000040                     	ds	1
   483  000041                     vfpfcnvrt@ll:
   484                           	callstack 0
   485                           
   486                           ; 8 bytes @ 0x40
   487  000041                     	ds	8
   488  000049                     ?_vfprintf:
   489                           	callstack 0
   490  000049                     vfprintf@fp:
   491                           	callstack 0
   492                           
   493                           ; 1 bytes @ 0x48
   494  000049                     	ds	1
   495  00004A                     vfprintf@fmt:
   496                           	callstack 0
   497                           
   498                           ; 1 bytes @ 0x49
   499  00004A                     	ds	1
   500  00004B                     vfprintf@ap:
   501                           	callstack 0
   502                           
   503                           ; 1 bytes @ 0x4A
   504  00004B                     	ds	1
   505  00004C                     vfprintf@cfmt:
   506                           	callstack 0
   507                           
   508                           ; 1 bytes @ 0x4B
   509  00004C                     	ds	1
   510  00004D                     ?_sprintf:
   511                           	callstack 0
   512  00004D                     sprintf@s:
   513                           	callstack 0
   514                           
   515                           ; 1 bytes @ 0x4C
   516  00004D                     	ds	1
   517  00004E                     sprintf@fmt:
   518                           	callstack 0
   519                           
   520                           ; 1 bytes @ 0x4D
   521  00004E                     	ds	7
   522  000055                     
   523                           ; 1 bytes @ 0x54
   524  000055                     	ds	2
   525  000057                     sprintf@ap:
   526                           	callstack 0
   527                           
   528                           ; 1 bytes @ 0x56
   529  000057                     	ds	1
   530  000058                     sprintf@f:
   531                           	callstack 0
   532                           
   533                           ; 5 bytes @ 0x57
   534  000058                     	ds	5
   535  00005D                     
   536                           ; 1 bytes @ 0x5C
   537 ;;
   538 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   539 ;;
   540 ;; *************** function _main *****************
   541 ;; Defined at:
   542 ;;		line 11 in file "Main.c"
   543 ;; Parameters:    Size  Location     Type
   544 ;;		None
   545 ;; Auto vars:     Size  Location     Type
   546 ;;  time           10   10[BANK0 ] unsigned char [10]
   547 ;;  date           10    0[BANK0 ] unsigned char [10]
   548 ;;  datos           7   20[BANK0 ] unsigned char [7]
   549 ;; Return value:  Size  Location     Type
   550 ;;                  1    wreg      void 
   551 ;; Registers used:
   552 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   553 ;; Tracked objects:
   554 ;;		On entry : 0/0
   555 ;;		On exit  : 0/0
   556 ;;		Unchanged: 0/0
   557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   558 ;;      Params:         0       0       0       0       0       0       0       0       0
   559 ;;      Locals:         0      27       0       0       0       0       0       0       0
   560 ;;      Temps:          0       0       0       0       0       0       0       0       0
   561 ;;      Totals:         0      27       0       0       0       0       0       0       0
   562 ;;Total ram usage:       27 bytes
   563 ;; Hardware stack levels required when called:    8
   564 ;; This function calls:
   565 ;;		_DS1307read
   566 ;;		_DS1307setTime
   567 ;;		_I2Cinit
   568 ;;		_Lcd_Cmd
   569 ;;		_Lcd_Init
   570 ;;		_Lcd_Out2
   571 ;;		_sprintf
   572 ;; This function is called by:
   573 ;;		Startup code after reset
   574 ;; This function uses a non-reentrant model
   575 ;;
   576                           
   577                           	psect	text0
   578  001152                     __ptext0:
   579                           	callstack 0
   580  001152                     _main:
   581                           	callstack 23
   582                           
   583                           ;Main.c: 12:     OSCCONbits.SCS = 0x02;
   584                           
   585                           ;incstack = 0
   586  001152  50D3               	movf	211,w,c	;volatile
   587  001154  0BFC               	andlw	-4
   588  001156  0902               	iorlw	2
   589  001158  6ED3               	movwf	211,c	;volatile
   590                           
   591                           ;Main.c: 13:     OSCCONbits.IRCF = 0x06;
   592  00115A  50D3               	movf	211,w,c	;volatile
   593  00115C  0B8F               	andlw	-113
   594  00115E  0960               	iorlw	96
   595  001160  6ED3               	movwf	211,c	;volatile
   596                           
   597                           ;Main.c: 14:     uint8_t datos[7];;Main.c: 15:     unsigned char date[10];;Main.c: 16:  
      +                             unsigned char time[10];;Main.c: 18:     I2Cinit(4000000,100000);
   598  001162  0E00               	movlw	0
   599  001164  6E0E               	movwf	I2Cinit@FCPU^0,c
   600  001166  0E09               	movlw	9
   601  001168  6E0F               	movwf	(I2Cinit@FCPU+1)^0,c
   602  00116A  0E3D               	movlw	61
   603  00116C  6E10               	movwf	(I2Cinit@FCPU+2)^0,c
   604  00116E  0E00               	movlw	0
   605  001170  6E11               	movwf	(I2Cinit@FCPU+3)^0,c
   606  001172  0EA0               	movlw	160
   607  001174  6E12               	movwf	I2Cinit@clock^0,c
   608  001176  0E86               	movlw	134
   609  001178  6E13               	movwf	(I2Cinit@clock+1)^0,c
   610  00117A  0E01               	movlw	1
   611  00117C  6E14               	movwf	(I2Cinit@clock+2)^0,c
   612  00117E  0E00               	movlw	0
   613  001180  6E15               	movwf	(I2Cinit@clock+3)^0,c
   614  001182  ECC8  F00A         	call	_I2Cinit	;wreg free
   615                           
   616                           ;Main.c: 19:     Lcd_Init();
   617  001186  EC20  F008         	call	_Lcd_Init	;wreg free
   618                           
   619                           ;Main.c: 20:     Lcd_Cmd(1);
   620  00118A  0E01               	movlw	1
   621  00118C  EC91  F007         	call	_Lcd_Cmd
   622                           
   623                           ;Main.c: 21:     Lcd_Cmd(12);
   624  001190  0E0C               	movlw	12
   625  001192  EC91  F007         	call	_Lcd_Cmd
   626                           
   627                           ;Main.c: 23:     DS1307setTime(24,59,50,1,1,3,21);
   628  001196  0E3B               	movlw	59
   629  001198  6E07               	movwf	DS1307setTime@minutes^0,c
   630  00119A  0E32               	movlw	50
   631  00119C  6E08               	movwf	DS1307setTime@seconds^0,c
   632  00119E  0E01               	movlw	1
   633  0011A0  6E09               	movwf	DS1307setTime@day^0,c
   634  0011A2  0E01               	movlw	1
   635  0011A4  6E0A               	movwf	DS1307setTime@week^0,c
   636  0011A6  0E03               	movlw	3
   637  0011A8  6E0B               	movwf	DS1307setTime@month^0,c
   638  0011AA  0E15               	movlw	21
   639  0011AC  6E0C               	movwf	DS1307setTime@year^0,c
   640  0011AE  0E18               	movlw	24
   641  0011B0  EC94  F00A         	call	_DS1307setTime
   642  0011B4                     l2139:
   643                           
   644                           ;Main.c: 26:         DS1307read(datos);
   645  0011B4  0E9A               	movlw	low main@datos
   646  0011B6  6E04               	movwf	DS1307read@data^0,c
   647  0011B8  EC24  F009         	call	_DS1307read	;wreg free
   648                           
   649                           ;Main.c: 27:         sprintf(date,"%d/%d/%d",datos[4],datos[5],datos[6]);
   650  0011BC  0E86               	movlw	low main@date
   651  0011BE  6E4D               	movwf	sprintf@s^0,c
   652  0011C0  0E12               	movlw	low STR_1
   653  0011C2  6E4E               	movwf	sprintf@fmt^0,c
   654  0011C4  C09E  F04F         	movff	main@datos+4,?_sprintf+2
   655  0011C8  6A50               	clrf	(?_sprintf+3)^0,c
   656  0011CA  C09F  F051         	movff	main@datos+5,?_sprintf+4
   657  0011CE  6A52               	clrf	(?_sprintf+5)^0,c
   658  0011D0  C0A0  F053         	movff	main@datos+6,?_sprintf+6
   659  0011D4  6A54               	clrf	(?_sprintf+7)^0,c
   660  0011D6  EC39  F00B         	call	_sprintf	;wreg free
   661                           
   662                           ; BSR set to: 0
   663                           ;Main.c: 28:         sprintf(time,"%d:%d:%d",datos[2],datos[1],datos[0]);
   664  0011DA  0E90               	movlw	low main@time
   665  0011DC  6E4D               	movwf	sprintf@s^0,c
   666  0011DE  0E1B               	movlw	low STR_2
   667  0011E0  6E4E               	movwf	sprintf@fmt^0,c
   668  0011E2  C09C  F04F         	movff	main@datos+2,?_sprintf+2
   669  0011E6  6A50               	clrf	(?_sprintf+3)^0,c
   670  0011E8  C09B  F051         	movff	main@datos+1,?_sprintf+4
   671  0011EC  6A52               	clrf	(?_sprintf+5)^0,c
   672  0011EE  C09A  F053         	movff	main@datos,?_sprintf+6
   673  0011F2  6A54               	clrf	(?_sprintf+7)^0,c
   674  0011F4  EC39  F00B         	call	_sprintf	;wreg free
   675                           
   676                           ; BSR set to: 0
   677                           ;Main.c: 29:         Lcd_Out2(1,2,"Reloj RTC DS1307");
   678  0011F8  0E02               	movlw	2
   679  0011FA  6E04               	movwf	Lcd_Out2@x^0,c
   680  0011FC  0E01               	movlw	low STR_3
   681  0011FE  6E05               	movwf	Lcd_Out2@buffer^0,c
   682  001200  5005               	movf	Lcd_Out2@buffer^0,w,c
   683  001202  A4D8               	btfss	status,2,c
   684  001204  0E08               	movlw	high __smallconst
   685  001206  6E06               	movwf	(Lcd_Out2@buffer+1)^0,c
   686  001208  0E01               	movlw	1
   687  00120A  EC85  F009         	call	_Lcd_Out2
   688                           
   689                           ;Main.c: 30:         Lcd_Out2(2,6,date);
   690  00120E  0E06               	movlw	6
   691  001210  6E04               	movwf	Lcd_Out2@x^0,c
   692  001212  0E86               	movlw	low main@date
   693  001214  6E05               	movwf	Lcd_Out2@buffer^0,c
   694  001216  6A06               	clrf	(Lcd_Out2@buffer+1)^0,c
   695  001218  0E02               	movlw	2
   696  00121A  EC85  F009         	call	_Lcd_Out2
   697                           
   698                           ;Main.c: 31:         Lcd_Out2(3,6,time);
   699  00121E  0E06               	movlw	6
   700  001220  6E04               	movwf	Lcd_Out2@x^0,c
   701  001222  0E90               	movlw	low main@time
   702  001224  6E05               	movwf	Lcd_Out2@buffer^0,c
   703  001226  6A06               	clrf	(Lcd_Out2@buffer+1)^0,c
   704  001228  0E03               	movlw	3
   705  00122A  EC85  F009         	call	_Lcd_Out2
   706                           
   707                           ;Main.c: 32:         _delay((unsigned long)((100)*(4000000/4000000.0)));
   708  00122E  0E21               	movlw	33
   709  001230                     u1497:
   710  001230  2EE8               	decfsz	wreg,f,c
   711  001232  D7FE               	bra	u1497
   712  001234  F000               	nop	
   713                           
   714                           ;Main.c: 33:         if(datos[0] == 59)
   715  001236  0E3B               	movlw	59
   716  001238  0100               	movlb	0	; () banked
   717  00123A  199A               	xorwf	main@datos& (0+255),w,b
   718  00123C  A4D8               	btfss	status,2,c
   719  00123E  D7BA               	goto	l2139
   720                           
   721                           ; BSR set to: 0
   722                           ;Main.c: 34:             Lcd_Cmd(1);
   723  001240  0E01               	movlw	1
   724  001242  EC91  F007         	call	_Lcd_Cmd
   725  001246  D7B6               	goto	l2139
   726  001248                     __end_of_main:
   727                           	callstack 0
   728                           
   729 ;; *************** function _sprintf *****************
   730 ;; Defined at:
   731 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_sprintf.c"
   732 ;; Parameters:    Size  Location     Type
   733 ;;  s               1   76[COMRAM] PTR unsigned char 
   734 ;;		 -> main@time(10), main@date(10), 
   735 ;;  fmt             1   77[COMRAM] PTR const unsigned char 
   736 ;;		 -> STR_2(9), STR_1(9), 
   737 ;; Auto vars:     Size  Location     Type
   738 ;;  f               5   87[COMRAM] struct _IO_FILE
   739 ;;  ret             2    0        int 
   740 ;;  ap              1   86[COMRAM] PTR void [1]
   741 ;;		 -> ?_sprintf(2), 
   742 ;; Return value:  Size  Location     Type
   743 ;;                  2   76[COMRAM] int 
   744 ;; Registers used:
   745 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   746 ;; Tracked objects:
   747 ;;		On entry : 0/0
   748 ;;		On exit  : 3F/0
   749 ;;		Unchanged: 0/0
   750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   751 ;;      Params:         8       0       0       0       0       0       0       0       0
   752 ;;      Locals:         8       0       0       0       0       0       0       0       0
   753 ;;      Temps:          0       0       0       0       0       0       0       0       0
   754 ;;      Totals:        16       0       0       0       0       0       0       0       0
   755 ;;Total ram usage:       16 bytes
   756 ;; Hardware stack levels used:    1
   757 ;; Hardware stack levels required when called:    7
   758 ;; This function calls:
   759 ;;		_vfprintf
   760 ;; This function is called by:
   761 ;;		_main
   762 ;; This function uses a non-reentrant model
   763 ;;
   764                           
   765                           	psect	text1
   766  001672                     __ptext1:
   767                           	callstack 0
   768  001672                     _sprintf:
   769                           	callstack 23
   770                           
   771                           ;incstack = 0
   772  001672  0E4F               	movlw	low (?_sprintf+2)
   773  001674  6E57               	movwf	sprintf@ap^0,c
   774  001676  C04D  F058         	movff	sprintf@s,sprintf@f
   775  00167A  0E00               	movlw	0
   776  00167C  6E5A               	movwf	(sprintf@f+2)^0,c
   777  00167E  0E00               	movlw	0
   778  001680  6E59               	movwf	(sprintf@f+1)^0,c
   779  001682  0E00               	movlw	0
   780  001684  6E5C               	movwf	(sprintf@f+4)^0,c
   781  001686  0E00               	movlw	0
   782  001688  6E5B               	movwf	(sprintf@f+3)^0,c
   783  00168A  0E58               	movlw	low sprintf@f
   784  00168C  6E49               	movwf	vfprintf@fp^0,c
   785  00168E  C04E  F04A         	movff	sprintf@fmt,vfprintf@fmt
   786  001692  0E57               	movlw	low sprintf@ap
   787  001694  6E4B               	movwf	vfprintf@ap^0,c
   788  001696  ECF9  F00A         	call	_vfprintf	;wreg free
   789                           
   790                           ; BSR set to: 0
   791  00169A  504D               	movf	sprintf@s^0,w,c
   792  00169C  2459               	addwf	(sprintf@f+1)^0,w,c
   793  00169E  6ED9               	movwf	fsr2l,c
   794  0016A0  6ADA               	clrf	fsr2h,c
   795  0016A2  0E00               	movlw	0
   796  0016A4  6EDF               	movwf	indf2,c
   797                           
   798                           ; BSR set to: 0
   799  0016A6  0012               	return		;funcret
   800  0016A8                     __end_of_sprintf:
   801                           	callstack 0
   802                           
   803 ;; *************** function _vfprintf *****************
   804 ;; Defined at:
   805 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
   806 ;; Parameters:    Size  Location     Type
   807 ;;  fp              1   72[COMRAM] PTR struct _IO_FILE
   808 ;;		 -> sprintf@f(5), 
   809 ;;  fmt             1   73[COMRAM] PTR const unsigned char 
   810 ;;		 -> STR_2(9), STR_1(9), 
   811 ;;  ap              1   74[COMRAM] PTR PTR void 
   812 ;;		 -> sprintf@ap(1), 
   813 ;; Auto vars:     Size  Location     Type
   814 ;;  cfmt            1   75[COMRAM] PTR unsigned char 
   815 ;;		 -> STR_2(9), STR_1(9), 
   816 ;; Return value:  Size  Location     Type
   817 ;;                  2   72[COMRAM] int 
   818 ;; Registers used:
   819 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   820 ;; Tracked objects:
   821 ;;		On entry : 0/0
   822 ;;		On exit  : 3F/0
   823 ;;		Unchanged: 0/0
   824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   825 ;;      Params:         3       0       0       0       0       0       0       0       0
   826 ;;      Locals:         1       0       0       0       0       0       0       0       0
   827 ;;      Temps:          0       0       0       0       0       0       0       0       0
   828 ;;      Totals:         4       0       0       0       0       0       0       0       0
   829 ;;Total ram usage:        4 bytes
   830 ;; Hardware stack levels used:    1
   831 ;; Hardware stack levels required when called:    6
   832 ;; This function calls:
   833 ;;		_vfpfcnvrt
   834 ;; This function is called by:
   835 ;;		_sprintf
   836 ;; This function uses a non-reentrant model
   837 ;;
   838                           
   839                           	psect	text2
   840  0015F2                     __ptext2:
   841                           	callstack 0
   842  0015F2                     _vfprintf:
   843                           	callstack 23
   844                           
   845                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
   846                           
   847                           ; BSR set to: 0
   848                           ;incstack = 0
   849  0015F2  C04A  F04C         	movff	vfprintf@fmt,vfprintf@cfmt
   850                           
   851                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
   852  0015F6  0E00               	movlw	0
   853  0015F8  0100               	movlb	0	; () banked
   854  0015FA  6F61               	movwf	(_nout+1)& (0+255),b
   855  0015FC  0E00               	movlw	0
   856  0015FE  6F60               	movwf	_nout& (0+255),b
   857                           
   858                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
   859  001600  D00D               	goto	l1983
   860  001602                     l1981:
   861                           
   862                           ; BSR set to: 0
   863                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
   864  001602  C049  F03E         	movff	vfprintf@fp,vfpfcnvrt@fp
   865  001606  0E4C               	movlw	low vfprintf@cfmt
   866  001608  6E3F               	movwf	vfpfcnvrt@fmt^0,c
   867  00160A  C04B  F040         	movff	vfprintf@ap,vfpfcnvrt@ap
   868  00160E  ECCE  F005         	call	_vfpfcnvrt	;wreg free
   869  001612  503E               	movf	?_vfpfcnvrt^0,w,c
   870  001614  0100               	movlb	0	; () banked
   871  001616  2760               	addwf	_nout& (0+255),f,b
   872  001618  503F               	movf	(?_vfpfcnvrt+1)^0,w,c
   873  00161A  2361               	addwfc	(_nout+1)& (0+255),f,b
   874  00161C                     l1983:
   875                           
   876                           ; BSR set to: 0
   877                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
   878  00161C  C04C  FFF6         	movff	vfprintf@cfmt,tblptrl
   879  001620                     	if	1	;There is more than 1 active tblptr byte
   880  001620  0E08               	movlw	high __smallconst
   881  001622  6EF7               	movwf	tblptrh,c
   882  001624                     	endif
   883  001624                     	if	0	;tblptru may be non-zero
   884  001624                     	endif
   885  001624                     	if	0	;tblptru may be non-zero
   886  001624                     	endif
   887  001624  0008               	tblrd		*
   888  001626  50F5               	movf	tablat,w,c
   889  001628  0900               	iorlw	0
   890  00162A  A4D8               	btfss	status,2,c
   891  00162C  D7EA               	goto	l1981
   892                           
   893                           ; BSR set to: 0
   894                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
   895  00162E  C060  F049         	movff	_nout,?_vfprintf
   896  001632  C061  F04A         	movff	_nout+1,?_vfprintf+1
   897                           
   898                           ; BSR set to: 0
   899  001636  0012               	return		;funcret
   900  001638                     __end_of_vfprintf:
   901                           	callstack 0
   902                           
   903 ;; *************** function _vfpfcnvrt *****************
   904 ;; Defined at:
   905 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
   906 ;; Parameters:    Size  Location     Type
   907 ;;  fp              1   61[COMRAM] PTR struct _IO_FILE
   908 ;;		 -> sprintf@f(5), 
   909 ;;  fmt             1   62[COMRAM] PTR PTR unsigned char 
   910 ;;		 -> vfprintf@cfmt(1), 
   911 ;;  ap              1   63[COMRAM] PTR PTR void 
   912 ;;		 -> sprintf@ap(1), 
   913 ;; Auto vars:     Size  Location     Type
   914 ;;  ll              8   64[COMRAM] long long 
   915 ;;  llu             8    0        unsigned long long 
   916 ;;  f               4    0        unsigned long long 
   917 ;;  vp              3    0        PTR void 
   918 ;;  ct              3    0        unsigned char [3]
   919 ;;  cp              3    0        PTR unsigned char 
   920 ;;  i               2    0        int 
   921 ;;  done            2    0        int 
   922 ;;  c               1    0        unsigned char 
   923 ;; Return value:  Size  Location     Type
   924 ;;                  2   61[COMRAM] int 
   925 ;; Registers used:
   926 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   927 ;; Tracked objects:
   928 ;;		On entry : 0/0
   929 ;;		On exit  : 0/0
   930 ;;		Unchanged: 0/0
   931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   932 ;;      Params:         3       0       0       0       0       0       0       0       0
   933 ;;      Locals:         8       0       0       0       0       0       0       0       0
   934 ;;      Temps:          0       0       0       0       0       0       0       0       0
   935 ;;      Totals:        11       0       0       0       0       0       0       0       0
   936 ;;Total ram usage:       11 bytes
   937 ;; Hardware stack levels used:    1
   938 ;; Hardware stack levels required when called:    5
   939 ;; This function calls:
   940 ;;		_dtoa
   941 ;;		_fputc
   942 ;; This function is called by:
   943 ;;		_vfprintf
   944 ;; This function uses a non-reentrant model
   945 ;;
   946                           
   947                           	psect	text3
   948  000B9C                     __ptext3:
   949                           	callstack 0
   950  000B9C                     _vfpfcnvrt:
   951                           	callstack 23
   952                           
   953                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
   954                           
   955                           ; BSR set to: 0
   956                           ;incstack = 0
   957  000B9C  503F               	movf	vfpfcnvrt@fmt^0,w,c
   958  000B9E  6ED9               	movwf	fsr2l,c
   959  000BA0  6ADA               	clrf	fsr2h,c
   960  000BA2  CFDF FFF6          	movff	indf2,tblptrl
   961  000BA6                     	if	1	;There is more than 1 active tblptr byte
   962  000BA6  0E08               	movlw	high __smallconst
   963  000BA8  6EF7               	movwf	tblptrh,c
   964  000BAA                     	endif
   965  000BAA                     	if	0	;tblptru may be non-zero
   966  000BAA                     	endif
   967  000BAA                     	if	0	;tblptru may be non-zero
   968  000BAA                     	endif
   969  000BAA  0008               	tblrd		*
   970  000BAC  50F5               	movf	tablat,w,c
   971  000BAE  0A25               	xorlw	37
   972  000BB0  A4D8               	btfss	status,2,c
   973  000BB2  D07F               	goto	l1857
   974                           
   975                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
   976  000BB4  503F               	movf	vfpfcnvrt@fmt^0,w,c
   977  000BB6  6ED9               	movwf	fsr2l,c
   978  000BB8  6ADA               	clrf	fsr2h,c
   979  000BBA  2ADF               	incf	indf2,f,c
   980                           
   981                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
   982  000BBC  0E00               	movlw	0
   983  000BBE  0100               	movlb	0	; () banked
   984  000BC0  6F63               	movwf	(_width+1)& (0+255),b
   985  000BC2  0E00               	movlw	0
   986  000BC4  6F62               	movwf	_width& (0+255),b
   987  000BC6  C062  F05D         	movff	_width,_flags
   988  000BCA  C063  F05E         	movff	_width+1,_flags+1
   989                           
   990                           ; BSR set to: 0
   991                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
   992  000BCE  6964               	setf	_prec& (0+255),b
   993  000BD0  6965               	setf	(_prec+1)& (0+255),b
   994                           
   995                           ; BSR set to: 0
   996                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
   997  000BD2  503F               	movf	vfpfcnvrt@fmt^0,w,c
   998  000BD4  6ED9               	movwf	fsr2l,c
   999  000BD6  6ADA               	clrf	fsr2h,c
  1000  000BD8  CFDF FFF6          	movff	indf2,tblptrl
  1001  000BDC                     	if	1	;There is more than 1 active tblptr byte
  1002  000BDC  0E08               	movlw	high __smallconst
  1003  000BDE  6EF7               	movwf	tblptrh,c
  1004  000BE0                     	endif
  1005  000BE0                     	if	0	;tblptru may be non-zero
  1006  000BE0                     	endif
  1007  000BE0                     	if	0	;tblptru may be non-zero
  1008  000BE0                     	endif
  1009  000BE0  0008               	tblrd		*
  1010  000BE2  50F5               	movf	tablat,w,c
  1011  000BE4  0A64               	xorlw	100
  1012  000BE6  B4D8               	btfsc	status,2,c
  1013  000BE8  D00C               	goto	u1250
  1014                           
  1015                           ; BSR set to: 0
  1016  000BEA  503F               	movf	vfpfcnvrt@fmt^0,w,c
  1017  000BEC  6ED9               	movwf	fsr2l,c
  1018  000BEE  6ADA               	clrf	fsr2h,c
  1019  000BF0  CFDF FFF6          	movff	indf2,tblptrl
  1020  000BF4                     	if	1	;There is more than 1 active tblptr byte
  1021  000BF4  0E08               	movlw	high __smallconst
  1022  000BF6  6EF7               	movwf	tblptrh,c
  1023  000BF8                     	endif
  1024  000BF8                     	if	0	;tblptru may be non-zero
  1025  000BF8                     	endif
  1026  000BF8                     	if	0	;tblptru may be non-zero
  1027  000BF8                     	endif
  1028  000BF8  0008               	tblrd		*
  1029  000BFA  50F5               	movf	tablat,w,c
  1030  000BFC  0A69               	xorlw	105
  1031  000BFE  A4D8               	btfss	status,2,c
  1032  000C00  D032               	goto	l1841
  1033  000C02                     u1250:
  1034                           
  1035                           ; BSR set to: 0
  1036                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  1037  000C02  503F               	movf	vfpfcnvrt@fmt^0,w,c
  1038  000C04  6ED9               	movwf	fsr2l,c
  1039  000C06  6ADA               	clrf	fsr2h,c
  1040  000C08  2ADF               	incf	indf2,f,c
  1041                           
  1042                           ; BSR set to: 0
  1043                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1044  000C0A  5040               	movf	vfpfcnvrt@ap^0,w,c
  1045  000C0C  6ED9               	movwf	fsr2l,c
  1046  000C0E  6ADA               	clrf	fsr2h,c
  1047  000C10  50DF               	movf	indf2,w,c
  1048  000C12  2ADF               	incf	indf2,f,c
  1049  000C14  2ADF               	incf	indf2,f,c
  1050  000C16  6ED9               	movwf	fsr2l,c
  1051  000C18  6ADA               	clrf	fsr2h,c
  1052  000C1A  CFDE F041          	movff	postinc2,vfpfcnvrt@ll
  1053  000C1E  CFDD F042          	movff	postdec2,vfpfcnvrt@ll+1
  1054  000C22  0E00               	movlw	0
  1055  000C24  BE42               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  1056  000C26  0EFF               	movlw	-1
  1057  000C28  6E43               	movwf	(vfpfcnvrt@ll+2)^0,c
  1058  000C2A  6E44               	movwf	(vfpfcnvrt@ll+3)^0,c
  1059  000C2C  6E45               	movwf	(vfpfcnvrt@ll+4)^0,c
  1060  000C2E  6E46               	movwf	(vfpfcnvrt@ll+5)^0,c
  1061  000C30  6E47               	movwf	(vfpfcnvrt@ll+6)^0,c
  1062  000C32  6E48               	movwf	(vfpfcnvrt@ll+7)^0,c
  1063                           
  1064                           ; BSR set to: 0
  1065                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  1066  000C34  C03E  F01B         	movff	vfpfcnvrt@fp,dtoa@fp
  1067  000C38  C041  F01C         	movff	vfpfcnvrt@ll,dtoa@d
  1068  000C3C  C042  F01D         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1069  000C40  C043  F01E         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1070  000C44  C044  F01F         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1071  000C48  C045  F020         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1072  000C4C  C046  F021         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1073  000C50  C047  F022         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1074  000C54  C048  F023         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1075  000C58  EC13  F004         	call	_dtoa	;wreg free
  1076  000C5C  C01B  F03E         	movff	?_dtoa,?_vfpfcnvrt
  1077  000C60  C01C  F03F         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1078  000C64  0012               	return	
  1079  000C66                     l1841:
  1080                           
  1081                           ; BSR set to: 0
  1082                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  1083  000C66  503F               	movf	vfpfcnvrt@fmt^0,w,c
  1084  000C68  6ED9               	movwf	fsr2l,c
  1085  000C6A  6ADA               	clrf	fsr2h,c
  1086  000C6C  CFDF FFF6          	movff	indf2,tblptrl
  1087  000C70                     	if	1	;There is more than 1 active tblptr byte
  1088  000C70  0E08               	movlw	high __smallconst
  1089  000C72  6EF7               	movwf	tblptrh,c
  1090  000C74                     	endif
  1091  000C74                     	if	0	;tblptru may be non-zero
  1092  000C74                     	endif
  1093  000C74                     	if	0	;tblptru may be non-zero
  1094  000C74                     	endif
  1095  000C74  0008               	tblrd		*
  1096  000C76  50F5               	movf	tablat,w,c
  1097  000C78  0A25               	xorlw	37
  1098  000C7A  A4D8               	btfss	status,2,c
  1099  000C7C  D011               	goto	l1851
  1100                           
  1101                           ; BSR set to: 0
  1102                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  1103  000C7E  503F               	movf	vfpfcnvrt@fmt^0,w,c
  1104  000C80  6ED9               	movwf	fsr2l,c
  1105  000C82  6ADA               	clrf	fsr2h,c
  1106  000C84  2ADF               	incf	indf2,f,c
  1107                           
  1108                           ; BSR set to: 0
  1109                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  1110  000C86  0E00               	movlw	0
  1111  000C88  6E02               	movwf	(fputc@c+1)^0,c
  1112  000C8A  0E25               	movlw	37
  1113  000C8C  6E01               	movwf	fputc@c^0,c
  1114  000C8E  C03E  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1115  000C92  EC15  F00A         	call	_fputc	;wreg free
  1116  000C96                     l1847:
  1117                           
  1118                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  1119  000C96  0E00               	movlw	0
  1120  000C98  6E3F               	movwf	(?_vfpfcnvrt+1)^0,c
  1121  000C9A  0E01               	movlw	1
  1122  000C9C  6E3E               	movwf	?_vfpfcnvrt^0,c
  1123  000C9E  0012               	return	
  1124  000CA0                     l1851:
  1125                           
  1126                           ; BSR set to: 0
  1127                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  1128  000CA0  503F               	movf	vfpfcnvrt@fmt^0,w,c
  1129  000CA2  6ED9               	movwf	fsr2l,c
  1130  000CA4  6ADA               	clrf	fsr2h,c
  1131  000CA6  2ADF               	incf	indf2,f,c
  1132                           
  1133                           ; BSR set to: 0
  1134                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  1135  000CA8  0E00               	movlw	0
  1136  000CAA  6E3F               	movwf	(?_vfpfcnvrt+1)^0,c
  1137  000CAC  0E00               	movlw	0
  1138  000CAE  6E3E               	movwf	?_vfpfcnvrt^0,c
  1139  000CB0  0012               	return	
  1140  000CB2                     l1857:
  1141                           
  1142                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  1143  000CB2  503F               	movf	vfpfcnvrt@fmt^0,w,c
  1144  000CB4  6ED9               	movwf	fsr2l,c
  1145  000CB6  6ADA               	clrf	fsr2h,c
  1146  000CB8  CFDF FFF6          	movff	indf2,tblptrl
  1147  000CBC                     	if	1	;There is more than 1 active tblptr byte
  1148  000CBC  0E08               	movlw	high __smallconst
  1149  000CBE  6EF7               	movwf	tblptrh,c
  1150  000CC0                     	endif
  1151  000CC0                     	if	0	;tblptru may be non-zero
  1152  000CC0                     	endif
  1153  000CC0                     	if	0	;tblptru may be non-zero
  1154  000CC0                     	endif
  1155  000CC0  0008               	tblrd		*
  1156  000CC2  50F5               	movf	tablat,w,c
  1157  000CC4  6E01               	movwf	fputc@c^0,c
  1158  000CC6  6A02               	clrf	(fputc@c+1)^0,c
  1159  000CC8  C03E  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1160  000CCC  EC15  F00A         	call	_fputc	;wreg free
  1161                           
  1162                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1163  000CD0  503F               	movf	vfpfcnvrt@fmt^0,w,c
  1164  000CD2  6ED9               	movwf	fsr2l,c
  1165  000CD4  6ADA               	clrf	fsr2h,c
  1166  000CD6  2ADF               	incf	indf2,f,c
  1167  000CD8  D7DE               	goto	l1847
  1168  000CDA                     __end_of_vfpfcnvrt:
  1169                           	callstack 0
  1170                           
  1171 ;; *************** function _dtoa *****************
  1172 ;; Defined at:
  1173 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  1174 ;; Parameters:    Size  Location     Type
  1175 ;;  fp              1   26[COMRAM] PTR struct _IO_FILE
  1176 ;;		 -> sprintf@f(5), 
  1177 ;;  d               8   27[COMRAM] long long 
  1178 ;; Auto vars:     Size  Location     Type
  1179 ;;  n               8   51[COMRAM] long long 
  1180 ;;  i               2   59[COMRAM] int 
  1181 ;;  s               2   49[COMRAM] int 
  1182 ;;  w               2   47[COMRAM] int 
  1183 ;;  p               2   45[COMRAM] int 
  1184 ;; Return value:  Size  Location     Type
  1185 ;;                  2   26[COMRAM] int 
  1186 ;; Registers used:
  1187 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1188 ;; Tracked objects:
  1189 ;;		On entry : 3F/0
  1190 ;;		On exit  : 0/0
  1191 ;;		Unchanged: 0/0
  1192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1193 ;;      Params:         9       0       0       0       0       0       0       0       0
  1194 ;;      Locals:        18       0       0       0       0       0       0       0       0
  1195 ;;      Temps:          8       0       0       0       0       0       0       0       0
  1196 ;;      Totals:        35       0       0       0       0       0       0       0       0
  1197 ;;Total ram usage:       35 bytes
  1198 ;; Hardware stack levels used:    1
  1199 ;; Hardware stack levels required when called:    4
  1200 ;; This function calls:
  1201 ;;		___aodiv
  1202 ;;		___aomod
  1203 ;;		_abs
  1204 ;;		_pad
  1205 ;; This function is called by:
  1206 ;;		_vfpfcnvrt
  1207 ;; This function uses a non-reentrant model
  1208 ;;
  1209                           
  1210                           	psect	text4
  1211  000826                     __ptext4:
  1212                           	callstack 0
  1213  000826                     _dtoa:
  1214                           	callstack 23
  1215                           
  1216                           ; BSR set to: 0
  1217                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  1218                           
  1219                           ;incstack = 0
  1220  000826  C01C  F034         	movff	dtoa@d,dtoa@n
  1221  00082A  C01D  F035         	movff	dtoa@d+1,dtoa@n+1
  1222  00082E  C01E  F036         	movff	dtoa@d+2,dtoa@n+2
  1223  000832  C01F  F037         	movff	dtoa@d+3,dtoa@n+3
  1224  000836  C020  F038         	movff	dtoa@d+4,dtoa@n+4
  1225  00083A  C021  F039         	movff	dtoa@d+5,dtoa@n+5
  1226  00083E  C022  F03A         	movff	dtoa@d+6,dtoa@n+6
  1227  000842  C023  F03B         	movff	dtoa@d+7,dtoa@n+7
  1228                           
  1229                           ; BSR set to: 0
  1230                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  1231  000846  AE3B               	btfss	(dtoa@n+7)^0,7,c
  1232  000848  D002               	goto	u990
  1233  00084A  0E01               	movlw	1
  1234  00084C  D001               	goto	u1000
  1235  00084E                     u990:
  1236  00084E  0E00               	movlw	0
  1237  000850                     u1000:
  1238  000850  6E32               	movwf	dtoa@s^0,c
  1239  000852  6A33               	clrf	(dtoa@s+1)^0,c
  1240                           
  1241                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  1242  000854  5032               	movf	dtoa@s^0,w,c
  1243  000856  1033               	iorwf	(dtoa@s+1)^0,w,c
  1244  000858  B4D8               	btfsc	status,2,c
  1245  00085A  D010               	goto	l1713
  1246                           
  1247                           ; BSR set to: 0
  1248                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  1249  00085C  1E3B               	comf	(dtoa@n+7)^0,f,c
  1250  00085E  1E3A               	comf	(dtoa@n+6)^0,f,c
  1251  000860  1E39               	comf	(dtoa@n+5)^0,f,c
  1252  000862  1E38               	comf	(dtoa@n+4)^0,f,c
  1253  000864  1E37               	comf	(dtoa@n+3)^0,f,c
  1254  000866  1E36               	comf	(dtoa@n+2)^0,f,c
  1255  000868  1E35               	comf	(dtoa@n+1)^0,f,c
  1256  00086A  6C34               	negf	dtoa@n^0,c
  1257  00086C  0E00               	movlw	0
  1258  00086E  2235               	addwfc	(dtoa@n+1)^0,f,c
  1259  000870  2236               	addwfc	(dtoa@n+2)^0,f,c
  1260  000872  2237               	addwfc	(dtoa@n+3)^0,f,c
  1261  000874  2238               	addwfc	(dtoa@n+4)^0,f,c
  1262  000876  2239               	addwfc	(dtoa@n+5)^0,f,c
  1263  000878  223A               	addwfc	(dtoa@n+6)^0,f,c
  1264  00087A  223B               	addwfc	(dtoa@n+7)^0,f,c
  1265  00087C                     l1713:
  1266                           
  1267                           ; BSR set to: 0
  1268                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  1269  00087C  AF65               	btfss	(_prec+1)& (0+255),7,b
  1270                           
  1271                           ; BSR set to: 0
  1272                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  1273  00087E  925D               	bcf	_flags^0,1,c
  1274                           
  1275                           ; BSR set to: 0
  1276                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  1277  000880  BF65               	btfsc	(_prec+1)& (0+255),7,b
  1278  000882  D005               	goto	u1030
  1279  000884  5165               	movf	(_prec+1)& (0+255),w,b
  1280  000886  E108               	bnz	l889
  1281  000888  0564               	decf	_prec& (0+255),w,b
  1282  00088A  B0D8               	btfsc	status,0,c
  1283  00088C  D005               	goto	l889
  1284  00088E                     u1030:
  1285                           
  1286                           ; BSR set to: 0
  1287  00088E  0E00               	movlw	0
  1288  000890  6E2F               	movwf	(dtoa@p+1)^0,c
  1289  000892  0E01               	movlw	1
  1290  000894  6E2E               	movwf	dtoa@p^0,c
  1291  000896  D004               	goto	l891
  1292  000898                     l889:
  1293                           
  1294                           ; BSR set to: 0
  1295  000898  C064  F02E         	movff	_prec,dtoa@p
  1296  00089C  C065  F02F         	movff	_prec+1,dtoa@p+1
  1297  0008A0                     l891:
  1298                           
  1299                           ; BSR set to: 0
  1300                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  1301  0008A0  C062  F030         	movff	_width,dtoa@w
  1302  0008A4  C063  F031         	movff	_width+1,dtoa@w+1
  1303                           
  1304                           ; BSR set to: 0
  1305                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  1306  0008A8  5032               	movf	dtoa@s^0,w,c
  1307  0008AA  1033               	iorwf	(dtoa@s+1)^0,w,c
  1308  0008AC  A4D8               	btfss	status,2,c
  1309  0008AE  D002               	goto	u1050
  1310                           
  1311                           ; BSR set to: 0
  1312  0008B0  A45D               	btfss	_flags^0,2,c
  1313  0008B2  D003               	goto	l1727
  1314  0008B4                     u1050:
  1315                           
  1316                           ; BSR set to: 0
  1317                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 306:         --w;
  1318  0008B4  0630               	decf	dtoa@w^0,f,c
  1319  0008B6  A0D8               	btfss	status,0,c
  1320  0008B8  0631               	decf	(dtoa@w+1)^0,f,c
  1321  0008BA                     l1727:
  1322                           
  1323                           ; BSR set to: 0
  1324                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  1325  0008BA  0E00               	movlw	0
  1326  0008BC  6E3D               	movwf	(dtoa@i+1)^0,c
  1327  0008BE  0E1F               	movlw	31
  1328  0008C0  6E3C               	movwf	dtoa@i^0,c
  1329                           
  1330                           ; BSR set to: 0
  1331                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  1332  0008C2  0E00               	movlw	0
  1333  0008C4  6F85               	movwf	(_dbuf+31)& (0+255),b
  1334                           
  1335                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1336  0008C6  D07A               	goto	l1741
  1337  0008C8                     l1731:
  1338                           
  1339                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 313:         --i;
  1340  0008C8  063C               	decf	dtoa@i^0,f,c
  1341  0008CA  A0D8               	btfss	status,0,c
  1342  0008CC  063D               	decf	(dtoa@i+1)^0,f,c
  1343                           
  1344                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  1345  0008CE  503C               	movf	dtoa@i^0,w,c
  1346  0008D0  0F66               	addlw	low _dbuf
  1347  0008D2  6ED9               	movwf	fsr2l,c
  1348  0008D4  6ADA               	clrf	fsr2h,c
  1349  0008D6  C034  F001         	movff	dtoa@n,___aomod@dividend
  1350  0008DA  C035  F002         	movff	dtoa@n+1,___aomod@dividend+1
  1351  0008DE  C036  F003         	movff	dtoa@n+2,___aomod@dividend+2
  1352  0008E2  C037  F004         	movff	dtoa@n+3,___aomod@dividend+3
  1353  0008E6  C038  F005         	movff	dtoa@n+4,___aomod@dividend+4
  1354  0008EA  C039  F006         	movff	dtoa@n+5,___aomod@dividend+5
  1355  0008EE  C03A  F007         	movff	dtoa@n+6,___aomod@dividend+6
  1356  0008F2  C03B  F008         	movff	dtoa@n+7,___aomod@dividend+7
  1357  0008F6  0E0A               	movlw	10
  1358  0008F8  6E09               	movwf	___aomod@divisor^0,c
  1359  0008FA  0E00               	movlw	0
  1360  0008FC  6E0A               	movwf	(___aomod@divisor+1)^0,c
  1361  0008FE  0E00               	movlw	0
  1362  000900  6E0B               	movwf	(___aomod@divisor+2)^0,c
  1363  000902  0E00               	movlw	0
  1364  000904  6E0C               	movwf	(___aomod@divisor+3)^0,c
  1365  000906  0E00               	movlw	0
  1366  000908  6E0D               	movwf	(___aomod@divisor+4)^0,c
  1367  00090A  0E00               	movlw	0
  1368  00090C  6E0E               	movwf	(___aomod@divisor+5)^0,c
  1369  00090E  0E00               	movlw	0
  1370  000910  6E0F               	movwf	(___aomod@divisor+6)^0,c
  1371  000912  0E00               	movlw	0
  1372  000914  6E10               	movwf	(___aomod@divisor+7)^0,c
  1373  000916  EC6D  F006         	call	___aomod	;wreg free
  1374  00091A  C001  F024         	movff	?___aomod,??_dtoa
  1375  00091E  C002  F025         	movff	?___aomod+1,??_dtoa+1
  1376  000922  C003  F026         	movff	?___aomod+2,??_dtoa+2
  1377  000926  C004  F027         	movff	?___aomod+3,??_dtoa+3
  1378  00092A  C005  F028         	movff	?___aomod+4,??_dtoa+4
  1379  00092E  C006  F029         	movff	?___aomod+5,??_dtoa+5
  1380  000932  C007  F02A         	movff	?___aomod+6,??_dtoa+6
  1381  000936  C008  F02B         	movff	?___aomod+7,??_dtoa+7
  1382  00093A  C024  F013         	movff	??_dtoa,abs@a
  1383  00093E  C026  F014         	movff	??_dtoa+2,abs@a+1
  1384  000942  EC54  F00B         	call	_abs	;wreg free
  1385  000946  5013               	movf	?_abs^0,w,c
  1386  000948  0F30               	addlw	48
  1387  00094A  6EDF               	movwf	indf2,c
  1388                           
  1389                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 315:         --p;
  1390  00094C  062E               	decf	dtoa@p^0,f,c
  1391  00094E  A0D8               	btfss	status,0,c
  1392  000950  062F               	decf	(dtoa@p+1)^0,f,c
  1393                           
  1394                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 316:         --w;
  1395  000952  0630               	decf	dtoa@w^0,f,c
  1396  000954  A0D8               	btfss	status,0,c
  1397  000956  0631               	decf	(dtoa@w+1)^0,f,c
  1398                           
  1399                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  1400  000958  C034  F001         	movff	dtoa@n,___aodiv@dividend
  1401  00095C  C035  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  1402  000960  C036  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  1403  000964  C037  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  1404  000968  C038  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  1405  00096C  C039  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  1406  000970  C03A  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  1407  000974  C03B  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  1408  000978  0E0A               	movlw	10
  1409  00097A  6E09               	movwf	___aodiv@divisor^0,c
  1410  00097C  0E00               	movlw	0
  1411  00097E  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  1412  000980  0E00               	movlw	0
  1413  000982  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  1414  000984  0E00               	movlw	0
  1415  000986  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  1416  000988  0E00               	movlw	0
  1417  00098A  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  1418  00098C  0E00               	movlw	0
  1419  00098E  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  1420  000990  0E00               	movlw	0
  1421  000992  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  1422  000994  0E00               	movlw	0
  1423  000996  6E10               	movwf	(___aodiv@divisor+7)^0,c
  1424  000998  EC2A  F005         	call	___aodiv	;wreg free
  1425  00099C  C001  F034         	movff	?___aodiv,dtoa@n
  1426  0009A0  C002  F035         	movff	?___aodiv+1,dtoa@n+1
  1427  0009A4  C003  F036         	movff	?___aodiv+2,dtoa@n+2
  1428  0009A8  C004  F037         	movff	?___aodiv+3,dtoa@n+3
  1429  0009AC  C005  F038         	movff	?___aodiv+4,dtoa@n+4
  1430  0009B0  C006  F039         	movff	?___aodiv+5,dtoa@n+5
  1431  0009B4  C007  F03A         	movff	?___aodiv+6,dtoa@n+6
  1432  0009B8  C008  F03B         	movff	?___aodiv+7,dtoa@n+7
  1433  0009BC                     l1741:
  1434                           
  1435                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1436  0009BC  BE3D               	btfsc	(dtoa@i+1)^0,7,c
  1437  0009BE  D01F               	goto	u1100
  1438  0009C0  503D               	movf	(dtoa@i+1)^0,w,c
  1439  0009C2  E103               	bnz	u1060
  1440  0009C4  043C               	decf	dtoa@i^0,w,c
  1441  0009C6  A0D8               	btfss	status,0,c
  1442  0009C8  D01A               	goto	u1100
  1443  0009CA                     u1060:
  1444  0009CA  5034               	movf	dtoa@n^0,w,c
  1445  0009CC  1035               	iorwf	(dtoa@n+1)^0,w,c
  1446  0009CE  1036               	iorwf	(dtoa@n+2)^0,w,c
  1447  0009D0  1037               	iorwf	(dtoa@n+3)^0,w,c
  1448  0009D2  1038               	iorwf	(dtoa@n+4)^0,w,c
  1449  0009D4  1039               	iorwf	(dtoa@n+5)^0,w,c
  1450  0009D6  103A               	iorwf	(dtoa@n+6)^0,w,c
  1451  0009D8  103B               	iorwf	(dtoa@n+7)^0,w,c
  1452  0009DA  A4D8               	btfss	status,2,c
  1453  0009DC  D775               	goto	l1731
  1454  0009DE  BE2F               	btfsc	(dtoa@p+1)^0,7,c
  1455  0009E0  D005               	goto	u1080
  1456  0009E2  502F               	movf	(dtoa@p+1)^0,w,c
  1457  0009E4  E102               	bnz	u1081
  1458  0009E6  042E               	decf	dtoa@p^0,w,c
  1459  0009E8  B0D8               	btfsc	status,0,c
  1460  0009EA                     u1081:
  1461  0009EA  D76E               	goto	l1731
  1462  0009EC                     u1080:
  1463  0009EC  BE31               	btfsc	(dtoa@w+1)^0,7,c
  1464  0009EE  D007               	goto	u1100
  1465  0009F0  5031               	movf	(dtoa@w+1)^0,w,c
  1466  0009F2  E103               	bnz	u1090
  1467  0009F4  0430               	decf	dtoa@w^0,w,c
  1468  0009F6  A0D8               	btfss	status,0,c
  1469  0009F8  D002               	goto	u1100
  1470  0009FA                     u1090:
  1471  0009FA  B25D               	btfsc	_flags^0,1,c
  1472  0009FC  D765               	goto	l1731
  1473  0009FE                     u1100:
  1474                           
  1475                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  1476  0009FE  5032               	movf	dtoa@s^0,w,c
  1477  000A00  1033               	iorwf	(dtoa@s+1)^0,w,c
  1478  000A02  A4D8               	btfss	status,2,c
  1479  000A04  D002               	goto	u1120
  1480  000A06  A45D               	btfss	_flags^0,2,c
  1481  000A08  D015               	goto	l1765
  1482  000A0A                     u1120:
  1483                           
  1484                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 322:         --i;
  1485  000A0A  063C               	decf	dtoa@i^0,f,c
  1486  000A0C  A0D8               	btfss	status,0,c
  1487  000A0E  063D               	decf	(dtoa@i+1)^0,f,c
  1488                           
  1489                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  1490  000A10  5032               	movf	dtoa@s^0,w,c
  1491  000A12  1033               	iorwf	(dtoa@s+1)^0,w,c
  1492  000A14  A4D8               	btfss	status,2,c
  1493  000A16  D004               	goto	l1761
  1494  000A18  0E00               	movlw	0
  1495  000A1A  6E2D               	movwf	(_dtoa$1063+1)^0,c
  1496  000A1C  0E2B               	movlw	43
  1497  000A1E  D003               	goto	L1
  1498  000A20                     l1761:
  1499  000A20  0E00               	movlw	0
  1500  000A22  6E2D               	movwf	(_dtoa$1063+1)^0,c
  1501  000A24  0E2D               	movlw	45
  1502  000A26                     L1:
  1503  000A26  6E2C               	movwf	_dtoa$1063^0,c
  1504  000A28  503C               	movf	dtoa@i^0,w,c
  1505  000A2A  0F66               	addlw	low _dbuf
  1506  000A2C  6ED9               	movwf	fsr2l,c
  1507  000A2E  6ADA               	clrf	fsr2h,c
  1508  000A30  C02C  FFDF         	movff	_dtoa$1063,indf2
  1509  000A34                     l1765:
  1510                           
  1511                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  1512  000A34  C01B  F00E         	movff	dtoa@fp,pad@fp
  1513  000A38  503C               	movf	dtoa@i^0,w,c
  1514  000A3A  0F66               	addlw	low _dbuf
  1515  000A3C  6E0F               	movwf	pad@buf^0,c
  1516  000A3E  C030  F010         	movff	dtoa@w,pad@p
  1517  000A42  C031  F011         	movff	dtoa@w+1,pad@p+1
  1518  000A46  EC55  F00A         	call	_pad	;wreg free
  1519  000A4A  C00E  F01B         	movff	?_pad,?_dtoa
  1520  000A4E  C00F  F01C         	movff	?_pad+1,?_dtoa+1
  1521  000A52  0012               	return		;funcret
  1522  000A54                     __end_of_dtoa:
  1523                           	callstack 0
  1524                           
  1525 ;; *************** function _pad *****************
  1526 ;; Defined at:
  1527 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  1528 ;; Parameters:    Size  Location     Type
  1529 ;;  fp              1   13[COMRAM] PTR struct _IO_FILE
  1530 ;;		 -> sprintf@f(5), 
  1531 ;;  buf             1   14[COMRAM] PTR unsigned char 
  1532 ;;		 -> dbuf(32), 
  1533 ;;  p               2   15[COMRAM] int 
  1534 ;; Auto vars:     Size  Location     Type
  1535 ;;  w               2   20[COMRAM] int 
  1536 ;;  i               2   18[COMRAM] int 
  1537 ;; Return value:  Size  Location     Type
  1538 ;;                  2   13[COMRAM] int 
  1539 ;; Registers used:
  1540 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1541 ;; Tracked objects:
  1542 ;;		On entry : 0/0
  1543 ;;		On exit  : 0/0
  1544 ;;		Unchanged: 0/0
  1545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1546 ;;      Params:         4       0       0       0       0       0       0       0       0
  1547 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1548 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1549 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1550 ;;Total ram usage:        9 bytes
  1551 ;; Hardware stack levels used:    1
  1552 ;; Hardware stack levels required when called:    3
  1553 ;; This function calls:
  1554 ;;		_fputc
  1555 ;;		_fputs
  1556 ;;		_strlen
  1557 ;; This function is called by:
  1558 ;;		_dtoa
  1559 ;; This function uses a non-reentrant model
  1560 ;;
  1561                           
  1562                           	psect	text5
  1563  0014AA                     __ptext5:
  1564                           	callstack 0
  1565  0014AA                     _pad:
  1566                           	callstack 23
  1567                           
  1568                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  1569                           
  1570                           ;incstack = 0
  1571  0014AA  A05D               	btfss	_flags^0,0,c
  1572  0014AC  D006               	goto	l1685
  1573                           
  1574                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  1575  0014AE  C00F  F009         	movff	pad@buf,fputs@s
  1576  0014B2  C00E  F00A         	movff	pad@fp,fputs@fp
  1577  0014B6  EC6D  F00B         	call	_fputs	;wreg free
  1578  0014BA                     l1685:
  1579                           
  1580                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  1581  0014BA  BE11               	btfsc	(pad@p+1)^0,7,c
  1582  0014BC  D005               	goto	l1689
  1583  0014BE  C010  F015         	movff	pad@p,pad@w
  1584  0014C2  C011  F016         	movff	pad@p+1,pad@w+1
  1585  0014C6  D004               	goto	l878
  1586  0014C8                     l1689:
  1587  0014C8  0E00               	movlw	0
  1588  0014CA  6E16               	movwf	(pad@w+1)^0,c
  1589  0014CC  0E00               	movlw	0
  1590  0014CE  6E15               	movwf	pad@w^0,c
  1591  0014D0                     l878:
  1592                           
  1593                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  1594  0014D0  0E00               	movlw	0
  1595  0014D2  6E14               	movwf	(pad@i+1)^0,c
  1596  0014D4  0E00               	movlw	0
  1597  0014D6  6E13               	movwf	pad@i^0,c
  1598                           
  1599                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  1600  0014D8  D00A               	goto	l1695
  1601  0014DA                     l1691:
  1602                           
  1603                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  1604  0014DA  0E00               	movlw	0
  1605  0014DC  6E02               	movwf	(fputc@c+1)^0,c
  1606  0014DE  0E20               	movlw	32
  1607  0014E0  6E01               	movwf	fputc@c^0,c
  1608  0014E2  C00E  F003         	movff	pad@fp,fputc@fp
  1609  0014E6  EC15  F00A         	call	_fputc	;wreg free
  1610                           
  1611                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 86:         ++i;
  1612  0014EA  4A13               	infsnz	pad@i^0,f,c
  1613  0014EC  2A14               	incf	(pad@i+1)^0,f,c
  1614  0014EE                     l1695:
  1615                           
  1616                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  1617  0014EE  5015               	movf	pad@w^0,w,c
  1618  0014F0  5C13               	subwf	pad@i^0,w,c
  1619  0014F2  5014               	movf	(pad@i+1)^0,w,c
  1620  0014F4  0A80               	xorlw	128
  1621  0014F6  6E12               	movwf	??_pad^0,c
  1622  0014F8  5016               	movf	(pad@w+1)^0,w,c
  1623  0014FA  0A80               	xorlw	128
  1624  0014FC  5812               	subwfb	??_pad^0,w,c
  1625  0014FE  A0D8               	btfss	status,0,c
  1626  001500  D7EC               	goto	l1691
  1627                           
  1628                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  1629  001502  B05D               	btfsc	_flags^0,0,c
  1630  001504  D006               	goto	l1699
  1631                           
  1632                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  1633  001506  C00F  F009         	movff	pad@buf,fputs@s
  1634  00150A  C00E  F00A         	movff	pad@fp,fputs@fp
  1635  00150E  EC6D  F00B         	call	_fputs	;wreg free
  1636  001512                     l1699:
  1637                           
  1638                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  1639  001512  C00F  F001         	movff	pad@buf,strlen@s
  1640  001516  EC9A  F00B         	call	_strlen	;wreg free
  1641  00151A  5015               	movf	pad@w^0,w,c
  1642  00151C  2401               	addwf	?_strlen^0,w,c
  1643  00151E  6E0E               	movwf	?_pad^0,c
  1644  001520  5016               	movf	(pad@w+1)^0,w,c
  1645  001522  2002               	addwfc	(?_strlen+1)^0,w,c
  1646  001524  6E0F               	movwf	(?_pad+1)^0,c
  1647  001526  0012               	return		;funcret
  1648  001528                     __end_of_pad:
  1649                           	callstack 0
  1650                           
  1651 ;; *************** function _strlen *****************
  1652 ;; Defined at:
  1653 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strlen.c"
  1654 ;; Parameters:    Size  Location     Type
  1655 ;;  s               1    0[COMRAM] PTR const unsigned char 
  1656 ;;		 -> dbuf(32), 
  1657 ;; Auto vars:     Size  Location     Type
  1658 ;;  a               1    2[COMRAM] PTR const unsigned char 
  1659 ;;		 -> dbuf(32), 
  1660 ;; Return value:  Size  Location     Type
  1661 ;;                  2    0[COMRAM] unsigned int 
  1662 ;; Registers used:
  1663 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1664 ;; Tracked objects:
  1665 ;;		On entry : 0/0
  1666 ;;		On exit  : 0/0
  1667 ;;		Unchanged: 0/0
  1668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1669 ;;      Params:         2       0       0       0       0       0       0       0       0
  1670 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1671 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1672 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1673 ;;Total ram usage:        3 bytes
  1674 ;; Hardware stack levels used:    1
  1675 ;; This function calls:
  1676 ;;		Nothing
  1677 ;; This function is called by:
  1678 ;;		_pad
  1679 ;; This function uses a non-reentrant model
  1680 ;;
  1681                           
  1682                           	psect	text6
  1683  001734                     __ptext6:
  1684                           	callstack 0
  1685  001734                     _strlen:
  1686                           	callstack 25
  1687                           
  1688                           ;incstack = 0
  1689  001734  C001  F003         	movff	strlen@s,strlen@a
  1690  001738  D001               	goto	l1595
  1691  00173A                     l1593:
  1692  00173A  2A01               	incf	strlen@s^0,f,c
  1693  00173C                     l1595:
  1694  00173C  5001               	movf	strlen@s^0,w,c
  1695  00173E  6ED9               	movwf	fsr2l,c
  1696  001740  6ADA               	clrf	fsr2h,c
  1697  001742  50DF               	movf	indf2,w,c
  1698  001744  A4D8               	btfss	status,2,c
  1699  001746  D7F9               	goto	l1593
  1700  001748  5003               	movf	strlen@a^0,w,c
  1701  00174A  5C01               	subwf	strlen@s^0,w,c
  1702  00174C  6E01               	movwf	?_strlen^0,c
  1703  00174E  6A02               	clrf	(?_strlen+1)^0,c
  1704  001750  BE01               	btfsc	?_strlen^0,7,c
  1705  001752  0602               	decf	(?_strlen+1)^0,f,c
  1706  001754  0012               	return		;funcret
  1707  001756                     __end_of_strlen:
  1708                           	callstack 0
  1709                           
  1710 ;; *************** function _fputs *****************
  1711 ;; Defined at:
  1712 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputs.c"
  1713 ;; Parameters:    Size  Location     Type
  1714 ;;  s               1    8[COMRAM] PTR const unsigned char 
  1715 ;;		 -> dbuf(32), 
  1716 ;;  fp              1    9[COMRAM] PTR struct _IO_FILE
  1717 ;;		 -> sprintf@f(5), 
  1718 ;; Auto vars:     Size  Location     Type
  1719 ;;  i               2   11[COMRAM] int 
  1720 ;;  c               1   10[COMRAM] unsigned char 
  1721 ;; Return value:  Size  Location     Type
  1722 ;;                  2    8[COMRAM] int 
  1723 ;; Registers used:
  1724 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1725 ;; Tracked objects:
  1726 ;;		On entry : 0/0
  1727 ;;		On exit  : 0/0
  1728 ;;		Unchanged: 0/0
  1729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1730 ;;      Params:         2       0       0       0       0       0       0       0       0
  1731 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1732 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1733 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1734 ;;Total ram usage:        5 bytes
  1735 ;; Hardware stack levels used:    1
  1736 ;; Hardware stack levels required when called:    2
  1737 ;; This function calls:
  1738 ;;		_fputc
  1739 ;; This function is called by:
  1740 ;;		_pad
  1741 ;; This function uses a non-reentrant model
  1742 ;;
  1743                           
  1744                           	psect	text7
  1745  0016DA                     __ptext7:
  1746                           	callstack 0
  1747  0016DA                     _fputs:
  1748                           	callstack 23
  1749                           
  1750                           ;incstack = 0
  1751  0016DA  0E00               	movlw	0
  1752  0016DC  6E0D               	movwf	(fputs@i+1)^0,c
  1753  0016DE  0E00               	movlw	0
  1754  0016E0  6E0C               	movwf	fputs@i^0,c
  1755  0016E2  D009               	goto	l1589
  1756  0016E4                     l1585:
  1757  0016E4  C00B  F001         	movff	fputs@c,fputc@c
  1758  0016E8  6A02               	clrf	(fputc@c+1)^0,c
  1759  0016EA  C00A  F003         	movff	fputs@fp,fputc@fp
  1760  0016EE  EC15  F00A         	call	_fputc	;wreg free
  1761  0016F2  4A0C               	infsnz	fputs@i^0,f,c
  1762  0016F4  2A0D               	incf	(fputs@i+1)^0,f,c
  1763  0016F6                     l1589:
  1764  0016F6  5009               	movf	fputs@s^0,w,c
  1765  0016F8  240C               	addwf	fputs@i^0,w,c
  1766  0016FA  6ED9               	movwf	fsr2l,c
  1767  0016FC  6ADA               	clrf	fsr2h,c
  1768  0016FE  50DF               	movf	indf2,w,c
  1769  001700  6E0B               	movwf	fputs@c^0,c
  1770  001702  500B               	movf	fputs@c^0,w,c
  1771  001704  B4D8               	btfsc	status,2,c
  1772  001706  0012               	return	
  1773  001708  D7ED               	goto	l1585
  1774  00170A                     __end_of_fputs:
  1775                           	callstack 0
  1776                           
  1777 ;; *************** function _fputc *****************
  1778 ;; Defined at:
  1779 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputc.c"
  1780 ;; Parameters:    Size  Location     Type
  1781 ;;  c               2    0[COMRAM] int 
  1782 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  1783 ;;		 -> sprintf@f(5), 
  1784 ;; Auto vars:     Size  Location     Type
  1785 ;;		None
  1786 ;; Return value:  Size  Location     Type
  1787 ;;                  2    0[COMRAM] int 
  1788 ;; Registers used:
  1789 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1790 ;; Tracked objects:
  1791 ;;		On entry : 0/0
  1792 ;;		On exit  : 0/0
  1793 ;;		Unchanged: 0/0
  1794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1795 ;;      Params:         3       0       0       0       0       0       0       0       0
  1796 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1797 ;;      Temps:          5       0       0       0       0       0       0       0       0
  1798 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1799 ;;Total ram usage:        8 bytes
  1800 ;; Hardware stack levels used:    1
  1801 ;; Hardware stack levels required when called:    1
  1802 ;; This function calls:
  1803 ;;		_putch
  1804 ;; This function is called by:
  1805 ;;		_pad
  1806 ;;		_vfpfcnvrt
  1807 ;;		_fputs
  1808 ;; This function uses a non-reentrant model
  1809 ;;
  1810                           
  1811                           	psect	text8
  1812  00142A                     __ptext8:
  1813                           	callstack 0
  1814  00142A                     _fputc:
  1815                           	callstack 26
  1816                           
  1817                           ;incstack = 0
  1818  00142A  5003               	movf	fputc@fp^0,w,c
  1819  00142C  B4D8               	btfsc	status,2,c
  1820  00142E  D003               	goto	u760
  1821  001430  5003               	movf	fputc@fp^0,w,c
  1822  001432  A4D8               	btfss	status,2,c
  1823  001434  D004               	goto	l1575
  1824  001436                     u760:
  1825  001436  5001               	movf	fputc@c^0,w,c
  1826  001438  EC11  F00C         	call	_putch
  1827  00143C  0012               	return	
  1828  00143E                     l1575:
  1829  00143E  5003               	movf	fputc@fp^0,w,c
  1830  001440  6ED9               	movwf	fsr2l,c
  1831  001442  6ADA               	clrf	fsr2h,c
  1832  001444  0E03               	movlw	3
  1833  001446  26D9               	addwf	fsr2l,f,c
  1834  001448  50DE               	movf	postinc2,w,c
  1835  00144A  10DE               	iorwf	postinc2,w,c
  1836  00144C  B4D8               	btfsc	status,2,c
  1837  00144E  D014               	goto	u780
  1838  001450  5003               	movf	fputc@fp^0,w,c
  1839  001452  6ED9               	movwf	fsr2l,c
  1840  001454  6ADA               	clrf	fsr2h,c
  1841  001456  0E03               	movlw	3
  1842  001458  26D9               	addwf	fsr2l,f,c
  1843  00145A  5003               	movf	fputc@fp^0,w,c
  1844  00145C  6EE1               	movwf	fsr1l,c
  1845  00145E  6AE2               	clrf	fsr1h,c
  1846  001460  0E01               	movlw	1
  1847  001462  26E1               	addwf	fsr1l,f,c
  1848  001464  50DE               	movf	postinc2,w,c
  1849  001466  5CE6               	subwf	postinc1,w,c
  1850  001468  50E6               	movf	postinc1,w,c
  1851  00146A  0A80               	xorlw	128
  1852  00146C  6E08               	movwf	(??_fputc+4)^0,c
  1853  00146E  50DE               	movf	postinc2,w,c
  1854  001470  0A80               	xorlw	128
  1855  001472  5808               	subwfb	(??_fputc+4)^0,w,c
  1856  001474  B0D8               	btfsc	status,0,c
  1857  001476  0012               	return	
  1858  001478                     u780:
  1859  001478  5003               	movf	fputc@fp^0,w,c
  1860  00147A  6ED9               	movwf	fsr2l,c
  1861  00147C  6ADA               	clrf	fsr2h,c
  1862  00147E  0E01               	movlw	1
  1863  001480  26D9               	addwf	fsr2l,f,c
  1864  001482  50DF               	movf	indf2,w,c
  1865  001484  6E04               	movwf	??_fputc^0,c
  1866  001486  5003               	movf	fputc@fp^0,w,c
  1867  001488  6ED9               	movwf	fsr2l,c
  1868  00148A  6ADA               	clrf	fsr2h,c
  1869  00148C  50DF               	movf	indf2,w,c
  1870  00148E  2404               	addwf	??_fputc^0,w,c
  1871  001490  6ED9               	movwf	fsr2l,c
  1872  001492  6ADA               	clrf	fsr2h,c
  1873  001494  C001  FFDF         	movff	fputc@c,indf2
  1874  001498  5003               	movf	fputc@fp^0,w,c
  1875  00149A  6ED9               	movwf	fsr2l,c
  1876  00149C  6ADA               	clrf	fsr2h,c
  1877  00149E  0E01               	movlw	1
  1878  0014A0  26D9               	addwf	fsr2l,f,c
  1879  0014A2  2ADE               	incf	postinc2,f,c
  1880  0014A4  0E00               	movlw	0
  1881  0014A6  22DD               	addwfc	postdec2,f,c
  1882  0014A8  0012               	return		;funcret
  1883  0014AA                     __end_of_fputc:
  1884                           	callstack 0
  1885                           
  1886 ;; *************** function _putch *****************
  1887 ;; Defined at:
  1888 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\putch.c"
  1889 ;; Parameters:    Size  Location     Type
  1890 ;;  c               1    wreg     unsigned char 
  1891 ;; Auto vars:     Size  Location     Type
  1892 ;;  c               1    0[COMRAM] unsigned char 
  1893 ;; Return value:  Size  Location     Type
  1894 ;;                  1    wreg      void 
  1895 ;; Registers used:
  1896 ;;		wreg
  1897 ;; Tracked objects:
  1898 ;;		On entry : 0/0
  1899 ;;		On exit  : 0/0
  1900 ;;		Unchanged: 0/0
  1901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1902 ;;      Params:         0       0       0       0       0       0       0       0       0
  1903 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1904 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1905 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1906 ;;Total ram usage:        0 bytes
  1907 ;; Hardware stack levels used:    1
  1908 ;; This function calls:
  1909 ;;		Nothing
  1910 ;; This function is called by:
  1911 ;;		_fputc
  1912 ;; This function uses a non-reentrant model
  1913 ;;
  1914                           
  1915                           	psect	text9
  1916  001822                     __ptext9:
  1917                           	callstack 0
  1918  001822                     _putch:
  1919                           	callstack 26
  1920                           
  1921                           ;incstack = 0
  1922  001822  0012               	return		;funcret
  1923  001824                     __end_of_putch:
  1924                           	callstack 0
  1925                           
  1926 ;; *************** function _abs *****************
  1927 ;; Defined at:
  1928 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\abs.c"
  1929 ;; Parameters:    Size  Location     Type
  1930 ;;  a               2   18[COMRAM] int 
  1931 ;; Auto vars:     Size  Location     Type
  1932 ;;		None
  1933 ;; Return value:  Size  Location     Type
  1934 ;;                  2   18[COMRAM] int 
  1935 ;; Registers used:
  1936 ;;		wreg, status,2, status,0
  1937 ;; Tracked objects:
  1938 ;;		On entry : 0/0
  1939 ;;		On exit  : 0/0
  1940 ;;		Unchanged: 0/0
  1941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1942 ;;      Params:         2       0       0       0       0       0       0       0       0
  1943 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1944 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1945 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1946 ;;Total ram usage:        4 bytes
  1947 ;; Hardware stack levels used:    1
  1948 ;; This function calls:
  1949 ;;		Nothing
  1950 ;; This function is called by:
  1951 ;;		_dtoa
  1952 ;; This function uses a non-reentrant model
  1953 ;;
  1954                           
  1955                           	psect	text10
  1956  0016A8                     __ptext10:
  1957                           	callstack 0
  1958  0016A8                     _abs:
  1959                           	callstack 26
  1960                           
  1961                           ;incstack = 0
  1962  0016A8  BE14               	btfsc	(abs@a+1)^0,7,c
  1963  0016AA  D005               	goto	u980
  1964  0016AC  5014               	movf	(abs@a+1)^0,w,c
  1965  0016AE  E110               	bnz	l927
  1966  0016B0  0413               	decf	abs@a^0,w,c
  1967  0016B2  B0D8               	btfsc	status,0,c
  1968  0016B4  D00D               	goto	l927
  1969  0016B6                     u980:
  1970  0016B6  C013  F015         	movff	abs@a,??_abs
  1971  0016BA  C014  F016         	movff	abs@a+1,??_abs+1
  1972  0016BE  1E15               	comf	??_abs^0,f,c
  1973  0016C0  1E16               	comf	(??_abs+1)^0,f,c
  1974  0016C2  4A15               	infsnz	??_abs^0,f,c
  1975  0016C4  2A16               	incf	(??_abs+1)^0,f,c
  1976  0016C6  C015  F013         	movff	??_abs,?_abs
  1977  0016CA  C016  F014         	movff	??_abs+1,?_abs+1
  1978  0016CE  0012               	return	
  1979  0016D0                     l927:
  1980  0016D0  C013  F013         	movff	abs@a,?_abs
  1981  0016D4  C014  F014         	movff	abs@a+1,?_abs+1
  1982  0016D8  0012               	return		;funcret
  1983  0016DA                     __end_of_abs:
  1984                           	callstack 0
  1985                           
  1986 ;; *************** function ___aomod *****************
  1987 ;; Defined at:
  1988 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aomod.c"
  1989 ;; Parameters:    Size  Location     Type
  1990 ;;  dividend        8    0[COMRAM] long long 
  1991 ;;  divisor         8    8[COMRAM] long long 
  1992 ;; Auto vars:     Size  Location     Type
  1993 ;;  sign            1   17[COMRAM] unsigned char 
  1994 ;;  counter         1   16[COMRAM] unsigned char 
  1995 ;; Return value:  Size  Location     Type
  1996 ;;                  8    0[COMRAM] long long 
  1997 ;; Registers used:
  1998 ;;		wreg, status,2, status,0
  1999 ;; Tracked objects:
  2000 ;;		On entry : 0/0
  2001 ;;		On exit  : 0/0
  2002 ;;		Unchanged: 0/0
  2003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2004 ;;      Params:        16       0       0       0       0       0       0       0       0
  2005 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2006 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2007 ;;      Totals:        18       0       0       0       0       0       0       0       0
  2008 ;;Total ram usage:       18 bytes
  2009 ;; Hardware stack levels used:    1
  2010 ;; This function calls:
  2011 ;;		Nothing
  2012 ;; This function is called by:
  2013 ;;		_dtoa
  2014 ;; This function uses a non-reentrant model
  2015 ;;
  2016                           
  2017                           	psect	text11
  2018  000CDA                     __ptext11:
  2019                           	callstack 0
  2020  000CDA                     ___aomod:
  2021                           	callstack 26
  2022                           
  2023                           ;incstack = 0
  2024  000CDA  0E00               	movlw	0
  2025  000CDC  6E12               	movwf	___aomod@sign^0,c
  2026  000CDE  AE08               	btfss	(___aomod@dividend+7)^0,7,c
  2027  000CE0  D012               	goto	l1653
  2028  000CE2  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2029  000CE4  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2030  000CE6  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2031  000CE8  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2032  000CEA  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2033  000CEC  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2034  000CEE  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2035  000CF0  6C01               	negf	___aomod@dividend^0,c
  2036  000CF2  0E00               	movlw	0
  2037  000CF4  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2038  000CF6  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2039  000CF8  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2040  000CFA  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2041  000CFC  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2042  000CFE  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2043  000D00  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2044  000D02  0E01               	movlw	1
  2045  000D04  6E12               	movwf	___aomod@sign^0,c
  2046  000D06                     l1653:
  2047  000D06  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  2048  000D08  D010               	goto	l1657
  2049  000D0A  1E10               	comf	(___aomod@divisor+7)^0,f,c
  2050  000D0C  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  2051  000D0E  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  2052  000D10  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  2053  000D12  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  2054  000D14  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  2055  000D16  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  2056  000D18  6C09               	negf	___aomod@divisor^0,c
  2057  000D1A  0E00               	movlw	0
  2058  000D1C  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  2059  000D1E  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  2060  000D20  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  2061  000D22  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  2062  000D24  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  2063  000D26  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  2064  000D28  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  2065  000D2A                     l1657:
  2066  000D2A  5009               	movf	___aomod@divisor^0,w,c
  2067  000D2C  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  2068  000D2E  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  2069  000D30  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  2070  000D32  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  2071  000D34  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  2072  000D36  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  2073  000D38  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  2074  000D3A  B4D8               	btfsc	status,2,c
  2075  000D3C  D03C               	goto	l1673
  2076  000D3E  0E01               	movlw	1
  2077  000D40  6E11               	movwf	___aomod@counter^0,c
  2078  000D42  D00A               	goto	l1663
  2079  000D44                     l1661:
  2080  000D44  90D8               	bcf	status,0,c
  2081  000D46  3609               	rlcf	___aomod@divisor^0,f,c
  2082  000D48  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  2083  000D4A  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  2084  000D4C  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  2085  000D4E  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  2086  000D50  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  2087  000D52  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  2088  000D54  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  2089  000D56  2A11               	incf	___aomod@counter^0,f,c
  2090  000D58                     l1663:
  2091  000D58  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  2092  000D5A  D7F4               	goto	l1661
  2093  000D5C                     u910:
  2094  000D5C  5009               	movf	___aomod@divisor^0,w,c
  2095  000D5E  5C01               	subwf	___aomod@dividend^0,w,c
  2096  000D60  500A               	movf	(___aomod@divisor+1)^0,w,c
  2097  000D62  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  2098  000D64  500B               	movf	(___aomod@divisor+2)^0,w,c
  2099  000D66  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  2100  000D68  500C               	movf	(___aomod@divisor+3)^0,w,c
  2101  000D6A  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  2102  000D6C  500D               	movf	(___aomod@divisor+4)^0,w,c
  2103  000D6E  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  2104  000D70  500E               	movf	(___aomod@divisor+5)^0,w,c
  2105  000D72  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  2106  000D74  500F               	movf	(___aomod@divisor+6)^0,w,c
  2107  000D76  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  2108  000D78  5010               	movf	(___aomod@divisor+7)^0,w,c
  2109  000D7A  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  2110  000D7C  A0D8               	btfss	status,0,c
  2111  000D7E  D010               	goto	l1669
  2112  000D80  5009               	movf	___aomod@divisor^0,w,c
  2113  000D82  5E01               	subwf	___aomod@dividend^0,f,c
  2114  000D84  500A               	movf	(___aomod@divisor+1)^0,w,c
  2115  000D86  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  2116  000D88  500B               	movf	(___aomod@divisor+2)^0,w,c
  2117  000D8A  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  2118  000D8C  500C               	movf	(___aomod@divisor+3)^0,w,c
  2119  000D8E  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  2120  000D90  500D               	movf	(___aomod@divisor+4)^0,w,c
  2121  000D92  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  2122  000D94  500E               	movf	(___aomod@divisor+5)^0,w,c
  2123  000D96  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  2124  000D98  500F               	movf	(___aomod@divisor+6)^0,w,c
  2125  000D9A  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  2126  000D9C  5010               	movf	(___aomod@divisor+7)^0,w,c
  2127  000D9E  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  2128  000DA0                     l1669:
  2129  000DA0  90D8               	bcf	status,0,c
  2130  000DA2  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  2131  000DA4  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  2132  000DA6  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  2133  000DA8  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  2134  000DAA  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  2135  000DAC  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  2136  000DAE  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  2137  000DB0  3209               	rrcf	___aomod@divisor^0,f,c
  2138  000DB2  2E11               	decfsz	___aomod@counter^0,f,c
  2139  000DB4  D7D3               	goto	u910
  2140  000DB6                     l1673:
  2141  000DB6  5012               	movf	___aomod@sign^0,w,c
  2142  000DB8  B4D8               	btfsc	status,2,c
  2143  000DBA  D010               	goto	l1677
  2144  000DBC  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2145  000DBE  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2146  000DC0  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2147  000DC2  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2148  000DC4  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2149  000DC6  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2150  000DC8  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2151  000DCA  6C01               	negf	___aomod@dividend^0,c
  2152  000DCC  0E00               	movlw	0
  2153  000DCE  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2154  000DD0  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2155  000DD2  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2156  000DD4  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2157  000DD6  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2158  000DD8  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2159  000DDA  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2160  000DDC                     l1677:
  2161  000DDC  C001  F001         	movff	___aomod@dividend,?___aomod
  2162  000DE0  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  2163  000DE4  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  2164  000DE8  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  2165  000DEC  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  2166  000DF0  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  2167  000DF4  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  2168  000DF8  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  2169  000DFC  0012               	return		;funcret
  2170  000DFE                     __end_of___aomod:
  2171                           	callstack 0
  2172                           
  2173 ;; *************** function ___aodiv *****************
  2174 ;; Defined at:
  2175 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aodiv.c"
  2176 ;; Parameters:    Size  Location     Type
  2177 ;;  dividend        8    0[COMRAM] long long 
  2178 ;;  divisor         8    8[COMRAM] long long 
  2179 ;; Auto vars:     Size  Location     Type
  2180 ;;  quotient        8   18[COMRAM] long long 
  2181 ;;  sign            1   17[COMRAM] unsigned char 
  2182 ;;  counter         1   16[COMRAM] unsigned char 
  2183 ;; Return value:  Size  Location     Type
  2184 ;;                  8    0[COMRAM] long long 
  2185 ;; Registers used:
  2186 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2187 ;; Tracked objects:
  2188 ;;		On entry : 0/0
  2189 ;;		On exit  : 0/0
  2190 ;;		Unchanged: 0/0
  2191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2192 ;;      Params:        16       0       0       0       0       0       0       0       0
  2193 ;;      Locals:        10       0       0       0       0       0       0       0       0
  2194 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2195 ;;      Totals:        26       0       0       0       0       0       0       0       0
  2196 ;;Total ram usage:       26 bytes
  2197 ;; Hardware stack levels used:    1
  2198 ;; This function calls:
  2199 ;;		Nothing
  2200 ;; This function is called by:
  2201 ;;		_dtoa
  2202 ;; This function uses a non-reentrant model
  2203 ;;
  2204                           
  2205                           	psect	text12
  2206  000A54                     __ptext12:
  2207                           	callstack 0
  2208  000A54                     ___aodiv:
  2209                           	callstack 26
  2210                           
  2211                           ;incstack = 0
  2212  000A54  0E00               	movlw	0
  2213  000A56  6E12               	movwf	___aodiv@sign^0,c
  2214  000A58  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  2215  000A5A  D012               	goto	l1609
  2216  000A5C  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  2217  000A5E  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  2218  000A60  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  2219  000A62  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  2220  000A64  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  2221  000A66  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  2222  000A68  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  2223  000A6A  6C09               	negf	___aodiv@divisor^0,c
  2224  000A6C  0E00               	movlw	0
  2225  000A6E  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  2226  000A70  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  2227  000A72  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  2228  000A74  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  2229  000A76  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  2230  000A78  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  2231  000A7A  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  2232  000A7C  0E01               	movlw	1
  2233  000A7E  6E12               	movwf	___aodiv@sign^0,c
  2234  000A80                     l1609:
  2235  000A80  AE08               	btfss	(___aodiv@dividend+7)^0,7,c
  2236  000A82  D012               	goto	l1615
  2237  000A84  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  2238  000A86  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  2239  000A88  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  2240  000A8A  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  2241  000A8C  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  2242  000A8E  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  2243  000A90  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  2244  000A92  6C01               	negf	___aodiv@dividend^0,c
  2245  000A94  0E00               	movlw	0
  2246  000A96  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  2247  000A98  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  2248  000A9A  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  2249  000A9C  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  2250  000A9E  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  2251  000AA0  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  2252  000AA2  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  2253  000AA4  0E01               	movlw	1
  2254  000AA6  1A12               	xorwf	___aodiv@sign^0,f,c
  2255  000AA8                     l1615:
  2256  000AA8  EE20  F013         	lfsr	2,___aodiv@quotient
  2257  000AAC  0E07               	movlw	7
  2258  000AAE                     u831:
  2259  000AAE  6ADE               	clrf	postinc2,c
  2260  000AB0  06E8               	decf	wreg,f,c
  2261  000AB2  E2FD               	bc	u831
  2262  000AB4  5009               	movf	___aodiv@divisor^0,w,c
  2263  000AB6  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  2264  000AB8  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  2265  000ABA  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  2266  000ABC  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  2267  000ABE  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  2268  000AC0  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  2269  000AC2  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  2270  000AC4  B4D8               	btfsc	status,2,c
  2271  000AC6  D046               	goto	l1637
  2272  000AC8  0E01               	movlw	1
  2273  000ACA  6E11               	movwf	___aodiv@counter^0,c
  2274  000ACC  D00A               	goto	l1623
  2275  000ACE                     l1621:
  2276  000ACE  90D8               	bcf	status,0,c
  2277  000AD0  3609               	rlcf	___aodiv@divisor^0,f,c
  2278  000AD2  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  2279  000AD4  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  2280  000AD6  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  2281  000AD8  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  2282  000ADA  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  2283  000ADC  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  2284  000ADE  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  2285  000AE0  2A11               	incf	___aodiv@counter^0,f,c
  2286  000AE2                     l1623:
  2287  000AE2  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  2288  000AE4  D7F4               	goto	l1621
  2289  000AE6                     u850:
  2290  000AE6  90D8               	bcf	status,0,c
  2291  000AE8  3613               	rlcf	___aodiv@quotient^0,f,c
  2292  000AEA  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  2293  000AEC  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  2294  000AEE  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  2295  000AF0  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  2296  000AF2  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  2297  000AF4  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  2298  000AF6  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  2299  000AF8  5009               	movf	___aodiv@divisor^0,w,c
  2300  000AFA  5C01               	subwf	___aodiv@dividend^0,w,c
  2301  000AFC  500A               	movf	(___aodiv@divisor+1)^0,w,c
  2302  000AFE  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  2303  000B00  500B               	movf	(___aodiv@divisor+2)^0,w,c
  2304  000B02  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  2305  000B04  500C               	movf	(___aodiv@divisor+3)^0,w,c
  2306  000B06  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  2307  000B08  500D               	movf	(___aodiv@divisor+4)^0,w,c
  2308  000B0A  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  2309  000B0C  500E               	movf	(___aodiv@divisor+5)^0,w,c
  2310  000B0E  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  2311  000B10  500F               	movf	(___aodiv@divisor+6)^0,w,c
  2312  000B12  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  2313  000B14  5010               	movf	(___aodiv@divisor+7)^0,w,c
  2314  000B16  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  2315  000B18  A0D8               	btfss	status,0,c
  2316  000B1A  D011               	goto	l1633
  2317  000B1C  5009               	movf	___aodiv@divisor^0,w,c
  2318  000B1E  5E01               	subwf	___aodiv@dividend^0,f,c
  2319  000B20  500A               	movf	(___aodiv@divisor+1)^0,w,c
  2320  000B22  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  2321  000B24  500B               	movf	(___aodiv@divisor+2)^0,w,c
  2322  000B26  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  2323  000B28  500C               	movf	(___aodiv@divisor+3)^0,w,c
  2324  000B2A  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  2325  000B2C  500D               	movf	(___aodiv@divisor+4)^0,w,c
  2326  000B2E  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  2327  000B30  500E               	movf	(___aodiv@divisor+5)^0,w,c
  2328  000B32  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  2329  000B34  500F               	movf	(___aodiv@divisor+6)^0,w,c
  2330  000B36  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  2331  000B38  5010               	movf	(___aodiv@divisor+7)^0,w,c
  2332  000B3A  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  2333  000B3C  8013               	bsf	___aodiv@quotient^0,0,c
  2334  000B3E                     l1633:
  2335  000B3E  90D8               	bcf	status,0,c
  2336  000B40  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  2337  000B42  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  2338  000B44  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  2339  000B46  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  2340  000B48  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  2341  000B4A  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  2342  000B4C  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  2343  000B4E  3209               	rrcf	___aodiv@divisor^0,f,c
  2344  000B50  2E11               	decfsz	___aodiv@counter^0,f,c
  2345  000B52  D7C9               	goto	u850
  2346  000B54                     l1637:
  2347  000B54  5012               	movf	___aodiv@sign^0,w,c
  2348  000B56  B4D8               	btfsc	status,2,c
  2349  000B58  D010               	goto	l1641
  2350  000B5A  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  2351  000B5C  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  2352  000B5E  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  2353  000B60  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  2354  000B62  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  2355  000B64  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  2356  000B66  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  2357  000B68  6C13               	negf	___aodiv@quotient^0,c
  2358  000B6A  0E00               	movlw	0
  2359  000B6C  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  2360  000B6E  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  2361  000B70  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  2362  000B72  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  2363  000B74  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  2364  000B76  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  2365  000B78  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  2366  000B7A                     l1641:
  2367  000B7A  C013  F001         	movff	___aodiv@quotient,?___aodiv
  2368  000B7E  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  2369  000B82  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  2370  000B86  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  2371  000B8A  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  2372  000B8E  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  2373  000B92  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  2374  000B96  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  2375  000B9A  0012               	return		;funcret
  2376  000B9C                     __end_of___aodiv:
  2377                           	callstack 0
  2378                           
  2379 ;; *************** function _Lcd_Out2 *****************
  2380 ;; Defined at:
  2381 ;;		line 117 in file "./LCD_HDD44780.h"
  2382 ;; Parameters:    Size  Location     Type
  2383 ;;  y               1    wreg     unsigned char 
  2384 ;;  x               1    3[COMRAM] unsigned char 
  2385 ;;  buffer          2    4[COMRAM] PTR unsigned char 
  2386 ;;		 -> STR_3(17), main@time(10), main@date(10), 
  2387 ;; Auto vars:     Size  Location     Type
  2388 ;;  y               1    8[COMRAM] unsigned char 
  2389 ;;  data            1    9[COMRAM] unsigned char 
  2390 ;; Return value:  Size  Location     Type
  2391 ;;                  1    wreg      void 
  2392 ;; Registers used:
  2393 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2394 ;; Tracked objects:
  2395 ;;		On entry : 0/0
  2396 ;;		On exit  : 0/0
  2397 ;;		Unchanged: 0/0
  2398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2399 ;;      Params:         3       0       0       0       0       0       0       0       0
  2400 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2401 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2402 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2403 ;;Total ram usage:        7 bytes
  2404 ;; Hardware stack levels used:    1
  2405 ;; Hardware stack levels required when called:    1
  2406 ;; This function calls:
  2407 ;;		_Lcd_Chr_CP
  2408 ;;		_Lcd_Cmd
  2409 ;; This function is called by:
  2410 ;;		_main
  2411 ;; This function uses a non-reentrant model
  2412 ;;
  2413                           
  2414                           	psect	text13
  2415  00130A                     __ptext13:
  2416                           	callstack 0
  2417  00130A                     _Lcd_Out2:
  2418                           	callstack 29
  2419                           
  2420                           ;incstack = 0
  2421                           ;Lcd_Out2@y stored from wreg
  2422  00130A  6E09               	movwf	Lcd_Out2@y^0,c
  2423                           
  2424                           ;./LCD_HDD44780.h: 117: void Lcd_Out2(unsigned char y, unsigned char x, char *buffer);./
      +                          LCD_HDD44780.h: 118: {;./LCD_HDD44780.h: 119: unsigned char data;;./LCD_HDD44780.h: 120:
      +                           switch (y)
  2425  00130C  D00D               	goto	l2029
  2426  00130E                     l2019:
  2427  00130E  5004               	movf	Lcd_Out2@x^0,w,c
  2428  001310  0F80               	addlw	128
  2429  001312  D008               	goto	L4
  2430  001314                     l2021:
  2431  001314  5004               	movf	Lcd_Out2@x^0,w,c
  2432  001316  0FC0               	addlw	192
  2433  001318  D005               	goto	L4
  2434  00131A                     l2023:
  2435  00131A  5004               	movf	Lcd_Out2@x^0,w,c
  2436  00131C  0F94               	addlw	148
  2437  00131E  D002               	goto	L4
  2438  001320                     l2025:
  2439  001320  5004               	movf	Lcd_Out2@x^0,w,c
  2440  001322  0FD4               	addlw	212
  2441  001324                     L4:
  2442  001324  6E0A               	movwf	Lcd_Out2@data^0,c
  2443  001326  D014               	goto	l2031
  2444  001328                     l2029:
  2445  001328  5009               	movf	Lcd_Out2@y^0,w,c
  2446  00132A  6E07               	movwf	??_Lcd_Out2^0,c
  2447  00132C  6A08               	clrf	(??_Lcd_Out2+1)^0,c
  2448                           
  2449                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2450                           ; Switch size 1, requested type "simple"
  2451                           ; Number of cases is 1, Range of values is 0 to 0
  2452                           ; switch strategies available:
  2453                           ; Name         Instructions Cycles
  2454                           ; simple_byte            4     3 (average)
  2455                           ;	Chosen strategy is simple_byte
  2456  00132E  5008               	movf	(??_Lcd_Out2+1)^0,w,c
  2457  001330  0A00               	xorlw	0	; case 0
  2458  001332  A4D8               	btfss	status,2,c
  2459  001334  D00D               	goto	l2031
  2460                           
  2461                           ; Switch size 1, requested type "simple"
  2462                           ; Number of cases is 4, Range of values is 1 to 4
  2463                           ; switch strategies available:
  2464                           ; Name         Instructions Cycles
  2465                           ; simple_byte           13     7 (average)
  2466                           ;	Chosen strategy is simple_byte
  2467  001336  5007               	movf	??_Lcd_Out2^0,w,c
  2468  001338  0A01               	xorlw	1	; case 1
  2469  00133A  B4D8               	btfsc	status,2,c
  2470  00133C  D7E8               	goto	l2019
  2471  00133E  0A03               	xorlw	3	; case 2
  2472  001340  B4D8               	btfsc	status,2,c
  2473  001342  D7E8               	goto	l2021
  2474  001344  0A01               	xorlw	1	; case 3
  2475  001346  B4D8               	btfsc	status,2,c
  2476  001348  D7E8               	goto	l2023
  2477  00134A  0A07               	xorlw	7	; case 4
  2478  00134C  B4D8               	btfsc	status,2,c
  2479  00134E  D7E8               	goto	l2025
  2480  001350                     l2031:
  2481                           
  2482                           ;./LCD_HDD44780.h: 128: Lcd_Cmd(data);
  2483  001350  500A               	movf	Lcd_Out2@data^0,w,c
  2484  001352  EC91  F007         	call	_Lcd_Cmd
  2485                           
  2486                           ;./LCD_HDD44780.h: 129: while(*buffer)
  2487  001356  D014               	goto	l2037
  2488  001358                     l2033:
  2489                           
  2490                           ;./LCD_HDD44780.h: 130: {;./LCD_HDD44780.h: 131:     Lcd_Chr_CP(*buffer);
  2491  001358  C005  FFF6         	movff	Lcd_Out2@buffer,tblptrl
  2492  00135C  C006  FFF7         	movff	Lcd_Out2@buffer+1,tblptrh
  2493  001360  6AF8               	clrf	tblptru,c
  2494  001362  0E07               	movlw	(high __ramtop+-1)
  2495  001364  64F7               	cpfsgt	tblptrh,c
  2496  001366  D003               	bra	u1447
  2497  001368  0008               	tblrd		*
  2498  00136A  50F5               	movf	tablat,w,c
  2499  00136C  D005               	bra	u1440
  2500  00136E                     u1447:
  2501  00136E  CFF6 FFE1          	movff	tblptrl,fsr1l
  2502  001372  CFF7 FFE2          	movff	tblptrh,fsr1h
  2503  001376  50E7               	movf	indf1,w,c
  2504  001378                     u1440:
  2505  001378  ECFF  F006         	call	_Lcd_Chr_CP
  2506                           
  2507                           ;./LCD_HDD44780.h: 132:     buffer++;
  2508  00137C  4A05               	infsnz	Lcd_Out2@buffer^0,f,c
  2509  00137E  2A06               	incf	(Lcd_Out2@buffer+1)^0,f,c
  2510  001380                     l2037:
  2511                           
  2512                           ;./LCD_HDD44780.h: 129: while(*buffer)
  2513  001380  C005  FFF6         	movff	Lcd_Out2@buffer,tblptrl
  2514  001384  C006  FFF7         	movff	Lcd_Out2@buffer+1,tblptrh
  2515  001388  6AF8               	clrf	tblptru,c
  2516  00138A  0E07               	movlw	(high __ramtop+-1)
  2517  00138C  64F7               	cpfsgt	tblptrh,c
  2518  00138E  D003               	bra	u1457
  2519  001390  0008               	tblrd		*
  2520  001392  50F5               	movf	tablat,w,c
  2521  001394  D005               	bra	u1450
  2522  001396                     u1457:
  2523  001396  CFF6 FFE1          	movff	tblptrl,fsr1l
  2524  00139A  CFF7 FFE2          	movff	tblptrh,fsr1h
  2525  00139E  50E7               	movf	indf1,w,c
  2526  0013A0                     u1450:
  2527  0013A0  0900               	iorlw	0
  2528  0013A2  B4D8               	btfsc	status,2,c
  2529  0013A4  0012               	return	
  2530  0013A6  D7D8               	goto	l2033
  2531  0013A8                     __end_of_Lcd_Out2:
  2532                           	callstack 0
  2533                           
  2534 ;; *************** function _Lcd_Chr_CP *****************
  2535 ;; Defined at:
  2536 ;;		line 138 in file "./LCD_HDD44780.h"
  2537 ;; Parameters:    Size  Location     Type
  2538 ;;  data            1    wreg     unsigned char 
  2539 ;; Auto vars:     Size  Location     Type
  2540 ;;  data            1    2[COMRAM] unsigned char 
  2541 ;; Return value:  Size  Location     Type
  2542 ;;                  1    wreg      void 
  2543 ;; Registers used:
  2544 ;;		wreg, status,2, status,0
  2545 ;; Tracked objects:
  2546 ;;		On entry : 0/0
  2547 ;;		On exit  : 0/0
  2548 ;;		Unchanged: 0/0
  2549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2550 ;;      Params:         0       0       0       0       0       0       0       0       0
  2551 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2552 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2553 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2554 ;;Total ram usage:        3 bytes
  2555 ;; Hardware stack levels used:    1
  2556 ;; This function calls:
  2557 ;;		Nothing
  2558 ;; This function is called by:
  2559 ;;		_Lcd_Out2
  2560 ;; This function uses a non-reentrant model
  2561 ;;
  2562                           
  2563                           	psect	text14
  2564  000DFE                     __ptext14:
  2565                           	callstack 0
  2566  000DFE                     _Lcd_Chr_CP:
  2567                           	callstack 29
  2568                           
  2569                           ;incstack = 0
  2570                           ;Lcd_Chr_CP@data stored from wreg
  2571  000DFE  6E03               	movwf	Lcd_Chr_CP@data^0,c
  2572                           
  2573                           ;./LCD_HDD44780.h: 139: LATDbits.LATD5 = 0; LATDbits.LATD4 = 1;
  2574  000E00  9A8C               	bcf	140,5,c	;volatile
  2575  000E02  888C               	bsf	140,4,c	;volatile
  2576                           
  2577                           ;./LCD_HDD44780.h: 140: LATDbits.LATD3 = (data & 0b10000000)>>7; LATDbits.LATD2 = (data 
      +                          & 0b01000000)>>6;
  2578  000E04  6A01               	clrf	??_Lcd_Chr_CP^0,c
  2579  000E06  AE03               	btfss	Lcd_Chr_CP@data^0,7,c
  2580  000E08  D001               	bra	u1305
  2581  000E0A  2A01               	incf	??_Lcd_Chr_CP^0,f,c
  2582  000E0C                     u1305:
  2583  000E0C  0E01               	movlw	1
  2584  000E0E  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  2585  000E10  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  2586  000E12  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  2587  000E14  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  2588  000E16  508C               	movf	140,w,c	;volatile
  2589  000E18  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  2590  000E1A  0BF7               	andlw	-9
  2591  000E1C  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  2592  000E1E  6E8C               	movwf	140,c	;volatile
  2593  000E20  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  2594  000E24  0E06               	movlw	6
  2595  000E26  6E02               	movwf	(??_Lcd_Chr_CP+1)^0,c
  2596  000E28                     u1315:
  2597  000E28  90D8               	bcf	status,0,c
  2598  000E2A  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  2599  000E2C  2E02               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  2600  000E2E  D7FC               	goto	u1315
  2601  000E30  0E01               	movlw	1
  2602  000E32  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  2603  000E34  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  2604  000E36  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  2605  000E38  508C               	movf	140,w,c	;volatile
  2606  000E3A  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  2607  000E3C  0BFB               	andlw	-5
  2608  000E3E  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  2609  000E40  6E8C               	movwf	140,c	;volatile
  2610                           
  2611                           ;./LCD_HDD44780.h: 141: LATDbits.LATD1 = (data & 0b00100000)>>5; LATDbits.LATD0 = (data 
      +                          & 0b00010000)>>4;
  2612  000E42  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  2613  000E46  0E05               	movlw	5
  2614  000E48  6E02               	movwf	(??_Lcd_Chr_CP+1)^0,c
  2615  000E4A                     u1325:
  2616  000E4A  90D8               	bcf	status,0,c
  2617  000E4C  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  2618  000E4E  2E02               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  2619  000E50  D7FC               	goto	u1325
  2620  000E52  0E01               	movlw	1
  2621  000E54  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  2622  000E56  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  2623  000E58  508C               	movf	140,w,c	;volatile
  2624  000E5A  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  2625  000E5C  0BFD               	andlw	-3
  2626  000E5E  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  2627  000E60  6E8C               	movwf	140,c	;volatile
  2628  000E62  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  2629  000E66  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
  2630  000E68  0E0F               	movlw	15
  2631  000E6A  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  2632  000E6C  0E01               	movlw	1
  2633  000E6E  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  2634  000E70  508C               	movf	140,w,c	;volatile
  2635  000E72  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  2636  000E74  0BFE               	andlw	-2
  2637  000E76  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  2638  000E78  6E8C               	movwf	140,c	;volatile
  2639                           
  2640                           ;./LCD_HDD44780.h: 142: _delay(10);
  2641  000E7A  0E03               	movlw	3
  2642  000E7C                     u1507:
  2643  000E7C  2EE8               	decfsz	wreg,f,c
  2644  000E7E  D7FE               	bra	u1507
  2645  000E80  F000               	nop	
  2646                           
  2647                           ;./LCD_HDD44780.h: 143: LATDbits.LATD5 = 1; _delay((unsigned long)((5)*(4000000/4000000.
      +                          0))); LATDbits.LATD5 = 0;
  2648  000E82  8A8C               	bsf	140,5,c	;volatile
  2649  000E84  D000               	nop2		;2 cycle nop
  2650  000E86  D000               	nop2		;2 cycle nop
  2651  000E88  F000               	nop	
  2652  000E8A  9A8C               	bcf	140,5,c	;volatile
  2653                           
  2654                           ;./LCD_HDD44780.h: 144: LATDbits.LATD3 = (data & 0b00001000)>>3; LATDbits.LATD2 = (data 
      +                          & 0b00000100)>>2;
  2655  000E8C  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  2656  000E90  90D8               	bcf	status,0,c
  2657  000E92  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  2658  000E94  90D8               	bcf	status,0,c
  2659  000E96  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  2660  000E98  90D8               	bcf	status,0,c
  2661  000E9A  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  2662  000E9C  0E01               	movlw	1
  2663  000E9E  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  2664  000EA0  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  2665  000EA2  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  2666  000EA4  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  2667  000EA6  508C               	movf	140,w,c	;volatile
  2668  000EA8  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  2669  000EAA  0BF7               	andlw	-9
  2670  000EAC  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  2671  000EAE  6E8C               	movwf	140,c	;volatile
  2672  000EB0  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  2673  000EB4  90D8               	bcf	status,0,c
  2674  000EB6  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  2675  000EB8  90D8               	bcf	status,0,c
  2676  000EBA  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  2677  000EBC  0E01               	movlw	1
  2678  000EBE  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  2679  000EC0  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  2680  000EC2  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  2681  000EC4  508C               	movf	140,w,c	;volatile
  2682  000EC6  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  2683  000EC8  0BFB               	andlw	-5
  2684  000ECA  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  2685  000ECC  6E8C               	movwf	140,c	;volatile
  2686                           
  2687                           ;./LCD_HDD44780.h: 145: LATDbits.LATD1 = (data & 0b00000010)>>1; LATDbits.LATD0 = (data 
      +                          & 0b00000001);
  2688  000ECE  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  2689  000ED2  90D8               	bcf	status,0,c
  2690  000ED4  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  2691  000ED6  0E01               	movlw	1
  2692  000ED8  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  2693  000EDA  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  2694  000EDC  508C               	movf	140,w,c	;volatile
  2695  000EDE  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  2696  000EE0  0BFD               	andlw	-3
  2697  000EE2  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  2698  000EE4  6E8C               	movwf	140,c	;volatile
  2699  000EE6  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  2700  000EEA  0E01               	movlw	1
  2701  000EEC  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  2702  000EEE  508C               	movf	140,w,c	;volatile
  2703  000EF0  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  2704  000EF2  0BFE               	andlw	-2
  2705  000EF4  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  2706  000EF6  6E8C               	movwf	140,c	;volatile
  2707                           
  2708                           ;./LCD_HDD44780.h: 146: _delay(10);
  2709  000EF8  0E03               	movlw	3
  2710  000EFA                     u1517:
  2711  000EFA  2EE8               	decfsz	wreg,f,c
  2712  000EFC  D7FE               	bra	u1517
  2713  000EFE  F000               	nop	
  2714                           
  2715                           ;./LCD_HDD44780.h: 147: LATDbits.LATD5 = 1; _delay((unsigned long)((5)*(4000000/4000000.
      +                          0))); LATDbits.LATD5 = 0;
  2716  000F00  8A8C               	bsf	140,5,c	;volatile
  2717  000F02  D000               	nop2		;2 cycle nop
  2718  000F04  D000               	nop2		;2 cycle nop
  2719  000F06  F000               	nop	
  2720  000F08  9A8C               	bcf	140,5,c	;volatile
  2721                           
  2722                           ;./LCD_HDD44780.h: 148: _delay((unsigned long)((5)*(4000000/4000000.0))); _delay((unsign
      +                          ed long)((5500)*(4000000/4000000.0)));
  2723  000F0A  D000               	nop2		;2 cycle nop
  2724  000F0C  D000               	nop2		;2 cycle nop
  2725  000F0E  F000               	nop	
  2726  000F10  0E08               	movlw	8
  2727  000F12  6E01               	movwf	??_Lcd_Chr_CP^0,c
  2728  000F14  0E23               	movlw	35
  2729  000F16                     u1527:
  2730  000F16  2EE8               	decfsz	wreg,f,c
  2731  000F18  D7FE               	bra	u1527
  2732  000F1A  2E01               	decfsz	??_Lcd_Chr_CP^0,f,c
  2733  000F1C  D7FC               	bra	u1527
  2734  000F1E  F000               	nop	
  2735  000F20  0012               	return		;funcret
  2736  000F22                     __end_of_Lcd_Chr_CP:
  2737                           	callstack 0
  2738                           
  2739 ;; *************** function _Lcd_Init *****************
  2740 ;; Defined at:
  2741 ;;		line 54 in file "./LCD_HDD44780.h"
  2742 ;; Parameters:    Size  Location     Type
  2743 ;;		None
  2744 ;; Auto vars:     Size  Location     Type
  2745 ;;  data            1    4[COMRAM] unsigned char 
  2746 ;; Return value:  Size  Location     Type
  2747 ;;                  1    wreg      void 
  2748 ;; Registers used:
  2749 ;;		wreg, status,2, status,0, cstack
  2750 ;; Tracked objects:
  2751 ;;		On entry : 0/0
  2752 ;;		On exit  : 0/0
  2753 ;;		Unchanged: 0/0
  2754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2755 ;;      Params:         0       0       0       0       0       0       0       0       0
  2756 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2757 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2758 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2759 ;;Total ram usage:        2 bytes
  2760 ;; Hardware stack levels used:    1
  2761 ;; Hardware stack levels required when called:    1
  2762 ;; This function calls:
  2763 ;;		_Lcd_Cmd
  2764 ;; This function is called by:
  2765 ;;		_main
  2766 ;; This function uses a non-reentrant model
  2767 ;;
  2768                           
  2769                           	psect	text15
  2770  001040                     __ptext15:
  2771                           	callstack 0
  2772  001040                     _Lcd_Init:
  2773                           	callstack 29
  2774                           
  2775                           ;./LCD_HDD44780.h: 55: unsigned char data;;./LCD_HDD44780.h: 56: TRISDbits.TRISD3 = 0;
  2776                           
  2777                           ;incstack = 0
  2778  001040  9695               	bcf	149,3,c	;volatile
  2779                           
  2780                           ;./LCD_HDD44780.h: 57: TRISDbits.TRISD2 = 0;
  2781  001042  9495               	bcf	149,2,c	;volatile
  2782                           
  2783                           ;./LCD_HDD44780.h: 58: TRISDbits.TRISD1 = 0;
  2784  001044  9295               	bcf	149,1,c	;volatile
  2785                           
  2786                           ;./LCD_HDD44780.h: 59: TRISDbits.TRISD0 = 0;
  2787  001046  9095               	bcf	149,0,c	;volatile
  2788                           
  2789                           ;./LCD_HDD44780.h: 60: TRISDbits.TRISD5 = 0;
  2790  001048  9A95               	bcf	149,5,c	;volatile
  2791                           
  2792                           ;./LCD_HDD44780.h: 61: TRISDbits.TRISD4 = 0;
  2793  00104A  9895               	bcf	149,4,c	;volatile
  2794                           
  2795                           ;./LCD_HDD44780.h: 62: LATDbits.LATD3 = 0;
  2796  00104C  968C               	bcf	140,3,c	;volatile
  2797                           
  2798                           ;./LCD_HDD44780.h: 63: LATDbits.LATD2 = 0;
  2799  00104E  948C               	bcf	140,2,c	;volatile
  2800                           
  2801                           ;./LCD_HDD44780.h: 64: LATDbits.LATD1 = 0;
  2802  001050  928C               	bcf	140,1,c	;volatile
  2803                           
  2804                           ;./LCD_HDD44780.h: 65: LATDbits.LATD0 = 0;
  2805  001052  908C               	bcf	140,0,c	;volatile
  2806                           
  2807                           ;./LCD_HDD44780.h: 66: LATDbits.LATD5 = 0;
  2808  001054  9A8C               	bcf	140,5,c	;volatile
  2809                           
  2810                           ;./LCD_HDD44780.h: 67: LATDbits.LATD4 = 0;
  2811  001056  988C               	bcf	140,4,c	;volatile
  2812                           
  2813                           ;./LCD_HDD44780.h: 68: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  2814  001058  0E08               	movlw	8
  2815  00105A  6E04               	movwf	??_Lcd_Init^0,c
  2816  00105C  0E23               	movlw	35
  2817  00105E                     u1537:
  2818  00105E  2EE8               	decfsz	wreg,f,c
  2819  001060  D7FE               	bra	u1537
  2820  001062  2E04               	decfsz	??_Lcd_Init^0,f,c
  2821  001064  D7FC               	bra	u1537
  2822  001066  F000               	nop	
  2823                           
  2824                           ;./LCD_HDD44780.h: 69: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  2825  001068  0E08               	movlw	8
  2826  00106A  6E04               	movwf	??_Lcd_Init^0,c
  2827  00106C  0E23               	movlw	35
  2828  00106E                     u1547:
  2829  00106E  2EE8               	decfsz	wreg,f,c
  2830  001070  D7FE               	bra	u1547
  2831  001072  2E04               	decfsz	??_Lcd_Init^0,f,c
  2832  001074  D7FC               	bra	u1547
  2833  001076  F000               	nop	
  2834                           
  2835                           ;./LCD_HDD44780.h: 70: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  2836  001078  0E08               	movlw	8
  2837  00107A  6E04               	movwf	??_Lcd_Init^0,c
  2838  00107C  0E23               	movlw	35
  2839  00107E                     u1557:
  2840  00107E  2EE8               	decfsz	wreg,f,c
  2841  001080  D7FE               	bra	u1557
  2842  001082  2E04               	decfsz	??_Lcd_Init^0,f,c
  2843  001084  D7FC               	bra	u1557
  2844  001086  F000               	nop	
  2845                           
  2846                           ;./LCD_HDD44780.h: 71: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  2847  001088  0E08               	movlw	8
  2848  00108A  6E04               	movwf	??_Lcd_Init^0,c
  2849  00108C  0E23               	movlw	35
  2850  00108E                     u1567:
  2851  00108E  2EE8               	decfsz	wreg,f,c
  2852  001090  D7FE               	bra	u1567
  2853  001092  2E04               	decfsz	??_Lcd_Init^0,f,c
  2854  001094  D7FC               	bra	u1567
  2855  001096  F000               	nop	
  2856                           
  2857                           ;./LCD_HDD44780.h: 72: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  2858  001098  0E08               	movlw	8
  2859  00109A  6E04               	movwf	??_Lcd_Init^0,c
  2860  00109C  0E23               	movlw	35
  2861  00109E                     u1577:
  2862  00109E  2EE8               	decfsz	wreg,f,c
  2863  0010A0  D7FE               	bra	u1577
  2864  0010A2  2E04               	decfsz	??_Lcd_Init^0,f,c
  2865  0010A4  D7FC               	bra	u1577
  2866  0010A6  F000               	nop	
  2867                           
  2868                           ;./LCD_HDD44780.h: 73: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  2869  0010A8  0E08               	movlw	8
  2870  0010AA  6E04               	movwf	??_Lcd_Init^0,c
  2871  0010AC  0E23               	movlw	35
  2872  0010AE                     u1587:
  2873  0010AE  2EE8               	decfsz	wreg,f,c
  2874  0010B0  D7FE               	bra	u1587
  2875  0010B2  2E04               	decfsz	??_Lcd_Init^0,f,c
  2876  0010B4  D7FC               	bra	u1587
  2877  0010B6  F000               	nop	
  2878                           
  2879                           ;./LCD_HDD44780.h: 74: for(data = 1; data < 4; data ++)
  2880  0010B8  0E01               	movlw	1
  2881  0010BA  6E05               	movwf	Lcd_Init@data^0,c
  2882  0010BC                     l23:
  2883                           
  2884                           ;./LCD_HDD44780.h: 75: {;./LCD_HDD44780.h: 76:     LATDbits.LATD3 = 0; LATDbits.LATD2 = 
      +                          0; LATDbits.LATD1 = 1; LATDbits.LATD0 = 1; LATDbits.LATD5 = 0;
  2885  0010BC  968C               	bcf	140,3,c	;volatile
  2886  0010BE  948C               	bcf	140,2,c	;volatile
  2887  0010C0  828C               	bsf	140,1,c	;volatile
  2888  0010C2  808C               	bsf	140,0,c	;volatile
  2889  0010C4  9A8C               	bcf	140,5,c	;volatile
  2890                           
  2891                           ;./LCD_HDD44780.h: 77:     LATDbits.LATD4 = 0; LATDbits.LATD3 = 0; LATDbits.LATD2 = 0; L
      +                          ATDbits.LATD1 = 1; LATDbits.LATD0 = 1;
  2892  0010C6  988C               	bcf	140,4,c	;volatile
  2893  0010C8  968C               	bcf	140,3,c	;volatile
  2894  0010CA  948C               	bcf	140,2,c	;volatile
  2895  0010CC  828C               	bsf	140,1,c	;volatile
  2896  0010CE  808C               	bsf	140,0,c	;volatile
  2897                           
  2898                           ;./LCD_HDD44780.h: 78:     LATDbits.LATD5 = 1; LATDbits.LATD4 = 0;
  2899  0010D0  8A8C               	bsf	140,5,c	;volatile
  2900  0010D2  988C               	bcf	140,4,c	;volatile
  2901                           
  2902                           ;./LCD_HDD44780.h: 79:     _delay((unsigned long)((5)*(4000000/4000000.0)));
  2903  0010D4  D000               	nop2		;2 cycle nop
  2904  0010D6  D000               	nop2		;2 cycle nop
  2905  0010D8  F000               	nop	
  2906                           
  2907                           ;./LCD_HDD44780.h: 80:     LATDbits.LATD3 = 0; LATDbits.LATD2 = 0; LATDbits.LATD1 = 1; L
      +                          ATDbits.LATD0 = 1; LATDbits.LATD5 = 0;
  2908  0010DA  968C               	bcf	140,3,c	;volatile
  2909  0010DC  948C               	bcf	140,2,c	;volatile
  2910  0010DE  828C               	bsf	140,1,c	;volatile
  2911  0010E0  808C               	bsf	140,0,c	;volatile
  2912  0010E2  9A8C               	bcf	140,5,c	;volatile
  2913                           
  2914                           ;./LCD_HDD44780.h: 81:     LATDbits.LATD4 = 0;
  2915  0010E4  988C               	bcf	140,4,c	;volatile
  2916                           
  2917                           ;./LCD_HDD44780.h: 82:     _delay((unsigned long)((5500)*(4000000/4000000.0)));
  2918  0010E6  0E08               	movlw	8
  2919  0010E8  6E04               	movwf	??_Lcd_Init^0,c
  2920  0010EA  0E23               	movlw	35
  2921  0010EC                     u1597:
  2922  0010EC  2EE8               	decfsz	wreg,f,c
  2923  0010EE  D7FE               	bra	u1597
  2924  0010F0  2E04               	decfsz	??_Lcd_Init^0,f,c
  2925  0010F2  D7FC               	bra	u1597
  2926  0010F4  F000               	nop	
  2927                           
  2928                           ;./LCD_HDD44780.h: 83: }
  2929  0010F6  2A05               	incf	Lcd_Init@data^0,f,c
  2930  0010F8  0E03               	movlw	3
  2931  0010FA  6405               	cpfsgt	Lcd_Init@data^0,c
  2932  0010FC  D7DF               	goto	l23
  2933                           
  2934                           ;./LCD_HDD44780.h: 84: LATDbits.LATD3 = 0; LATDbits.LATD2 = 0; LATDbits.LATD1 = 1; LATDb
      +                          its.LATD0 = 0; LATDbits.LATD5 = 0; LATDbits.LATD4 = 0;
  2935  0010FE  968C               	bcf	140,3,c	;volatile
  2936  001100  948C               	bcf	140,2,c	;volatile
  2937  001102  828C               	bsf	140,1,c	;volatile
  2938  001104  908C               	bcf	140,0,c	;volatile
  2939  001106  9A8C               	bcf	140,5,c	;volatile
  2940  001108  988C               	bcf	140,4,c	;volatile
  2941                           
  2942                           ;./LCD_HDD44780.h: 85: LATDbits.LATD3 = 0; LATDbits.LATD2 = 0; LATDbits.LATD1 = 1; LATDb
      +                          its.LATD0 = 0; LATDbits.LATD5 = 1; LATDbits.LATD4 = 0;
  2943  00110A  968C               	bcf	140,3,c	;volatile
  2944  00110C  948C               	bcf	140,2,c	;volatile
  2945  00110E  828C               	bsf	140,1,c	;volatile
  2946  001110  908C               	bcf	140,0,c	;volatile
  2947  001112  8A8C               	bsf	140,5,c	;volatile
  2948  001114  988C               	bcf	140,4,c	;volatile
  2949                           
  2950                           ;./LCD_HDD44780.h: 86: _delay((unsigned long)((5)*(4000000/4000000.0)));
  2951  001116  D000               	nop2		;2 cycle nop
  2952  001118  D000               	nop2		;2 cycle nop
  2953  00111A  F000               	nop	
  2954                           
  2955                           ;./LCD_HDD44780.h: 87: LATDbits.LATD3 = 0; LATDbits.LATD2 = 0; LATDbits.LATD1 = 1; LATDb
      +                          its.LATD0 = 0; LATDbits.LATD5 = 0; LATDbits.LATD4 = 0;
  2956  00111C  968C               	bcf	140,3,c	;volatile
  2957  00111E  948C               	bcf	140,2,c	;volatile
  2958  001120  828C               	bsf	140,1,c	;volatile
  2959  001122  908C               	bcf	140,0,c	;volatile
  2960  001124  9A8C               	bcf	140,5,c	;volatile
  2961  001126  988C               	bcf	140,4,c	;volatile
  2962                           
  2963                           ;./LCD_HDD44780.h: 88: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  2964  001128  0E08               	movlw	8
  2965  00112A  6E04               	movwf	??_Lcd_Init^0,c
  2966  00112C  0E23               	movlw	35
  2967  00112E                     u1607:
  2968  00112E  2EE8               	decfsz	wreg,f,c
  2969  001130  D7FE               	bra	u1607
  2970  001132  2E04               	decfsz	??_Lcd_Init^0,f,c
  2971  001134  D7FC               	bra	u1607
  2972  001136  F000               	nop	
  2973  001138  0E28               	movlw	40
  2974  00113A  EC91  F007         	call	_Lcd_Cmd
  2975  00113E  0E10               	movlw	16
  2976  001140  EC91  F007         	call	_Lcd_Cmd
  2977  001144  0E01               	movlw	1
  2978  001146  EC91  F007         	call	_Lcd_Cmd
  2979  00114A  0E0F               	movlw	15
  2980  00114C  EC91  F007         	call	_Lcd_Cmd
  2981  001150  0012               	return		;funcret
  2982  001152                     __end_of_Lcd_Init:
  2983                           	callstack 0
  2984                           
  2985 ;; *************** function _Lcd_Cmd *****************
  2986 ;; Defined at:
  2987 ;;		line 152 in file "./LCD_HDD44780.h"
  2988 ;; Parameters:    Size  Location     Type
  2989 ;;  data            1    wreg     unsigned char 
  2990 ;; Auto vars:     Size  Location     Type
  2991 ;;  data            1    2[COMRAM] unsigned char 
  2992 ;; Return value:  Size  Location     Type
  2993 ;;                  1    wreg      void 
  2994 ;; Registers used:
  2995 ;;		wreg, status,2, status,0
  2996 ;; Tracked objects:
  2997 ;;		On entry : 0/0
  2998 ;;		On exit  : 0/0
  2999 ;;		Unchanged: 0/0
  3000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3001 ;;      Params:         0       0       0       0       0       0       0       0       0
  3002 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3003 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3004 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3005 ;;Total ram usage:        3 bytes
  3006 ;; Hardware stack levels used:    1
  3007 ;; This function calls:
  3008 ;;		Nothing
  3009 ;; This function is called by:
  3010 ;;		_Lcd_Init
  3011 ;;		_Lcd_Out2
  3012 ;;		_main
  3013 ;; This function uses a non-reentrant model
  3014 ;;
  3015                           
  3016                           	psect	text16
  3017  000F22                     __ptext16:
  3018                           	callstack 0
  3019  000F22                     _Lcd_Cmd:
  3020                           	callstack 29
  3021                           
  3022                           ;incstack = 0
  3023                           ;Lcd_Cmd@data stored from wreg
  3024  000F22  6E03               	movwf	Lcd_Cmd@data^0,c
  3025                           
  3026                           ;./LCD_HDD44780.h: 153: LATDbits.LATD5 = 0; LATDbits.LATD4 = 0;
  3027  000F24  9A8C               	bcf	140,5,c	;volatile
  3028  000F26  988C               	bcf	140,4,c	;volatile
  3029                           
  3030                           ;./LCD_HDD44780.h: 154: LATDbits.LATD3 = (data & 0b10000000)>>7; LATDbits.LATD2 = (data 
      +                          & 0b01000000)>>6;
  3031  000F28  6A01               	clrf	??_Lcd_Cmd^0,c
  3032  000F2A  AE03               	btfss	Lcd_Cmd@data^0,7,c
  3033  000F2C  D001               	bra	u1275
  3034  000F2E  2A01               	incf	??_Lcd_Cmd^0,f,c
  3035  000F30                     u1275:
  3036  000F30  0E01               	movlw	1
  3037  000F32  1601               	andwf	??_Lcd_Cmd^0,f,c
  3038  000F34  4601               	rlncf	??_Lcd_Cmd^0,f,c
  3039  000F36  4601               	rlncf	??_Lcd_Cmd^0,f,c
  3040  000F38  4601               	rlncf	??_Lcd_Cmd^0,f,c
  3041  000F3A  508C               	movf	140,w,c	;volatile
  3042  000F3C  1801               	xorwf	??_Lcd_Cmd^0,w,c
  3043  000F3E  0BF7               	andlw	-9
  3044  000F40  1801               	xorwf	??_Lcd_Cmd^0,w,c
  3045  000F42  6E8C               	movwf	140,c	;volatile
  3046  000F44  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  3047  000F48  0E06               	movlw	6
  3048  000F4A  6E02               	movwf	(??_Lcd_Cmd+1)^0,c
  3049  000F4C                     u1285:
  3050  000F4C  90D8               	bcf	status,0,c
  3051  000F4E  3201               	rrcf	??_Lcd_Cmd^0,f,c
  3052  000F50  2E02               	decfsz	(??_Lcd_Cmd+1)^0,f,c
  3053  000F52  D7FC               	goto	u1285
  3054  000F54  0E01               	movlw	1
  3055  000F56  1601               	andwf	??_Lcd_Cmd^0,f,c
  3056  000F58  4601               	rlncf	??_Lcd_Cmd^0,f,c
  3057  000F5A  4601               	rlncf	??_Lcd_Cmd^0,f,c
  3058  000F5C  508C               	movf	140,w,c	;volatile
  3059  000F5E  1801               	xorwf	??_Lcd_Cmd^0,w,c
  3060  000F60  0BFB               	andlw	-5
  3061  000F62  1801               	xorwf	??_Lcd_Cmd^0,w,c
  3062  000F64  6E8C               	movwf	140,c	;volatile
  3063                           
  3064                           ;./LCD_HDD44780.h: 155: LATDbits.LATD1 = (data & 0b00100000)>>5; LATDbits.LATD0 = (data 
      +                          & 0b00010000)>>4;
  3065  000F66  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  3066  000F6A  0E05               	movlw	5
  3067  000F6C  6E02               	movwf	(??_Lcd_Cmd+1)^0,c
  3068  000F6E                     u1295:
  3069  000F6E  90D8               	bcf	status,0,c
  3070  000F70  3201               	rrcf	??_Lcd_Cmd^0,f,c
  3071  000F72  2E02               	decfsz	(??_Lcd_Cmd+1)^0,f,c
  3072  000F74  D7FC               	goto	u1295
  3073  000F76  0E01               	movlw	1
  3074  000F78  1601               	andwf	??_Lcd_Cmd^0,f,c
  3075  000F7A  4601               	rlncf	??_Lcd_Cmd^0,f,c
  3076  000F7C  508C               	movf	140,w,c	;volatile
  3077  000F7E  1801               	xorwf	??_Lcd_Cmd^0,w,c
  3078  000F80  0BFD               	andlw	-3
  3079  000F82  1801               	xorwf	??_Lcd_Cmd^0,w,c
  3080  000F84  6E8C               	movwf	140,c	;volatile
  3081  000F86  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  3082  000F8A  3A01               	swapf	??_Lcd_Cmd^0,f,c
  3083  000F8C  0E0F               	movlw	15
  3084  000F8E  1601               	andwf	??_Lcd_Cmd^0,f,c
  3085  000F90  0E01               	movlw	1
  3086  000F92  1601               	andwf	??_Lcd_Cmd^0,f,c
  3087  000F94  508C               	movf	140,w,c	;volatile
  3088  000F96  1801               	xorwf	??_Lcd_Cmd^0,w,c
  3089  000F98  0BFE               	andlw	-2
  3090  000F9A  1801               	xorwf	??_Lcd_Cmd^0,w,c
  3091  000F9C  6E8C               	movwf	140,c	;volatile
  3092                           
  3093                           ;./LCD_HDD44780.h: 156: _delay(10);
  3094  000F9E  0E03               	movlw	3
  3095  000FA0                     u1617:
  3096  000FA0  2EE8               	decfsz	wreg,f,c
  3097  000FA2  D7FE               	bra	u1617
  3098  000FA4  F000               	nop	
  3099                           
  3100                           ;./LCD_HDD44780.h: 157: LATDbits.LATD5 = 1; _delay((unsigned long)((5)*(4000000/4000000.
      +                          0))); LATDbits.LATD5 = 0;
  3101  000FA6  8A8C               	bsf	140,5,c	;volatile
  3102  000FA8  D000               	nop2		;2 cycle nop
  3103  000FAA  D000               	nop2		;2 cycle nop
  3104  000FAC  F000               	nop	
  3105  000FAE  9A8C               	bcf	140,5,c	;volatile
  3106                           
  3107                           ;./LCD_HDD44780.h: 158: LATDbits.LATD3 = (data & 0b00001000)>>3; LATDbits.LATD2 = (data 
      +                          & 0b00000100)>>2;
  3108  000FB0  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  3109  000FB4  90D8               	bcf	status,0,c
  3110  000FB6  3201               	rrcf	??_Lcd_Cmd^0,f,c
  3111  000FB8  90D8               	bcf	status,0,c
  3112  000FBA  3201               	rrcf	??_Lcd_Cmd^0,f,c
  3113  000FBC  90D8               	bcf	status,0,c
  3114  000FBE  3201               	rrcf	??_Lcd_Cmd^0,f,c
  3115  000FC0  0E01               	movlw	1
  3116  000FC2  1601               	andwf	??_Lcd_Cmd^0,f,c
  3117  000FC4  4601               	rlncf	??_Lcd_Cmd^0,f,c
  3118  000FC6  4601               	rlncf	??_Lcd_Cmd^0,f,c
  3119  000FC8  4601               	rlncf	??_Lcd_Cmd^0,f,c
  3120  000FCA  508C               	movf	140,w,c	;volatile
  3121  000FCC  1801               	xorwf	??_Lcd_Cmd^0,w,c
  3122  000FCE  0BF7               	andlw	-9
  3123  000FD0  1801               	xorwf	??_Lcd_Cmd^0,w,c
  3124  000FD2  6E8C               	movwf	140,c	;volatile
  3125  000FD4  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  3126  000FD8  90D8               	bcf	status,0,c
  3127  000FDA  3201               	rrcf	??_Lcd_Cmd^0,f,c
  3128  000FDC  90D8               	bcf	status,0,c
  3129  000FDE  3201               	rrcf	??_Lcd_Cmd^0,f,c
  3130  000FE0  0E01               	movlw	1
  3131  000FE2  1601               	andwf	??_Lcd_Cmd^0,f,c
  3132  000FE4  4601               	rlncf	??_Lcd_Cmd^0,f,c
  3133  000FE6  4601               	rlncf	??_Lcd_Cmd^0,f,c
  3134  000FE8  508C               	movf	140,w,c	;volatile
  3135  000FEA  1801               	xorwf	??_Lcd_Cmd^0,w,c
  3136  000FEC  0BFB               	andlw	-5
  3137  000FEE  1801               	xorwf	??_Lcd_Cmd^0,w,c
  3138  000FF0  6E8C               	movwf	140,c	;volatile
  3139                           
  3140                           ;./LCD_HDD44780.h: 159: LATDbits.LATD1 = (data & 0b00000010)>>1; LATDbits.LATD0 = (data 
      +                          & 0b00000001);
  3141  000FF2  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  3142  000FF6  90D8               	bcf	status,0,c
  3143  000FF8  3201               	rrcf	??_Lcd_Cmd^0,f,c
  3144  000FFA  0E01               	movlw	1
  3145  000FFC  1601               	andwf	??_Lcd_Cmd^0,f,c
  3146  000FFE  4601               	rlncf	??_Lcd_Cmd^0,f,c
  3147  001000  508C               	movf	140,w,c	;volatile
  3148  001002  1801               	xorwf	??_Lcd_Cmd^0,w,c
  3149  001004  0BFD               	andlw	-3
  3150  001006  1801               	xorwf	??_Lcd_Cmd^0,w,c
  3151  001008  6E8C               	movwf	140,c	;volatile
  3152  00100A  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  3153  00100E  0E01               	movlw	1
  3154  001010  1601               	andwf	??_Lcd_Cmd^0,f,c
  3155  001012  508C               	movf	140,w,c	;volatile
  3156  001014  1801               	xorwf	??_Lcd_Cmd^0,w,c
  3157  001016  0BFE               	andlw	-2
  3158  001018  1801               	xorwf	??_Lcd_Cmd^0,w,c
  3159  00101A  6E8C               	movwf	140,c	;volatile
  3160                           
  3161                           ;./LCD_HDD44780.h: 160: _delay(10);
  3162  00101C  0E03               	movlw	3
  3163  00101E                     u1627:
  3164  00101E  2EE8               	decfsz	wreg,f,c
  3165  001020  D7FE               	bra	u1627
  3166  001022  F000               	nop	
  3167                           
  3168                           ;./LCD_HDD44780.h: 161: LATDbits.LATD5 = 1; _delay((unsigned long)((5)*(4000000/4000000.
      +                          0))); LATDbits.LATD5 = 0;
  3169  001024  8A8C               	bsf	140,5,c	;volatile
  3170  001026  D000               	nop2		;2 cycle nop
  3171  001028  D000               	nop2		;2 cycle nop
  3172  00102A  F000               	nop	
  3173  00102C  9A8C               	bcf	140,5,c	;volatile
  3174                           
  3175                           ;./LCD_HDD44780.h: 162: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  3176  00102E  0E08               	movlw	8
  3177  001030  6E01               	movwf	??_Lcd_Cmd^0,c
  3178  001032  0E23               	movlw	35
  3179  001034                     u1637:
  3180  001034  2EE8               	decfsz	wreg,f,c
  3181  001036  D7FE               	bra	u1637
  3182  001038  2E01               	decfsz	??_Lcd_Cmd^0,f,c
  3183  00103A  D7FC               	bra	u1637
  3184  00103C  F000               	nop	
  3185  00103E  0012               	return		;funcret
  3186  001040                     __end_of_Lcd_Cmd:
  3187                           	callstack 0
  3188                           
  3189 ;; *************** function _I2Cinit *****************
  3190 ;; Defined at:
  3191 ;;		line 4 in file "I2C.c"
  3192 ;; Parameters:    Size  Location     Type
  3193 ;;  FCPU            4   13[COMRAM] unsigned long 
  3194 ;;  clock           4   17[COMRAM] unsigned long 
  3195 ;; Auto vars:     Size  Location     Type
  3196 ;;  speed           1   25[COMRAM] unsigned char 
  3197 ;; Return value:  Size  Location     Type
  3198 ;;                  1    wreg      void 
  3199 ;; Registers used:
  3200 ;;		wreg, status,2, status,0, cstack
  3201 ;; Tracked objects:
  3202 ;;		On entry : 0/0
  3203 ;;		On exit  : 0/0
  3204 ;;		Unchanged: 0/0
  3205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3206 ;;      Params:         8       0       0       0       0       0       0       0       0
  3207 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3208 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3209 ;;      Totals:        13       0       0       0       0       0       0       0       0
  3210 ;;Total ram usage:       13 bytes
  3211 ;; Hardware stack levels used:    1
  3212 ;; Hardware stack levels required when called:    1
  3213 ;; This function calls:
  3214 ;;		___lldiv
  3215 ;; This function is called by:
  3216 ;;		_main
  3217 ;; This function uses a non-reentrant model
  3218 ;;
  3219                           
  3220                           	psect	text17
  3221  001590                     __ptext17:
  3222                           	callstack 0
  3223  001590                     _I2Cinit:
  3224                           	callstack 29
  3225                           
  3226                           ;I2C.c: 5:     uint8_t speed;;I2C.c: 6:     TRISBbits.RB0 = 1;
  3227                           
  3228                           ;incstack = 0
  3229  001590  8093               	bsf	147,0,c	;volatile
  3230                           
  3231                           ;I2C.c: 7:     TRISBbits.RB1 = 1;
  3232  001592  8293               	bsf	147,1,c	;volatile
  3233                           
  3234                           ;I2C.c: 8:     SSPSTATbits.SMP = 1;
  3235  001594  8EC7               	bsf	199,7,c	;volatile
  3236                           
  3237                           ;I2C.c: 9:     SSPCON1bits.SSPM = 0x08;
  3238  001596  50C6               	movf	198,w,c	;volatile
  3239  001598  0BF0               	andlw	-16
  3240  00159A  0908               	iorlw	8
  3241  00159C  6EC6               	movwf	198,c	;volatile
  3242                           
  3243                           ;I2C.c: 11:     speed = FCPU/(4*clock)-1;
  3244  00159E  C00E  F001         	movff	I2Cinit@FCPU,___lldiv@dividend
  3245  0015A2  C00F  F002         	movff	I2Cinit@FCPU+1,___lldiv@dividend+1
  3246  0015A6  C010  F003         	movff	I2Cinit@FCPU+2,___lldiv@dividend+2
  3247  0015AA  C011  F004         	movff	I2Cinit@FCPU+3,___lldiv@dividend+3
  3248  0015AE  C012  F016         	movff	I2Cinit@clock,??_I2Cinit
  3249  0015B2  C013  F017         	movff	I2Cinit@clock+1,??_I2Cinit+1
  3250  0015B6  C014  F018         	movff	I2Cinit@clock+2,??_I2Cinit+2
  3251  0015BA  C015  F019         	movff	I2Cinit@clock+3,??_I2Cinit+3
  3252  0015BE  0E02               	movlw	2
  3253  0015C0                     u1475:
  3254  0015C0  90D8               	bcf	status,0,c
  3255  0015C2  3616               	rlcf	??_I2Cinit^0,f,c
  3256  0015C4  3617               	rlcf	(??_I2Cinit+1)^0,f,c
  3257  0015C6  3618               	rlcf	(??_I2Cinit+2)^0,f,c
  3258  0015C8  3619               	rlcf	(??_I2Cinit+3)^0,f,c
  3259  0015CA  2EE8               	decfsz	wreg,f,c
  3260  0015CC  D7F9               	goto	u1475
  3261  0015CE  C016  F005         	movff	??_I2Cinit,___lldiv@divisor
  3262  0015D2  C017  F006         	movff	??_I2Cinit+1,___lldiv@divisor+1
  3263  0015D6  C018  F007         	movff	??_I2Cinit+2,___lldiv@divisor+2
  3264  0015DA  C019  F008         	movff	??_I2Cinit+3,___lldiv@divisor+3
  3265  0015DE  ECD4  F009         	call	___lldiv	;wreg free
  3266  0015E2  0401               	decf	?___lldiv^0,w,c
  3267  0015E4  6E1A               	movwf	I2Cinit@speed^0,c
  3268                           
  3269                           ;I2C.c: 12:     SSPADD = speed;
  3270  0015E6  C01A  FFC8         	movff	I2Cinit@speed,4040	;volatile
  3271                           
  3272                           ;I2C.c: 13:     SSPCON2 = 0x00;
  3273  0015EA  0E00               	movlw	0
  3274  0015EC  6EC5               	movwf	197,c	;volatile
  3275                           
  3276                           ;I2C.c: 14:     SSPCON1bits.SSPEN = 1;
  3277  0015EE  8AC6               	bsf	198,5,c	;volatile
  3278  0015F0  0012               	return		;funcret
  3279  0015F2                     __end_of_I2Cinit:
  3280                           	callstack 0
  3281                           
  3282 ;; *************** function ___lldiv *****************
  3283 ;; Defined at:
  3284 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\__lldiv.c"
  3285 ;; Parameters:    Size  Location     Type
  3286 ;;  dividend        4    0[COMRAM] unsigned long 
  3287 ;;  divisor         4    4[COMRAM] unsigned long 
  3288 ;; Auto vars:     Size  Location     Type
  3289 ;;  quotient        4    8[COMRAM] unsigned long 
  3290 ;;  counter         1   12[COMRAM] unsigned char 
  3291 ;; Return value:  Size  Location     Type
  3292 ;;                  4    0[COMRAM] unsigned long 
  3293 ;; Registers used:
  3294 ;;		wreg, status,2, status,0
  3295 ;; Tracked objects:
  3296 ;;		On entry : 0/0
  3297 ;;		On exit  : 0/0
  3298 ;;		Unchanged: 0/0
  3299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3300 ;;      Params:         8       0       0       0       0       0       0       0       0
  3301 ;;      Locals:         5       0       0       0       0       0       0       0       0
  3302 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3303 ;;      Totals:        13       0       0       0       0       0       0       0       0
  3304 ;;Total ram usage:       13 bytes
  3305 ;; Hardware stack levels used:    1
  3306 ;; This function calls:
  3307 ;;		Nothing
  3308 ;; This function is called by:
  3309 ;;		_I2Cinit
  3310 ;; This function uses a non-reentrant model
  3311 ;;
  3312                           
  3313                           	psect	text18
  3314  0013A8                     __ptext18:
  3315                           	callstack 0
  3316  0013A8                     ___lldiv:
  3317                           	callstack 29
  3318                           
  3319                           ;incstack = 0
  3320  0013A8  0E00               	movlw	0
  3321  0013AA  6E09               	movwf	___lldiv@quotient^0,c
  3322  0013AC  0E00               	movlw	0
  3323  0013AE  6E0A               	movwf	(___lldiv@quotient+1)^0,c
  3324  0013B0  0E00               	movlw	0
  3325  0013B2  6E0B               	movwf	(___lldiv@quotient+2)^0,c
  3326  0013B4  0E00               	movlw	0
  3327  0013B6  6E0C               	movwf	(___lldiv@quotient+3)^0,c
  3328  0013B8  5005               	movf	___lldiv@divisor^0,w,c
  3329  0013BA  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
  3330  0013BC  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
  3331  0013BE  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
  3332  0013C0  B4D8               	btfsc	status,2,c
  3333  0013C2  D02A               	goto	l200
  3334  0013C4  0E01               	movlw	1
  3335  0013C6  6E0D               	movwf	___lldiv@counter^0,c
  3336  0013C8  D006               	goto	l1963
  3337  0013CA                     l1961:
  3338  0013CA  90D8               	bcf	status,0,c
  3339  0013CC  3605               	rlcf	___lldiv@divisor^0,f,c
  3340  0013CE  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
  3341  0013D0  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
  3342  0013D2  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
  3343  0013D4  2A0D               	incf	___lldiv@counter^0,f,c
  3344  0013D6                     l1963:
  3345  0013D6  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
  3346  0013D8  D7F8               	goto	l1961
  3347  0013DA                     u1400:
  3348  0013DA  90D8               	bcf	status,0,c
  3349  0013DC  3609               	rlcf	___lldiv@quotient^0,f,c
  3350  0013DE  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
  3351  0013E0  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
  3352  0013E2  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
  3353  0013E4  5005               	movf	___lldiv@divisor^0,w,c
  3354  0013E6  5C01               	subwf	___lldiv@dividend^0,w,c
  3355  0013E8  5006               	movf	(___lldiv@divisor+1)^0,w,c
  3356  0013EA  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
  3357  0013EC  5007               	movf	(___lldiv@divisor+2)^0,w,c
  3358  0013EE  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
  3359  0013F0  5008               	movf	(___lldiv@divisor+3)^0,w,c
  3360  0013F2  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
  3361  0013F4  A0D8               	btfss	status,0,c
  3362  0013F6  D009               	goto	l1973
  3363  0013F8  5005               	movf	___lldiv@divisor^0,w,c
  3364  0013FA  5E01               	subwf	___lldiv@dividend^0,f,c
  3365  0013FC  5006               	movf	(___lldiv@divisor+1)^0,w,c
  3366  0013FE  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
  3367  001400  5007               	movf	(___lldiv@divisor+2)^0,w,c
  3368  001402  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
  3369  001404  5008               	movf	(___lldiv@divisor+3)^0,w,c
  3370  001406  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
  3371  001408  8009               	bsf	___lldiv@quotient^0,0,c
  3372  00140A                     l1973:
  3373  00140A  90D8               	bcf	status,0,c
  3374  00140C  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
  3375  00140E  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
  3376  001410  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
  3377  001412  3205               	rrcf	___lldiv@divisor^0,f,c
  3378  001414  2E0D               	decfsz	___lldiv@counter^0,f,c
  3379  001416  D7E1               	goto	u1400
  3380  001418                     l200:
  3381  001418  C009  F001         	movff	___lldiv@quotient,?___lldiv
  3382  00141C  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  3383  001420  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  3384  001424  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  3385  001428  0012               	return		;funcret
  3386  00142A                     __end_of___lldiv:
  3387                           	callstack 0
  3388                           
  3389 ;; *************** function _DS1307setTime *****************
  3390 ;; Defined at:
  3391 ;;		line 8 in file "DS1307.c"
  3392 ;; Parameters:    Size  Location     Type
  3393 ;;  hours           1    wreg     unsigned char 
  3394 ;;  minutes         1    6[COMRAM] unsigned char 
  3395 ;;  seconds         1    7[COMRAM] unsigned char 
  3396 ;;  day             1    8[COMRAM] unsigned char 
  3397 ;;  week            1    9[COMRAM] unsigned char 
  3398 ;;  month           1   10[COMRAM] unsigned char 
  3399 ;;  year            1   11[COMRAM] unsigned char 
  3400 ;; Auto vars:     Size  Location     Type
  3401 ;;  hours           1   12[COMRAM] unsigned char 
  3402 ;; Return value:  Size  Location     Type
  3403 ;;                  1    wreg      void 
  3404 ;; Registers used:
  3405 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3406 ;; Tracked objects:
  3407 ;;		On entry : 0/0
  3408 ;;		On exit  : 0/0
  3409 ;;		Unchanged: 0/0
  3410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3411 ;;      Params:         6       0       0       0       0       0       0       0       0
  3412 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3413 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3414 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3415 ;;Total ram usage:        7 bytes
  3416 ;; Hardware stack levels used:    1
  3417 ;; Hardware stack levels required when called:    2
  3418 ;; This function calls:
  3419 ;;		_I2Cdata
  3420 ;;		_I2Cstart
  3421 ;;		_I2Cstop
  3422 ;;		_I2Cwrite
  3423 ;;		_binBCD
  3424 ;; This function is called by:
  3425 ;;		_main
  3426 ;; This function uses a non-reentrant model
  3427 ;;
  3428                           
  3429                           	psect	text19
  3430  001528                     __ptext19:
  3431                           	callstack 0
  3432  001528                     _DS1307setTime:
  3433                           	callstack 28
  3434                           
  3435                           ;incstack = 0
  3436                           ;DS1307setTime@hours stored from wreg
  3437  001528  6E0D               	movwf	DS1307setTime@hours^0,c
  3438                           
  3439                           ;DS1307.c: 9:     seconds = seconds & 0x7F;
  3440  00152A  5008               	movf	DS1307setTime@seconds^0,w,c
  3441  00152C  0B7F               	andlw	127
  3442  00152E  6E08               	movwf	DS1307setTime@seconds^0,c
  3443                           
  3444                           ;DS1307.c: 10:     hours = hours & 0x3F;
  3445  001530  500D               	movf	DS1307setTime@hours^0,w,c
  3446  001532  0B3F               	andlw	63
  3447  001534  6E0D               	movwf	DS1307setTime@hours^0,c
  3448                           
  3449                           ;DS1307.c: 11:     I2Cstart();
  3450  001536  ECF4  F00B         	call	_I2Cstart	;wreg free
  3451                           
  3452                           ;DS1307.c: 12:     I2Cdata(0xD0,0x00);
  3453  00153A  0E00               	movlw	0
  3454  00153C  6E02               	movwf	I2Cdata@data^0,c
  3455  00153E  0ED0               	movlw	208
  3456  001540  ECEC  F00B         	call	_I2Cdata
  3457                           
  3458                           ;DS1307.c: 13:     I2Cwrite(binBCD(seconds));
  3459  001544  5008               	movf	DS1307setTime@seconds^0,w,c
  3460  001546  ECAB  F00B         	call	_binBCD
  3461  00154A  ECD5  F00B         	call	_I2Cwrite
  3462                           
  3463                           ;DS1307.c: 14:     I2Cwrite(binBCD(minutes));
  3464  00154E  5007               	movf	DS1307setTime@minutes^0,w,c
  3465  001550  ECAB  F00B         	call	_binBCD
  3466  001554  ECD5  F00B         	call	_I2Cwrite
  3467                           
  3468                           ;DS1307.c: 15:     I2Cwrite(binBCD(hours));
  3469  001558  500D               	movf	DS1307setTime@hours^0,w,c
  3470  00155A  ECAB  F00B         	call	_binBCD
  3471  00155E  ECD5  F00B         	call	_I2Cwrite
  3472                           
  3473                           ;DS1307.c: 16:     I2Cwrite(binBCD(day));
  3474  001562  5009               	movf	DS1307setTime@day^0,w,c
  3475  001564  ECAB  F00B         	call	_binBCD
  3476  001568  ECD5  F00B         	call	_I2Cwrite
  3477                           
  3478                           ;DS1307.c: 17:     I2Cwrite(binBCD(week));
  3479  00156C  500A               	movf	DS1307setTime@week^0,w,c
  3480  00156E  ECAB  F00B         	call	_binBCD
  3481  001572  ECD5  F00B         	call	_I2Cwrite
  3482                           
  3483                           ;DS1307.c: 18:     I2Cwrite(binBCD(month));
  3484  001576  500B               	movf	DS1307setTime@month^0,w,c
  3485  001578  ECAB  F00B         	call	_binBCD
  3486  00157C  ECD5  F00B         	call	_I2Cwrite
  3487                           
  3488                           ;DS1307.c: 19:     I2Cwrite(binBCD(year));
  3489  001580  500C               	movf	DS1307setTime@year^0,w,c
  3490  001582  ECAB  F00B         	call	_binBCD
  3491  001586  ECD5  F00B         	call	_I2Cwrite
  3492                           
  3493                           ;DS1307.c: 20:     I2Cstop();
  3494  00158A  EC09  F00C         	call	_I2Cstop	;wreg free
  3495  00158E  0012               	return		;funcret
  3496  001590                     __end_of_DS1307setTime:
  3497                           	callstack 0
  3498                           
  3499 ;; *************** function _binBCD *****************
  3500 ;; Defined at:
  3501 ;;		line 46 in file "DS1307.c"
  3502 ;; Parameters:    Size  Location     Type
  3503 ;;  bin             1    wreg     unsigned char 
  3504 ;; Auto vars:     Size  Location     Type
  3505 ;;  bin             1    5[COMRAM] unsigned char 
  3506 ;; Return value:  Size  Location     Type
  3507 ;;                  1    wreg      unsigned char 
  3508 ;; Registers used:
  3509 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3510 ;; Tracked objects:
  3511 ;;		On entry : 0/0
  3512 ;;		On exit  : 0/0
  3513 ;;		Unchanged: 0/0
  3514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3515 ;;      Params:         0       0       0       0       0       0       0       0       0
  3516 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3517 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3518 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3519 ;;Total ram usage:        2 bytes
  3520 ;; Hardware stack levels used:    1
  3521 ;; Hardware stack levels required when called:    1
  3522 ;; This function calls:
  3523 ;;		___lbdiv
  3524 ;;		___lbmod
  3525 ;; This function is called by:
  3526 ;;		_DS1307setTime
  3527 ;; This function uses a non-reentrant model
  3528 ;;
  3529                           
  3530                           	psect	text20
  3531  001756                     __ptext20:
  3532                           	callstack 0
  3533  001756                     _binBCD:
  3534                           	callstack 28
  3535                           
  3536                           ;incstack = 0
  3537                           ;binBCD@bin stored from wreg
  3538  001756  6E06               	movwf	binBCD@bin^0,c
  3539                           
  3540                           ;DS1307.c: 47:     return (((bin/10) << 4) + bin%10);
  3541  001758  0E0A               	movlw	10
  3542  00175A  6E01               	movwf	___lbmod@divisor^0,c
  3543  00175C  5006               	movf	binBCD@bin^0,w,c
  3544  00175E  EC85  F00B         	call	___lbmod
  3545  001762  6E05               	movwf	??_binBCD^0,c
  3546  001764  0E0A               	movlw	10
  3547  001766  6E01               	movwf	___lbdiv@divisor^0,c
  3548  001768  5006               	movf	binBCD@bin^0,w,c
  3549  00176A  EC1C  F00B         	call	___lbdiv
  3550  00176E  0D10               	mullw	16
  3551  001770  50F3               	movf	243,w,c
  3552  001772  2405               	addwf	??_binBCD^0,w,c
  3553  001774  0012               	return		;funcret
  3554  001776                     __end_of_binBCD:
  3555                           	callstack 0
  3556                           
  3557 ;; *************** function ___lbmod *****************
  3558 ;; Defined at:
  3559 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\lbmod.c"
  3560 ;; Parameters:    Size  Location     Type
  3561 ;;  dividend        1    wreg     unsigned char 
  3562 ;;  divisor         1    0[COMRAM] unsigned char 
  3563 ;; Auto vars:     Size  Location     Type
  3564 ;;  dividend        1    1[COMRAM] unsigned char 
  3565 ;;  rem             1    3[COMRAM] unsigned char 
  3566 ;;  counter         1    2[COMRAM] unsigned char 
  3567 ;; Return value:  Size  Location     Type
  3568 ;;                  1    wreg      unsigned char 
  3569 ;; Registers used:
  3570 ;;		wreg, status,2, status,0
  3571 ;; Tracked objects:
  3572 ;;		On entry : 0/0
  3573 ;;		On exit  : 0/0
  3574 ;;		Unchanged: 0/0
  3575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3576 ;;      Params:         1       0       0       0       0       0       0       0       0
  3577 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3578 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3579 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3580 ;;Total ram usage:        4 bytes
  3581 ;; Hardware stack levels used:    1
  3582 ;; This function calls:
  3583 ;;		Nothing
  3584 ;; This function is called by:
  3585 ;;		_binBCD
  3586 ;; This function uses a non-reentrant model
  3587 ;;
  3588                           
  3589                           	psect	text21
  3590  00170A                     __ptext21:
  3591                           	callstack 0
  3592  00170A                     ___lbmod:
  3593                           	callstack 28
  3594                           
  3595                           ;incstack = 0
  3596                           ;___lbmod@dividend stored from wreg
  3597  00170A  6E02               	movwf	___lbmod@dividend^0,c
  3598  00170C  0E08               	movlw	8
  3599  00170E  6E03               	movwf	___lbmod@counter^0,c
  3600  001710  0E00               	movlw	0
  3601  001712  6E04               	movwf	___lbmod@rem^0,c
  3602  001714                     l1807:
  3603  001714  90D8               	bcf	status,0,c
  3604  001716  3402               	rlcf	___lbmod@dividend^0,w,c
  3605  001718  3404               	rlcf	___lbmod@rem^0,w,c
  3606  00171A  6E04               	movwf	___lbmod@rem^0,c
  3607  00171C  90D8               	bcf	status,0,c
  3608  00171E  3602               	rlcf	___lbmod@dividend^0,f,c
  3609  001720  5001               	movf	___lbmod@divisor^0,w,c
  3610  001722  5C04               	subwf	___lbmod@rem^0,w,c
  3611  001724  A0D8               	btfss	status,0,c
  3612  001726  D002               	goto	l1815
  3613  001728  5001               	movf	___lbmod@divisor^0,w,c
  3614  00172A  5E04               	subwf	___lbmod@rem^0,f,c
  3615  00172C                     l1815:
  3616  00172C  2E03               	decfsz	___lbmod@counter^0,f,c
  3617  00172E  D7F2               	goto	l1807
  3618  001730  5004               	movf	___lbmod@rem^0,w,c
  3619  001732  0012               	return		;funcret
  3620  001734                     __end_of___lbmod:
  3621                           	callstack 0
  3622                           
  3623 ;; *************** function ___lbdiv *****************
  3624 ;; Defined at:
  3625 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\lbdiv.c"
  3626 ;; Parameters:    Size  Location     Type
  3627 ;;  dividend        1    wreg     unsigned char 
  3628 ;;  divisor         1    0[COMRAM] unsigned char 
  3629 ;; Auto vars:     Size  Location     Type
  3630 ;;  dividend        1    1[COMRAM] unsigned char 
  3631 ;;  quotient        1    3[COMRAM] unsigned char 
  3632 ;;  counter         1    2[COMRAM] unsigned char 
  3633 ;; Return value:  Size  Location     Type
  3634 ;;                  1    wreg      unsigned char 
  3635 ;; Registers used:
  3636 ;;		wreg, status,2, status,0
  3637 ;; Tracked objects:
  3638 ;;		On entry : 0/0
  3639 ;;		On exit  : 0/0
  3640 ;;		Unchanged: 0/0
  3641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3642 ;;      Params:         1       0       0       0       0       0       0       0       0
  3643 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3644 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3645 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3646 ;;Total ram usage:        4 bytes
  3647 ;; Hardware stack levels used:    1
  3648 ;; This function calls:
  3649 ;;		Nothing
  3650 ;; This function is called by:
  3651 ;;		_binBCD
  3652 ;; This function uses a non-reentrant model
  3653 ;;
  3654                           
  3655                           	psect	text22
  3656  001638                     __ptext22:
  3657                           	callstack 0
  3658  001638                     ___lbdiv:
  3659                           	callstack 28
  3660                           
  3661                           ;incstack = 0
  3662                           ;___lbdiv@dividend stored from wreg
  3663  001638  6E02               	movwf	___lbdiv@dividend^0,c
  3664  00163A  0E00               	movlw	0
  3665  00163C  6E04               	movwf	___lbdiv@quotient^0,c
  3666  00163E  5001               	movf	___lbdiv@divisor^0,w,c
  3667  001640  B4D8               	btfsc	status,2,c
  3668  001642  D015               	goto	l1801
  3669  001644  0E01               	movlw	1
  3670  001646  6E03               	movwf	___lbdiv@counter^0,c
  3671  001648  D003               	goto	l1789
  3672  00164A                     l1785:
  3673  00164A  90D8               	bcf	status,0,c
  3674  00164C  3601               	rlcf	___lbdiv@divisor^0,f,c
  3675  00164E  2A03               	incf	___lbdiv@counter^0,f,c
  3676  001650                     l1789:
  3677  001650  AE01               	btfss	___lbdiv@divisor^0,7,c
  3678  001652  D7FB               	goto	l1785
  3679  001654                     u1200:
  3680  001654  90D8               	bcf	status,0,c
  3681  001656  3604               	rlcf	___lbdiv@quotient^0,f,c
  3682  001658  5001               	movf	___lbdiv@divisor^0,w,c
  3683  00165A  5C02               	subwf	___lbdiv@dividend^0,w,c
  3684  00165C  A0D8               	btfss	status,0,c
  3685  00165E  D003               	goto	l1797
  3686  001660  5001               	movf	___lbdiv@divisor^0,w,c
  3687  001662  5E02               	subwf	___lbdiv@dividend^0,f,c
  3688  001664  8004               	bsf	___lbdiv@quotient^0,0,c
  3689  001666                     l1797:
  3690  001666  90D8               	bcf	status,0,c
  3691  001668  3201               	rrcf	___lbdiv@divisor^0,f,c
  3692  00166A  2E03               	decfsz	___lbdiv@counter^0,f,c
  3693  00166C  D7F3               	goto	u1200
  3694  00166E                     l1801:
  3695  00166E  5004               	movf	___lbdiv@quotient^0,w,c
  3696  001670  0012               	return		;funcret
  3697  001672                     __end_of___lbdiv:
  3698                           	callstack 0
  3699                           
  3700 ;; *************** function _DS1307read *****************
  3701 ;; Defined at:
  3702 ;;		line 23 in file "DS1307.c"
  3703 ;; Parameters:    Size  Location     Type
  3704 ;;  data            1    3[COMRAM] PTR unsigned char 
  3705 ;;		 -> main@datos(7), 
  3706 ;; Auto vars:     Size  Location     Type
  3707 ;;		None
  3708 ;; Return value:  Size  Location     Type
  3709 ;;                  1    wreg      void 
  3710 ;; Registers used:
  3711 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3712 ;; Tracked objects:
  3713 ;;		On entry : 0/0
  3714 ;;		On exit  : 0/0
  3715 ;;		Unchanged: 0/0
  3716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3717 ;;      Params:         1       0       0       0       0       0       0       0       0
  3718 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3719 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3720 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3721 ;;Total ram usage:        1 bytes
  3722 ;; Hardware stack levels used:    1
  3723 ;; Hardware stack levels required when called:    2
  3724 ;; This function calls:
  3725 ;;		_BCDbin
  3726 ;;		_I2CACK
  3727 ;;		_I2CNACK
  3728 ;;		_I2Cdata
  3729 ;;		_I2Cread
  3730 ;;		_I2Creset
  3731 ;;		_I2Cstart
  3732 ;;		_I2Cstop
  3733 ;;		_I2Cwrite
  3734 ;; This function is called by:
  3735 ;;		_main
  3736 ;; This function uses a non-reentrant model
  3737 ;;
  3738                           
  3739                           	psect	text23
  3740  001248                     __ptext23:
  3741                           	callstack 0
  3742  001248                     _DS1307read:
  3743                           	callstack 28
  3744                           
  3745                           ;DS1307.c: 24:     I2Cstart();
  3746                           
  3747                           ;incstack = 0
  3748  001248  ECF4  F00B         	call	_I2Cstart	;wreg free
  3749                           
  3750                           ;DS1307.c: 25:     I2Cdata(0xD0,0x00);
  3751  00124C  0E00               	movlw	0
  3752  00124E  6E02               	movwf	I2Cdata@data^0,c
  3753  001250  0ED0               	movlw	208
  3754  001252  ECEC  F00B         	call	_I2Cdata
  3755                           
  3756                           ;DS1307.c: 26:     I2Creset();
  3757  001256  EC0D  F00C         	call	_I2Creset	;wreg free
  3758                           
  3759                           ;DS1307.c: 27:     I2Cwrite(0xD1);
  3760  00125A  0ED1               	movlw	209
  3761  00125C  ECD5  F00B         	call	_I2Cwrite
  3762                           
  3763                           ;DS1307.c: 28:     data[0] = BCDbin(I2Cread());
  3764  001260  5004               	movf	DS1307read@data^0,w,c
  3765  001262  6ED9               	movwf	fsr2l,c
  3766  001264  6ADA               	clrf	fsr2h,c
  3767  001266  ECFA  F00B         	call	_I2Cread	;wreg free
  3768  00126A  ECE1  F00B         	call	_BCDbin
  3769  00126E  6EDF               	movwf	indf2,c
  3770                           
  3771                           ;DS1307.c: 29:     I2CACK();
  3772  001270  EC04  F00C         	call	_I2CACK	;wreg free
  3773                           
  3774                           ;DS1307.c: 30:     data[1] = BCDbin(I2Cread());
  3775  001274  5004               	movf	DS1307read@data^0,w,c
  3776  001276  6ED9               	movwf	fsr2l,c
  3777  001278  6ADA               	clrf	fsr2h,c
  3778  00127A  0E01               	movlw	1
  3779  00127C  26D9               	addwf	fsr2l,f,c
  3780  00127E  ECFA  F00B         	call	_I2Cread	;wreg free
  3781  001282  ECE1  F00B         	call	_BCDbin
  3782  001286  6EDF               	movwf	indf2,c
  3783                           
  3784                           ;DS1307.c: 31:     I2CACK();
  3785  001288  EC04  F00C         	call	_I2CACK	;wreg free
  3786                           
  3787                           ;DS1307.c: 32:     data[2] = BCDbin(I2Cread());
  3788  00128C  5004               	movf	DS1307read@data^0,w,c
  3789  00128E  6ED9               	movwf	fsr2l,c
  3790  001290  6ADA               	clrf	fsr2h,c
  3791  001292  0E02               	movlw	2
  3792  001294  26D9               	addwf	fsr2l,f,c
  3793  001296  ECFA  F00B         	call	_I2Cread	;wreg free
  3794  00129A  ECE1  F00B         	call	_BCDbin
  3795  00129E  6EDF               	movwf	indf2,c
  3796                           
  3797                           ;DS1307.c: 33:     I2CACK();
  3798  0012A0  EC04  F00C         	call	_I2CACK	;wreg free
  3799                           
  3800                           ;DS1307.c: 34:     data[3] = BCDbin(I2Cread());
  3801  0012A4  5004               	movf	DS1307read@data^0,w,c
  3802  0012A6  6ED9               	movwf	fsr2l,c
  3803  0012A8  6ADA               	clrf	fsr2h,c
  3804  0012AA  0E03               	movlw	3
  3805  0012AC  26D9               	addwf	fsr2l,f,c
  3806  0012AE  ECFA  F00B         	call	_I2Cread	;wreg free
  3807  0012B2  ECE1  F00B         	call	_BCDbin
  3808  0012B6  6EDF               	movwf	indf2,c
  3809                           
  3810                           ;DS1307.c: 35:     I2CACK();
  3811  0012B8  EC04  F00C         	call	_I2CACK	;wreg free
  3812                           
  3813                           ;DS1307.c: 36:     data[4] = BCDbin(I2Cread());
  3814  0012BC  5004               	movf	DS1307read@data^0,w,c
  3815  0012BE  6ED9               	movwf	fsr2l,c
  3816  0012C0  6ADA               	clrf	fsr2h,c
  3817  0012C2  0E04               	movlw	4
  3818  0012C4  26D9               	addwf	fsr2l,f,c
  3819  0012C6  ECFA  F00B         	call	_I2Cread	;wreg free
  3820  0012CA  ECE1  F00B         	call	_BCDbin
  3821  0012CE  6EDF               	movwf	indf2,c
  3822                           
  3823                           ;DS1307.c: 37:     I2CACK();
  3824  0012D0  EC04  F00C         	call	_I2CACK	;wreg free
  3825                           
  3826                           ;DS1307.c: 38:     data[5] = BCDbin(I2Cread());
  3827  0012D4  5004               	movf	DS1307read@data^0,w,c
  3828  0012D6  6ED9               	movwf	fsr2l,c
  3829  0012D8  6ADA               	clrf	fsr2h,c
  3830  0012DA  0E05               	movlw	5
  3831  0012DC  26D9               	addwf	fsr2l,f,c
  3832  0012DE  ECFA  F00B         	call	_I2Cread	;wreg free
  3833  0012E2  ECE1  F00B         	call	_BCDbin
  3834  0012E6  6EDF               	movwf	indf2,c
  3835                           
  3836                           ;DS1307.c: 39:     I2CACK();
  3837  0012E8  EC04  F00C         	call	_I2CACK	;wreg free
  3838                           
  3839                           ;DS1307.c: 40:     data[6] = BCDbin(I2Cread());
  3840  0012EC  5004               	movf	DS1307read@data^0,w,c
  3841  0012EE  6ED9               	movwf	fsr2l,c
  3842  0012F0  6ADA               	clrf	fsr2h,c
  3843  0012F2  0E06               	movlw	6
  3844  0012F4  26D9               	addwf	fsr2l,f,c
  3845  0012F6  ECFA  F00B         	call	_I2Cread	;wreg free
  3846  0012FA  ECE1  F00B         	call	_BCDbin
  3847  0012FE  6EDF               	movwf	indf2,c
  3848                           
  3849                           ;DS1307.c: 41:     I2CNACK();
  3850  001300  ECFF  F00B         	call	_I2CNACK	;wreg free
  3851                           
  3852                           ;DS1307.c: 42:     I2Cstop();
  3853  001304  EC09  F00C         	call	_I2Cstop	;wreg free
  3854  001308  0012               	return		;funcret
  3855  00130A                     __end_of_DS1307read:
  3856                           	callstack 0
  3857                           
  3858 ;; *************** function _I2Cstop *****************
  3859 ;; Defined at:
  3860 ;;		line 41 in file "I2C.c"
  3861 ;; Parameters:    Size  Location     Type
  3862 ;;		None
  3863 ;; Auto vars:     Size  Location     Type
  3864 ;;		None
  3865 ;; Return value:  Size  Location     Type
  3866 ;;                  1    wreg      void 
  3867 ;; Registers used:
  3868 ;;		None
  3869 ;; Tracked objects:
  3870 ;;		On entry : 0/0
  3871 ;;		On exit  : 0/0
  3872 ;;		Unchanged: 0/0
  3873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3874 ;;      Params:         0       0       0       0       0       0       0       0       0
  3875 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3876 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3877 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3878 ;;Total ram usage:        0 bytes
  3879 ;; Hardware stack levels used:    1
  3880 ;; This function calls:
  3881 ;;		Nothing
  3882 ;; This function is called by:
  3883 ;;		_DS1307setTime
  3884 ;;		_DS1307read
  3885 ;; This function uses a non-reentrant model
  3886 ;;
  3887                           
  3888                           	psect	text24
  3889  001812                     __ptext24:
  3890                           	callstack 0
  3891  001812                     _I2Cstop:
  3892                           	callstack 29
  3893                           
  3894                           ;I2C.c: 42:     SSPCON2bits.PEN = 1;
  3895                           
  3896                           ;incstack = 0
  3897  001812  84C5               	bsf	197,2,c	;volatile
  3898  001814                     l111:
  3899  001814  A4C5               	btfss	197,2,c	;volatile
  3900  001816  0012               	return	
  3901  001818  D7FD               	goto	l111
  3902  00181A                     __end_of_I2Cstop:
  3903                           	callstack 0
  3904                           
  3905 ;; *************** function _I2Cstart *****************
  3906 ;; Defined at:
  3907 ;;		line 21 in file "I2C.c"
  3908 ;; Parameters:    Size  Location     Type
  3909 ;;		None
  3910 ;; Auto vars:     Size  Location     Type
  3911 ;;		None
  3912 ;; Return value:  Size  Location     Type
  3913 ;;                  1    wreg      void 
  3914 ;; Registers used:
  3915 ;;		wreg, status,2, status,0, cstack
  3916 ;; Tracked objects:
  3917 ;;		On entry : 0/0
  3918 ;;		On exit  : 0/0
  3919 ;;		Unchanged: 0/0
  3920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3921 ;;      Params:         0       0       0       0       0       0       0       0       0
  3922 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3923 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3924 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3925 ;;Total ram usage:        0 bytes
  3926 ;; Hardware stack levels used:    1
  3927 ;; Hardware stack levels required when called:    1
  3928 ;; This function calls:
  3929 ;;		_I2Cidle
  3930 ;; This function is called by:
  3931 ;;		_DS1307setTime
  3932 ;;		_DS1307read
  3933 ;; This function uses a non-reentrant model
  3934 ;;
  3935                           
  3936                           	psect	text25
  3937  0017E8                     __ptext25:
  3938                           	callstack 0
  3939  0017E8                     _I2Cstart:
  3940                           	callstack 28
  3941                           
  3942                           ;I2C.c: 22:     I2Cidle();
  3943                           
  3944                           ;incstack = 0
  3945  0017E8  ECC8  F00B         	call	_I2Cidle	;wreg free
  3946                           
  3947                           ;I2C.c: 23:     SSPCON2bits.SEN = 1;
  3948  0017EC  80C5               	bsf	197,0,c	;volatile
  3949  0017EE                     l94:
  3950  0017EE  A0C5               	btfss	197,0,c	;volatile
  3951  0017F0  0012               	return	
  3952  0017F2  D7FD               	goto	l94
  3953  0017F4                     __end_of_I2Cstart:
  3954                           	callstack 0
  3955                           
  3956 ;; *************** function _I2Cidle *****************
  3957 ;; Defined at:
  3958 ;;		line 17 in file "I2C.c"
  3959 ;; Parameters:    Size  Location     Type
  3960 ;;		None
  3961 ;; Auto vars:     Size  Location     Type
  3962 ;;		None
  3963 ;; Return value:  Size  Location     Type
  3964 ;;                  1    wreg      void 
  3965 ;; Registers used:
  3966 ;;		wreg, status,2, status,0
  3967 ;; Tracked objects:
  3968 ;;		On entry : 0/0
  3969 ;;		On exit  : 0/0
  3970 ;;		Unchanged: 0/0
  3971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3972 ;;      Params:         0       0       0       0       0       0       0       0       0
  3973 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3974 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3975 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3976 ;;Total ram usage:        1 bytes
  3977 ;; Hardware stack levels used:    1
  3978 ;; This function calls:
  3979 ;;		Nothing
  3980 ;; This function is called by:
  3981 ;;		_I2Cstart
  3982 ;; This function uses a non-reentrant model
  3983 ;;
  3984                           
  3985                           	psect	text26
  3986  001790                     __ptext26:
  3987                           	callstack 0
  3988  001790                     _I2Cidle:
  3989                           	callstack 28
  3990                           
  3991                           ;I2C.c: 18:     while((SSPCON2 & 0x1F) | SSPSTATbits.RW);
  3992                           
  3993                           ;incstack = 0
  3994  001790  A4C7               	btfss	199,2,c	;volatile
  3995  001792  D003               	goto	u1140
  3996  001794  6A01               	clrf	??_I2Cidle^0,c
  3997  001796  2A01               	incf	??_I2Cidle^0,f,c
  3998  001798  D001               	goto	u1148
  3999  00179A                     u1140:
  4000  00179A  6A01               	clrf	??_I2Cidle^0,c
  4001  00179C                     u1148:
  4002  00179C  50C5               	movf	197,w,c	;volatile
  4003  00179E  0B1F               	andlw	31
  4004  0017A0  1001               	iorwf	??_I2Cidle^0,w,c
  4005  0017A2  0900               	iorlw	0
  4006  0017A4  B4D8               	btfsc	status,2,c
  4007  0017A6  0012               	return	
  4008  0017A8  D7F3               	goto	_I2Cidle
  4009  0017AA                     __end_of_I2Cidle:
  4010                           	callstack 0
  4011                           
  4012 ;; *************** function _I2Creset *****************
  4013 ;; Defined at:
  4014 ;;		line 46 in file "I2C.c"
  4015 ;; Parameters:    Size  Location     Type
  4016 ;;		None
  4017 ;; Auto vars:     Size  Location     Type
  4018 ;;		None
  4019 ;; Return value:  Size  Location     Type
  4020 ;;                  1    wreg      void 
  4021 ;; Registers used:
  4022 ;;		None
  4023 ;; Tracked objects:
  4024 ;;		On entry : 0/0
  4025 ;;		On exit  : 0/0
  4026 ;;		Unchanged: 0/0
  4027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4028 ;;      Params:         0       0       0       0       0       0       0       0       0
  4029 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4030 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4031 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4032 ;;Total ram usage:        0 bytes
  4033 ;; Hardware stack levels used:    1
  4034 ;; This function calls:
  4035 ;;		Nothing
  4036 ;; This function is called by:
  4037 ;;		_DS1307read
  4038 ;; This function uses a non-reentrant model
  4039 ;;
  4040                           
  4041                           	psect	text27
  4042  00181A                     __ptext27:
  4043                           	callstack 0
  4044  00181A                     _I2Creset:
  4045                           	callstack 29
  4046                           
  4047                           ;I2C.c: 47:     SSPCON2bits.RSEN = 1;
  4048                           
  4049                           ;incstack = 0
  4050  00181A  82C5               	bsf	197,1,c	;volatile
  4051  00181C                     l117:
  4052  00181C  A2C5               	btfss	197,1,c	;volatile
  4053  00181E  0012               	return	
  4054  001820  D7FD               	goto	l117
  4055  001822                     __end_of_I2Creset:
  4056                           	callstack 0
  4057                           
  4058 ;; *************** function _I2Cread *****************
  4059 ;; Defined at:
  4060 ;;		line 63 in file "I2C.c"
  4061 ;; Parameters:    Size  Location     Type
  4062 ;;		None
  4063 ;; Auto vars:     Size  Location     Type
  4064 ;;		None
  4065 ;; Return value:  Size  Location     Type
  4066 ;;                  1    wreg      unsigned char 
  4067 ;; Registers used:
  4068 ;;		wreg, status,2
  4069 ;; Tracked objects:
  4070 ;;		On entry : 0/0
  4071 ;;		On exit  : 0/0
  4072 ;;		Unchanged: 0/0
  4073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4074 ;;      Params:         0       0       0       0       0       0       0       0       0
  4075 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4076 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4077 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4078 ;;Total ram usage:        0 bytes
  4079 ;; Hardware stack levels used:    1
  4080 ;; This function calls:
  4081 ;;		Nothing
  4082 ;; This function is called by:
  4083 ;;		_DS1307read
  4084 ;; This function uses a non-reentrant model
  4085 ;;
  4086                           
  4087                           	psect	text28
  4088  0017F4                     __ptext28:
  4089                           	callstack 0
  4090  0017F4                     _I2Cread:
  4091                           	callstack 29
  4092                           
  4093                           ;I2C.c: 64:     SSPCON2bits.RCEN = 1;
  4094                           
  4095                           ;incstack = 0
  4096  0017F4  86C5               	bsf	197,3,c	;volatile
  4097  0017F6                     l135:
  4098  0017F6  A0C7               	btfss	199,0,c	;volatile
  4099  0017F8  D7FE               	goto	l135
  4100                           
  4101                           ;I2C.c: 66:     return SSPBUF;
  4102  0017FA  50C9               	movf	201,w,c	;volatile
  4103  0017FC  0012               	return		;funcret
  4104  0017FE                     __end_of_I2Cread:
  4105                           	callstack 0
  4106                           
  4107 ;; *************** function _I2Cdata *****************
  4108 ;; Defined at:
  4109 ;;		line 36 in file "I2C.c"
  4110 ;; Parameters:    Size  Location     Type
  4111 ;;  address         1    wreg     unsigned char 
  4112 ;;  data            1    1[COMRAM] unsigned char 
  4113 ;; Auto vars:     Size  Location     Type
  4114 ;;  address         1    2[COMRAM] unsigned char 
  4115 ;; Return value:  Size  Location     Type
  4116 ;;                  1    wreg      void 
  4117 ;; Registers used:
  4118 ;;		wreg, status,2, cstack
  4119 ;; Tracked objects:
  4120 ;;		On entry : 0/0
  4121 ;;		On exit  : 0/0
  4122 ;;		Unchanged: 0/0
  4123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4124 ;;      Params:         1       0       0       0       0       0       0       0       0
  4125 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4126 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4127 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4128 ;;Total ram usage:        2 bytes
  4129 ;; Hardware stack levels used:    1
  4130 ;; Hardware stack levels required when called:    1
  4131 ;; This function calls:
  4132 ;;		_I2Cwrite
  4133 ;; This function is called by:
  4134 ;;		_DS1307setTime
  4135 ;;		_DS1307read
  4136 ;; This function uses a non-reentrant model
  4137 ;;
  4138                           
  4139                           	psect	text29
  4140  0017D8                     __ptext29:
  4141                           	callstack 0
  4142  0017D8                     _I2Cdata:
  4143                           	callstack 28
  4144                           
  4145                           ;incstack = 0
  4146                           ;I2Cdata@address stored from wreg
  4147  0017D8  6E03               	movwf	I2Cdata@address^0,c
  4148                           
  4149                           ;I2C.c: 37:     I2Cwrite(address);
  4150  0017DA  5003               	movf	I2Cdata@address^0,w,c
  4151  0017DC  ECD5  F00B         	call	_I2Cwrite
  4152                           
  4153                           ;I2C.c: 38:     I2Cwrite(data);
  4154  0017E0  5002               	movf	I2Cdata@data^0,w,c
  4155  0017E2  ECD5  F00B         	call	_I2Cwrite
  4156  0017E6  0012               	return		;funcret
  4157  0017E8                     __end_of_I2Cdata:
  4158                           	callstack 0
  4159                           
  4160 ;; *************** function _I2Cwrite *****************
  4161 ;; Defined at:
  4162 ;;		line 27 in file "I2C.c"
  4163 ;; Parameters:    Size  Location     Type
  4164 ;;  data            1    wreg     unsigned char 
  4165 ;; Auto vars:     Size  Location     Type
  4166 ;;  data            1    0[COMRAM] unsigned char 
  4167 ;; Return value:  Size  Location     Type
  4168 ;;                  1    wreg      void 
  4169 ;; Registers used:
  4170 ;;		wreg
  4171 ;; Tracked objects:
  4172 ;;		On entry : 0/0
  4173 ;;		On exit  : 0/0
  4174 ;;		Unchanged: 0/0
  4175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4176 ;;      Params:         0       0       0       0       0       0       0       0       0
  4177 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4178 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4179 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4180 ;;Total ram usage:        1 bytes
  4181 ;; Hardware stack levels used:    1
  4182 ;; This function calls:
  4183 ;;		Nothing
  4184 ;; This function is called by:
  4185 ;;		_I2Cdata
  4186 ;;		_DS1307setTime
  4187 ;;		_DS1307read
  4188 ;; This function uses a non-reentrant model
  4189 ;;
  4190                           
  4191                           	psect	text30
  4192  0017AA                     __ptext30:
  4193                           	callstack 0
  4194  0017AA                     _I2Cwrite:
  4195                           	callstack 29
  4196                           
  4197                           ;incstack = 0
  4198                           ;I2Cwrite@data stored from wreg
  4199  0017AA  6E01               	movwf	I2Cwrite@data^0,c
  4200                           
  4201                           ;I2C.c: 28:     SSPBUF = data;
  4202  0017AC  C001  FFC9         	movff	I2Cwrite@data,4041	;volatile
  4203  0017B0                     l100:
  4204  0017B0  A4C7               	btfss	199,2,c	;volatile
  4205  0017B2  B0C7               	btfsc	199,0,c	;volatile
  4206  0017B4  D7FD               	goto	l100
  4207                           
  4208                           ;I2C.c: 30:     if(SSPCON2bits.ACKSTAT)
  4209  0017B6  ACC5               	btfss	197,6,c	;volatile
  4210  0017B8  D002               	goto	l103
  4211                           
  4212                           ;I2C.c: 31:         SSPCON2bits.PEN = 1;
  4213  0017BA  84C5               	bsf	197,2,c	;volatile
  4214  0017BC  0012               	return	
  4215  0017BE                     l103:
  4216                           
  4217                           ;I2C.c: 33:         SSPIF = 0;
  4218  0017BE  969E               	bcf	3998,3,c	;volatile
  4219  0017C0  0012               	return		;funcret
  4220  0017C2                     __end_of_I2Cwrite:
  4221                           	callstack 0
  4222                           
  4223 ;; *************** function _I2CNACK *****************
  4224 ;; Defined at:
  4225 ;;		line 57 in file "I2C.c"
  4226 ;; Parameters:    Size  Location     Type
  4227 ;;		None
  4228 ;; Auto vars:     Size  Location     Type
  4229 ;;		None
  4230 ;; Return value:  Size  Location     Type
  4231 ;;                  1    wreg      void 
  4232 ;; Registers used:
  4233 ;;		None
  4234 ;; Tracked objects:
  4235 ;;		On entry : 0/0
  4236 ;;		On exit  : 0/0
  4237 ;;		Unchanged: 0/0
  4238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4239 ;;      Params:         0       0       0       0       0       0       0       0       0
  4240 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4241 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4242 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4243 ;;Total ram usage:        0 bytes
  4244 ;; Hardware stack levels used:    1
  4245 ;; This function calls:
  4246 ;;		Nothing
  4247 ;; This function is called by:
  4248 ;;		_DS1307read
  4249 ;; This function uses a non-reentrant model
  4250 ;;
  4251                           
  4252                           	psect	text31
  4253  0017FE                     __ptext31:
  4254                           	callstack 0
  4255  0017FE                     _I2CNACK:
  4256                           	callstack 29
  4257                           
  4258                           ;I2C.c: 58:     SSPCON2bits.ACKDT = 1;
  4259                           
  4260                           ;incstack = 0
  4261  0017FE  8AC5               	bsf	197,5,c	;volatile
  4262                           
  4263                           ;I2C.c: 59:     SSPCON2bits.ACKEN = 1;
  4264  001800  88C5               	bsf	197,4,c	;volatile
  4265  001802                     l129:
  4266  001802  A8C5               	btfss	197,4,c	;volatile
  4267  001804  0012               	return	
  4268  001806  D7FD               	goto	l129
  4269  001808                     __end_of_I2CNACK:
  4270                           	callstack 0
  4271                           
  4272 ;; *************** function _I2CACK *****************
  4273 ;; Defined at:
  4274 ;;		line 51 in file "I2C.c"
  4275 ;; Parameters:    Size  Location     Type
  4276 ;;		None
  4277 ;; Auto vars:     Size  Location     Type
  4278 ;;		None
  4279 ;; Return value:  Size  Location     Type
  4280 ;;                  1    wreg      void 
  4281 ;; Registers used:
  4282 ;;		None
  4283 ;; Tracked objects:
  4284 ;;		On entry : 0/0
  4285 ;;		On exit  : 0/0
  4286 ;;		Unchanged: 0/0
  4287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4288 ;;      Params:         0       0       0       0       0       0       0       0       0
  4289 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4290 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4291 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4292 ;;Total ram usage:        0 bytes
  4293 ;; Hardware stack levels used:    1
  4294 ;; This function calls:
  4295 ;;		Nothing
  4296 ;; This function is called by:
  4297 ;;		_DS1307read
  4298 ;; This function uses a non-reentrant model
  4299 ;;
  4300                           
  4301                           	psect	text32
  4302  001808                     __ptext32:
  4303                           	callstack 0
  4304  001808                     _I2CACK:
  4305                           	callstack 29
  4306                           
  4307                           ;I2C.c: 52:     SSPCON2bits.ACKDT = 0;
  4308                           
  4309                           ;incstack = 0
  4310  001808  9AC5               	bcf	197,5,c	;volatile
  4311                           
  4312                           ;I2C.c: 53:     SSPCON2bits.ACKEN = 1;
  4313  00180A  88C5               	bsf	197,4,c	;volatile
  4314  00180C                     l123:
  4315  00180C  A8C5               	btfss	197,4,c	;volatile
  4316  00180E  0012               	return	
  4317  001810  D7FD               	goto	l123
  4318  001812                     __end_of_I2CACK:
  4319                           	callstack 0
  4320                           
  4321 ;; *************** function _BCDbin *****************
  4322 ;; Defined at:
  4323 ;;		line 50 in file "DS1307.c"
  4324 ;; Parameters:    Size  Location     Type
  4325 ;;  bcd             1    wreg     unsigned char 
  4326 ;; Auto vars:     Size  Location     Type
  4327 ;;  bcd             1    1[COMRAM] unsigned char 
  4328 ;; Return value:  Size  Location     Type
  4329 ;;                  1    wreg      unsigned char 
  4330 ;; Registers used:
  4331 ;;		wreg, status,2, status,0, prodl, prodh
  4332 ;; Tracked objects:
  4333 ;;		On entry : 0/0
  4334 ;;		On exit  : 0/0
  4335 ;;		Unchanged: 0/0
  4336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4337 ;;      Params:         0       0       0       0       0       0       0       0       0
  4338 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4339 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4340 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4341 ;;Total ram usage:        2 bytes
  4342 ;; Hardware stack levels used:    1
  4343 ;; This function calls:
  4344 ;;		Nothing
  4345 ;; This function is called by:
  4346 ;;		_DS1307read
  4347 ;; This function uses a non-reentrant model
  4348 ;;
  4349                           
  4350                           	psect	text33
  4351  0017C2                     __ptext33:
  4352                           	callstack 0
  4353  0017C2                     _BCDbin:
  4354                           	callstack 29
  4355                           
  4356                           ;incstack = 0
  4357                           ;BCDbin@bcd stored from wreg
  4358  0017C2  6E02               	movwf	BCDbin@bcd^0,c
  4359                           
  4360                           ;DS1307.c: 51:     return (bcd%16 + 10 * (bcd/16));
  4361  0017C4  C002  F001         	movff	BCDbin@bcd,??_BCDbin
  4362  0017C8  0E0F               	movlw	15
  4363  0017CA  1601               	andwf	??_BCDbin^0,f,c
  4364  0017CC  3802               	swapf	BCDbin@bcd^0,w,c
  4365  0017CE  0B0F               	andlw	15
  4366  0017D0  0D0A               	mullw	10
  4367  0017D2  50F3               	movf	243,w,c
  4368  0017D4  2401               	addwf	??_BCDbin^0,w,c
  4369  0017D6  0012               	return		;funcret
  4370  0017D8                     __end_of_BCDbin:
  4371                           	callstack 0
  4372                           
  4373                           	psect	rparam
  4374  0000                     
  4375                           	psect	idloc
  4376                           
  4377                           ;Config register IDLOC0 @ 0x200000
  4378                           ;	unspecified, using default values
  4379  200000                     	org	2097152
  4380  200000  FF                 	db	255
  4381                           
  4382                           ;Config register IDLOC1 @ 0x200001
  4383                           ;	unspecified, using default values
  4384  200001                     	org	2097153
  4385  200001  FF                 	db	255
  4386                           
  4387                           ;Config register IDLOC2 @ 0x200002
  4388                           ;	unspecified, using default values
  4389  200002                     	org	2097154
  4390  200002  FF                 	db	255
  4391                           
  4392                           ;Config register IDLOC3 @ 0x200003
  4393                           ;	unspecified, using default values
  4394  200003                     	org	2097155
  4395  200003  FF                 	db	255
  4396                           
  4397                           ;Config register IDLOC4 @ 0x200004
  4398                           ;	unspecified, using default values
  4399  200004                     	org	2097156
  4400  200004  FF                 	db	255
  4401                           
  4402                           ;Config register IDLOC5 @ 0x200005
  4403                           ;	unspecified, using default values
  4404  200005                     	org	2097157
  4405  200005  FF                 	db	255
  4406                           
  4407                           ;Config register IDLOC6 @ 0x200006
  4408                           ;	unspecified, using default values
  4409  200006                     	org	2097158
  4410  200006  FF                 	db	255
  4411                           
  4412                           ;Config register IDLOC7 @ 0x200007
  4413                           ;	unspecified, using default values
  4414  200007                     	org	2097159
  4415  200007  FF                 	db	255
  4416                           
  4417                           	psect	config
  4418                           
  4419                           ;Config register CONFIG1L @ 0x300000
  4420                           ;	PLL Prescaler Selection bits
  4421                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  4422                           ;	System Clock Postscaler Selection bits
  4423                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  4424                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  4425                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  4426  300000                     	org	3145728
  4427  300000  00                 	db	0
  4428                           
  4429                           ;Config register CONFIG1H @ 0x300001
  4430                           ;	Oscillator Selection bits
  4431                           ;	FOSC = INTOSC_XT, Internal oscillator, XT used by USB (INTXT)
  4432                           ;	Fail-Safe Clock Monitor Enable bit
  4433                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4434                           ;	Internal/External Oscillator Switchover bit
  4435                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4436  300001                     	org	3145729
  4437  300001  0A                 	db	10
  4438                           
  4439                           ;Config register CONFIG2L @ 0x300002
  4440                           ;	Power-up Timer Enable bit
  4441                           ;	PWRT = ON, PWRT enabled
  4442                           ;	Brown-out Reset Enable bits
  4443                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  4444                           ;	Brown-out Reset Voltage bits
  4445                           ;	BORV = 3, Minimum setting 2.05V
  4446                           ;	USB Voltage Regulator Enable bit
  4447                           ;	VREGEN = OFF, USB voltage regulator disabled
  4448  300002                     	org	3145730
  4449  300002  1E                 	db	30
  4450                           
  4451                           ;Config register CONFIG2H @ 0x300003
  4452                           ;	Watchdog Timer Enable bit
  4453                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4454                           ;	Watchdog Timer Postscale Select bits
  4455                           ;	WDTPS = 32768, 1:32768
  4456  300003                     	org	3145731
  4457  300003  1E                 	db	30
  4458                           
  4459                           ; Padding undefined space
  4460  300004                     	org	3145732
  4461  300004  FF                 	db	255
  4462                           
  4463                           ;Config register CONFIG3H @ 0x300005
  4464                           ;	CCP2 MUX bit
  4465                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  4466                           ;	PORTB A/D Enable bit
  4467                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  4468                           ;	Low-Power Timer 1 Oscillator Enable bit
  4469                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  4470                           ;	MCLR Pin Enable bit
  4471                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  4472  300005                     	org	3145733
  4473  300005  81                 	db	129
  4474                           
  4475                           ;Config register CONFIG4L @ 0x300006
  4476                           ;	Stack Full/Underflow Reset Enable bit
  4477                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4478                           ;	Single-Supply ICSP Enable bit
  4479                           ;	LVP = OFF, Single-Supply ICSP disabled
  4480                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  4481                           ;	ICPRT = OFF, ICPORT disabled
  4482                           ;	Extended Instruction Set Enable bit
  4483                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  4484                           ;	Background Debugger Enable bit
  4485                           ;	DEBUG = 0x1, unprogrammed default
  4486  300006                     	org	3145734
  4487  300006  81                 	db	129
  4488                           
  4489                           ; Padding undefined space
  4490  300007                     	org	3145735
  4491  300007  FF                 	db	255
  4492                           
  4493                           ;Config register CONFIG5L @ 0x300008
  4494                           ;	Code Protection bit
  4495                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  4496                           ;	Code Protection bit
  4497                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  4498                           ;	Code Protection bit
  4499                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  4500                           ;	Code Protection bit
  4501                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  4502  300008                     	org	3145736
  4503  300008  0F                 	db	15
  4504                           
  4505                           ;Config register CONFIG5H @ 0x300009
  4506                           ;	Boot Block Code Protection bit
  4507                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  4508                           ;	Data EEPROM Code Protection bit
  4509                           ;	CPD = OFF, Data EEPROM is not code-protected
  4510  300009                     	org	3145737
  4511  300009  C0                 	db	192
  4512                           
  4513                           ;Config register CONFIG6L @ 0x30000A
  4514                           ;	Write Protection bit
  4515                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  4516                           ;	Write Protection bit
  4517                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  4518                           ;	Write Protection bit
  4519                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  4520                           ;	Write Protection bit
  4521                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  4522  30000A                     	org	3145738
  4523  30000A  0F                 	db	15
  4524                           
  4525                           ;Config register CONFIG6H @ 0x30000B
  4526                           ;	Configuration Register Write Protection bit
  4527                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  4528                           ;	Boot Block Write Protection bit
  4529                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  4530                           ;	Data EEPROM Write Protection bit
  4531                           ;	WRTD = OFF, Data EEPROM is not write-protected
  4532  30000B                     	org	3145739
  4533  30000B  E0                 	db	224
  4534                           
  4535                           ;Config register CONFIG7L @ 0x30000C
  4536                           ;	Table Read Protection bit
  4537                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  4538                           ;	Table Read Protection bit
  4539                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  4540                           ;	Table Read Protection bit
  4541                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  4542                           ;	Table Read Protection bit
  4543                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  4544  30000C                     	org	3145740
  4545  30000C  0F                 	db	15
  4546                           
  4547                           ;Config register CONFIG7H @ 0x30000D
  4548                           ;	Boot Block Table Read Protection bit
  4549                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  4550  30000D                     	org	3145741
  4551  30000D  40                 	db	64
  4552                           tosu	equ	0xFFF
  4553                           tosh	equ	0xFFE
  4554                           tosl	equ	0xFFD
  4555                           stkptr	equ	0xFFC
  4556                           pclatu	equ	0xFFB
  4557                           pclath	equ	0xFFA
  4558                           pcl	equ	0xFF9
  4559                           tblptru	equ	0xFF8
  4560                           tblptrh	equ	0xFF7
  4561                           tblptrl	equ	0xFF6
  4562                           tablat	equ	0xFF5
  4563                           prodh	equ	0xFF4
  4564                           prodl	equ	0xFF3
  4565                           indf0	equ	0xFEF
  4566                           postinc0	equ	0xFEE
  4567                           postdec0	equ	0xFED
  4568                           preinc0	equ	0xFEC
  4569                           plusw0	equ	0xFEB
  4570                           fsr0h	equ	0xFEA
  4571                           fsr0l	equ	0xFE9
  4572                           wreg	equ	0xFE8
  4573                           indf1	equ	0xFE7
  4574                           postinc1	equ	0xFE6
  4575                           postdec1	equ	0xFE5
  4576                           preinc1	equ	0xFE4
  4577                           plusw1	equ	0xFE3
  4578                           fsr1h	equ	0xFE2
  4579                           fsr1l	equ	0xFE1
  4580                           bsr	equ	0xFE0
  4581                           indf2	equ	0xFDF
  4582                           postinc2	equ	0xFDE
  4583                           postdec2	equ	0xFDD
  4584                           preinc2	equ	0xFDC
  4585                           plusw2	equ	0xFDB
  4586                           fsr2h	equ	0xFDA
  4587                           fsr2l	equ	0xFD9
  4588                           status	equ	0xFD8

Data Sizes:
    Strings     35
    Constant    0
    Data        0
    BSS         40
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     92      94
    BANK0           160     27      65
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 7
		 -> sprintf@f(COMRAM[5]), 

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 10
		 -> main@time(BANK0[10]), main@date(BANK0[10]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 7
		 -> sprintf@f(COMRAM[5]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 7
		 -> sprintf@f(COMRAM[5]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 9
		 -> STR_2(CODE[9]), STR_1(CODE[9]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 9
		 -> STR_2(CODE[9]), STR_1(CODE[9]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 7
		 -> sprintf@f(COMRAM[5]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 7
		 -> sprintf@f(COMRAM[5]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 7
		 -> sprintf@f(COMRAM[5]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 9
		 -> STR_2(CODE[9]), STR_1(CODE[9]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 10
		 -> main@time(BANK0[10]), main@date(BANK0[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S990_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 10
		 -> main@time(BANK0[10]), main@date(BANK0[10]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 10
		 -> main@time(BANK0[10]), main@date(BANK0[10]), 

    DS1307read@data	PTR unsigned char  size(1) Largest target is 7
		 -> main@datos(BANK0[7]), 

    Lcd_Out2@buffer	PTR unsigned char  size(2) Largest target is 17
		 -> STR_3(CODE[17]), main@time(BANK0[10]), main@date(BANK0[10]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->___aodiv
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _Lcd_Out2->_Lcd_Chr_CP
    _Lcd_Out2->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _I2Cinit->___lldiv
    _DS1307setTime->_binBCD
    _binBCD->___lbdiv
    _binBCD->___lbmod
    _DS1307read->_I2Cdata
    _I2Cstart->_I2Cidle
    _I2Cdata->_I2Cwrite

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                27    27      0   10842
                                              0 BANK0     27    27      0
                         _DS1307read
                      _DS1307setTime
                            _I2Cinit
                            _Lcd_Cmd
                           _Lcd_Init
                           _Lcd_Out2
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             16     8      8    6608
                                             76 COMRAM    16     8      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             4     1      3    6105
                                             72 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           37    34      3    5751
                                             61 COMRAM    11     8      3
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    26      9    4358
                                             26 COMRAM    35    26      9
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     5      4    2709
                                             13 COMRAM     9     5      4
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               3     1      2     166
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                5     3      2    1235
                                              8 COMRAM     5     3      2
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     834
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _Lcd_Out2                                             7     4      3     989
                                              3 COMRAM     7     4      3
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Chr_CP                                           3     3      0     176
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     314
                                              3 COMRAM     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     176
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _I2Cinit                                             13     5      8     533
                                             13 COMRAM    13     5      8
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     314
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _DS1307setTime                                        7     1      6    1413
                                              6 COMRAM     7     1      6
                            _I2Cdata
                           _I2Cstart
                            _I2Cstop
                           _I2Cwrite
                             _binBCD
 ---------------------------------------------------------------------------------
 (2) _binBCD                                               2     2      0     517
                                              4 COMRAM     2     2      0
                            ___lbdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (3) ___lbmod                                              4     3      1     235
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (3) ___lbdiv                                              4     3      1     238
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) _DS1307read                                           1     0      1     514
                                              3 COMRAM     1     0      1
                             _BCDbin
                             _I2CACK
                            _I2CNACK
                            _I2Cdata
                            _I2Cread
                           _I2Creset
                           _I2Cstart
                            _I2Cstop
                           _I2Cwrite
 ---------------------------------------------------------------------------------
 (2) _I2Cstop                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2Cstart                                             0     0      0       0
                            _I2Cidle
 ---------------------------------------------------------------------------------
 (3) _I2Cidle                                              1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2Creset                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2Cread                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2Cdata                                              2     1      1     218
                                              1 COMRAM     2     1      1
                           _I2Cwrite
 ---------------------------------------------------------------------------------
 (2) _I2Cwrite                                             1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2CNACK                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2CACK                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _BCDbin                                               2     2      0      44
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DS1307read
     _BCDbin
     _I2CACK
     _I2CNACK
     _I2Cdata
       _I2Cwrite
     _I2Cread
     _I2Creset
     _I2Cstart
       _I2Cidle
     _I2Cstop
     _I2Cwrite
   _DS1307setTime
     _I2Cdata
       _I2Cwrite
     _I2Cstart
       _I2Cidle
     _I2Cstop
     _I2Cwrite
     _binBCD
       ___lbdiv
       ___lbmod
   _I2Cinit
     ___lldiv
   _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
   _Lcd_Out2
     _Lcd_Chr_CP
     _Lcd_Cmd
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _fputc
           _putch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     1B      41       5       40.6%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5C      5E       1       98.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      9F      20        0.0%
DATA                 0      0      9F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Mar 03 16:38:17 2021

            _SSPSTATbits 000FC7                       l23 10BC                       l94 17EE  
                    l100 17B0                      l103 17BE                      l111 1814  
                    l200 1418                      l123 180C                      l117 181C  
                    l135 17F6                      l129 1802                      l927 16D0  
        __end_of_I2CNACK 1808                      l891 08A0                      l878 14D0  
                    l889 0898                      u910 0D5C                      u831 0AAE  
                    u760 1436                      u850 0AE6                      u780 1478  
                    u980 16B6                      u990 084E                      _abs 16A8  
                    _pad 14AA          __end_of_I2Cdata 17E8          __end_of_I2Cidle 17AA  
                    wreg 000FE8          __end_of_I2Cinit 15F2          __end_of_I2Cread 17FE  
        __end_of_I2Cstop 181A                     ?_abs 0013                     l2021 1314  
                   l2023 131A                     l2031 1350                     l2033 1358  
                   l2025 1320                     l2019 130E                     l2037 1380  
                   l2029 1328                     l2139 11B4                     l1621 0ACE  
                   l1623 0AE2                     l1615 0AA8                     l1801 166E  
                   l1641 0B7A                     l1633 0B3E                     l1609 0A80  
                   l1713 087C                     l1731 08C8                     l1637 0B54  
                   l1661 0D44                     l1653 0D06                     l1741 09BC  
                   l1815 172C                     l1807 1714                     l1663 0D58  
                   l1575 143E                     l1727 08BA                     l1673 0DB6  
                   l1657 0D2A                     l1585 16E4                     l1593 173A  
                   l1761 0A20                     l1841 0C66                     l1595 173C  
                   l1691 14DA                     l1851 0CA0                     l1677 0DDC  
                   l1669 0DA0                     l1589 16F6                     l1685 14BA  
                   l1765 0A34                     l1695 14EE                     l1847 0C96  
                   l1785 164A                     l1961 13CA                     l1689 14C8  
                   l1857 0CB2                     l1963 13D6                     l1699 1512  
                   l1797 1666                     l1789 1650                     l1973 140A  
                   l1981 1602                     ?_pad 000E                     l1983 161C  
                   STR_1 0812                     STR_2 081B                     STR_3 0801  
                   u1000 0850                     u1100 09FE                     u1030 088E  
                   u1200 1654                     u1120 0A0A                     u1050 08B4  
                   u1140 179A                     u1060 09CA                     u1400 13DA  
                   u1080 09EC                     u1305 0E0C                     u1081 09EA  
                   u1090 09FA                     u1250 0C02                     u1315 0E28  
                   u1148 179C                     u1325 0E4A                     u1440 1378  
                   u1450 13A0                     u1275 0F30                     u1507 0E7C  
                   u1285 0F4C                     u1517 0EFA                     u1295 0F6E  
                   u1607 112E                     u1527 0F16                     u1447 136E  
                   u1617 0FA0                     u1537 105E                     u1457 1396  
                   u1475 15C0                     u1627 101E                     u1547 106E  
                   u1637 1034                     u1557 107E                     u1567 108E  
                   u1577 109E                     u1497 1230                     u1587 10AE  
                   u1597 10EC                     abs@a 0013                     _dbuf 0066  
                   _main 1152                     _dtoa 0826                     _prec 0064  
                   _nout 0060                     pad@i 0013                     pad@p 0010  
                   fsr1h 000FE2                     fsr2h 000FDA                     indf1 000FE7  
                   indf2 000FDF                     fsr1l 000FE1                     pad@w 0015  
                   fsr2l 000FD9                     prodl 000FF3                     start 0000  
       __end_of_I2Creset 1822          __end_of_Lcd_Cmd 1040         __end_of_I2Cstart 17F4  
       __end_of_I2Cwrite 17C2             ___param_bank 000000               _Lcd_Chr_CP 0DFE  
                  ??_abs 0015                    ??_pad 0012           Lcd_Out2@buffer 0005  
        __end_of___aodiv 0B9C                    ?_main 0001                    ?_dtoa 001B  
        __end_of___aomod 0DFE          __end_of___lbdiv 1672          __end_of___lbmod 1734  
        __end_of___lldiv 142A            _DS1307setTime 1528             vfpfcnvrt@fmt 003F  
                  _SSPIF 007CF3                    _flags 005D                    _fputc 142A  
                  _fputs 16DA                    pad@fp 000E                    _width 0062  
                  _putch 1822                    dtoa@d 001C                    dtoa@i 003C  
                  dtoa@n 0034                    dtoa@p 002E                    dtoa@s 0032  
                  dtoa@w 0030                    tablat 000FF5                    status 000FD8  
        __end_of_sprintf 16A8          ___lbdiv@divisor 0001          ___lbdiv@counter 0003  
       __end_of_Lcd_Init 1152         __end_of_Lcd_Out2 13A8          __initialization 1776  
           __end_of_main 1248             __end_of_dtoa 0A54                ??_I2CNACK 0001  
              ??_I2Cdata 0003                ??_I2Cidle 0001                ??_I2Cinit 0016  
              ??_I2Cread 0001                ??_I2Cstop 0001                   ??_main 005D  
                 ??_dtoa 0024           ?_DS1307setTime 0007            __activetblptr 000002  
           ??_DS1307read 0005                   _I2CACK 1808                   ?_fputc 0001  
                 ?_fputs 0009                   _BCDbin 17C2                   ?_putch 0001  
              ??_Lcd_Cmd 0001                   _SSPADD 000FC8                   _SSPBUF 000FC9  
              BCDbin@bcd 0002             vfprintf@cfmt 004C       __end_of_DS1307read 130A  
                 _binBCD 1756              ?_Lcd_Chr_CP 0001                ??___aodiv 0011  
              ??___aomod 0011                ??___lbdiv 0002                ??___lbmod 0002  
              ??___lldiv 0009        DS1307setTime@week 000A        DS1307setTime@year 000C  
                 clear_0 177C                   pad@buf 000F                   dtoa@fp 001B  
                 _strlen 1734                   fputc@c 0001                   fputs@c 000B  
                 fputs@i 000C                   fputs@s 0009             __mediumconst 0000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
              ?_I2Creset 0001                   putch@c 0001                ?_I2Cstart 0001  
       __end_of_vfprintf 1638                ?_I2Cwrite 0001                ??_sprintf 0055  
       ___lbdiv@dividend 0002          ___lbmod@divisor 0001               __accesstop 0060  
__end_of__initialization 1786          ___lbmod@counter 0003            ___rparam_used 000001  
         __pcstackCOMRAM 0001            __end_of_fputc 14AA            __end_of_fputs 170A  
        ??_DS1307setTime 000D            __end_of_putch 1824         ___lbdiv@quotient 0004  
             ??_I2Creset 0001                ?_Lcd_Init 0001                ?_Lcd_Out2 0004  
                ?_I2CACK 0001               ??_I2Cstart 0002               ??_I2Cwrite 0001  
                ??_fputc 0004                  ??_fputs 000B                  ?_BCDbin 0001  
    __size_of_Lcd_Chr_CP 0124                  ??_putch 0001               __pbssBANK0 0060  
                ?_binBCD 0001                  _I2CNACK 17FE                  _I2Cdata 17D8  
                _I2Cidle 1790                  _I2Cinit 1590                  _I2Cread 17F4  
                _I2Cstop 1812                  ?_strlen 0001       __size_of_vfpfcnvrt 013E  
             ??_Lcd_Init 0004               ??_Lcd_Out2 0007          __size_of_I2CACK 000A  
                _SSPCON2 000FC5          __size_of_BCDbin 0016                  _Lcd_Cmd 0F22  
                __Hparam 0000                  __Lparam 0000                  ___aodiv 0A54  
                ___aomod 0CDA          __size_of_binBCD 0020                  ___lbdiv 1638  
                ___lbmod 170A                  ___lldiv 13A8                ?_vfprintf 0049  
           __psmallconst 0800                  __pcinit 1776                  __ramtop 0800  
                __ptext0 1152                  __ptext1 1672                  __ptext2 15F2  
                __ptext3 0B9C                  __ptext4 0826                  __ptext5 14AA  
                __ptext6 1734                  __ptext7 16DA                  __ptext8 142A  
                __ptext9 1822          __size_of_strlen 0022             __size_of_abs 0032  
     DS1307setTime@hours 000D             __size_of_pad 007E       DS1307setTime@month 000B  
                _sprintf 1672     end_of_initialization 1786                  fputc@fp 0003  
          __Lmediumconst 0000                  fputs@fp 000A          ___lldiv@divisor 0005  
        ___lldiv@counter 000D        __end_of_vfpfcnvrt 0CDA             ??_Lcd_Chr_CP 0001  
              Lcd_Out2@x 0004                Lcd_Out2@y 0009                  postdec2 000FDD  
                postinc0 000FEE                  postinc1 000FE6                  postinc2 000FDE  
             ??_vfprintf 004C                  strlen@a 0003                  strlen@s 0001  
       ___lbmod@dividend 0002                _TRISBbits 000F93                _TRISDbits 000F95  
         __end_of_I2CACK 1812        __size_of_I2Creset 0008       __end_of_Lcd_Chr_CP 0F22  
      __size_of_I2Cstart 000C        __size_of_I2Cwrite 0018           __end_of_BCDbin 17D8  
            ___lbmod@rem 0004           __end_of_binBCD 1776              vfpfcnvrt@ap 0040  
            vfpfcnvrt@fp 003E              vfpfcnvrt@ll 0041             I2Cinit@clock 0012  
         __end_of_strlen 1756             I2Cinit@speed 001A      start_initialization 1776  
            __end_of_abs 16DA              __end_of_pad 1528                 ??_I2CACK 0001  
               ??_BCDbin 0001        __size_of_Lcd_Init 0112        __size_of_Lcd_Out2 009E  
            vfprintf@fmt 004A                 ??_binBCD 0005         DS1307setTime@day 0009  
               ?_I2CNACK 0001                 ?_I2Cdata 0002                 ?_I2Cidle 0001  
               ?_I2Cinit 000E                 ?_I2Cread 0001                 ?_I2Cstop 0001  
  __end_of_DS1307setTime 1590                 ??_strlen 0003              __pbssCOMRAM 005D  
          __pcstackBANK0 0086         ___aodiv@dividend 0001                 ?_Lcd_Cmd 0001  
              binBCD@bin 0006                _dtoa$1063 002C                 ?___aodiv 0001  
               ?___aomod 0001                 ?___lbdiv 0001         ___aodiv@quotient 0013  
               ?___lbmod 0001                 ?___lldiv 0001        __size_of_vfprintf 0046  
            __smallconst 0800             I2Cwrite@data 0001                 _I2Creset 181A  
               _I2Cstart 17E8                 _I2Cwrite 17AA                 ?_sprintf 004D  
   DS1307setTime@minutes 0007     DS1307setTime@seconds 0008           __size_of_fputc 0080  
         __size_of_fputs 0030           __size_of_putch 0002                 _LATDbits 000F8C  
            I2Cdata@data 0002         __size_of_I2CNACK 000A                _vfpfcnvrt 0B9C  
           Lcd_Init@data 0005         __size_of_I2Cdata 0010         __size_of_I2Cidle 001A  
       __size_of_I2Cinit 0062         __size_of_I2Cread 000A         __size_of_I2Cstop 0008  
              main@datos 009A               _DS1307read 1248             Lcd_Out2@data 000A  
               _Lcd_Init 1040                 _Lcd_Out2 130A              I2Cinit@FCPU 000E  
       __size_of_Lcd_Cmd 011E                 __Hrparam 0000               vfprintf@ap 004B  
               __Lrparam 0000               vfprintf@fp 0049         __size_of___aodiv 0148  
       __size_of___aomod 0124         __size_of___lbdiv 003A         __size_of___lbmod 002A  
       __size_of___lldiv 0082               ?_vfpfcnvrt 003E          ___aodiv@divisor 0009  
        ___aodiv@counter 0011               sprintf@fmt 004E           Lcd_Chr_CP@data 0003  
               __ptext10 16A8                 __ptext11 0CDA                 __ptext20 1756  
               __ptext12 0A54                 __ptext21 170A                 __ptext13 130A  
               __ptext30 17AA                 __ptext22 1638                 __ptext14 0DFE  
               __ptext31 17FE                 __ptext23 1248                 __ptext15 1040  
               __ptext32 1808                 __ptext24 1812                 __ptext16 0F22  
               __ptext33 17C2                 __ptext25 17E8                 __ptext17 1590  
               __ptext26 1790                 __ptext18 13A8                 __ptext27 181A  
               __ptext19 1528                 __ptext28 17F4                 __ptext29 17D8  
       __size_of_sprintf 0036           I2Cdata@address 0003              Lcd_Cmd@data 0003  
          __size_of_main 00F6            __size_of_dtoa 022E           DS1307read@data 0004  
               _vfprintf 15F2                 main@date 0086                 main@time 0090  
       ___aomod@dividend 0001              ?_DS1307read 0004                sprintf@ap 0057  
       ___lldiv@dividend 0001               _OSCCONbits 000FD3          ___aomod@divisor 0009  
            ??_vfpfcnvrt 0041          ___aomod@counter 0011                 sprintf@f 0058  
               sprintf@s 004D         ___lldiv@quotient 0009              _SSPCON1bits 000FC6  
            _SSPCON2bits 000FC5             ___aodiv@sign 0012   __size_of_DS1307setTime 0068  
           ___aomod@sign 0012      __size_of_DS1307read 00C2  
