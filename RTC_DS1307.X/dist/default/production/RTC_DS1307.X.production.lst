

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Apr 11 20:56:10 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    46                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    47                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    48                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    49  0000                     
    50                           ; Version 2.20
    51                           ; Generated 12/02/2020 GMT
    52                           ; 
    53                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    54                           ; All rights reserved.
    55                           ; 
    56                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    57                           ; 
    58                           ; Redistribution and use in source and binary forms, with or without modification, are
    59                           ; permitted provided that the following conditions are met:
    60                           ; 
    61                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    62                           ;        conditions and the following disclaimer.
    63                           ; 
    64                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    65                           ;        of conditions and the following disclaimer in the documentation and/or other
    66                           ;        materials provided with the distribution.
    67                           ; 
    68                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    69                           ;        software without specific prior written permission.
    70                           ; 
    71                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    72                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    73                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    74                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    75                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    76                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    77                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    78                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    79                           ; 
    80                           ; 
    81                           ; Code-generator required, PIC18F4550 Definitions
    82                           ; 
    83                           ; SFR Addresses
    84  0000                     _SSPBUF	set	4041
    85  0000                     _SSPCON2bits	set	4037
    86  0000                     _SSPCON2	set	4037
    87  0000                     _SSPADD	set	4040
    88  0000                     _SSPCON1bits	set	4038
    89  0000                     _SSPSTATbits	set	4039
    90  0000                     _TRISBbits	set	3987
    91  0000                     _OSCCONbits	set	4051
    92  0000                     _LATDbits	set	3980
    93  0000                     _TRISDbits	set	3989
    94  0000                     _SSPIF	set	31987
    95                           
    96                           	psect	smallconst
    97  000800                     __psmallconst:
    98                           	callstack 0
    99  000800  00                 	db	0
   100  000801                     STR_3:
   101  000801  52                 	db	82	;'R'
   102  000802  65                 	db	101	;'e'
   103  000803  6C                 	db	108	;'l'
   104  000804  6F                 	db	111	;'o'
   105  000805  6A                 	db	106	;'j'
   106  000806  20                 	db	32
   107  000807  52                 	db	82	;'R'
   108  000808  54                 	db	84	;'T'
   109  000809  43                 	db	67	;'C'
   110  00080A  20                 	db	32
   111  00080B  44                 	db	68	;'D'
   112  00080C  53                 	db	83	;'S'
   113  00080D  31                 	db	49	;'1'
   114  00080E  33                 	db	51	;'3'
   115  00080F  30                 	db	48	;'0'
   116  000810  37                 	db	55	;'7'
   117  000811  00                 	db	0
   118  000812                     STR_1:
   119  000812  25                 	db	37
   120  000813  64                 	db	100	;'d'
   121  000814  2F                 	db	47
   122  000815  4F                 	db	79	;'O'
   123  000816  63                 	db	99	;'c'
   124  000817  74                 	db	116	;'t'
   125  000818  75                 	db	117	;'u'
   126  000819  62                 	db	98	;'b'
   127  00081A  72                 	db	114	;'r'
   128  00081B  65                 	db	101	;'e'
   129  00081C  2F                 	db	47
   130  00081D  32                 	db	50	;'2'
   131  00081E  30                 	db	48	;'0'
   132  00081F  31                 	db	49	;'1'
   133  000820  38                 	db	56	;'8'
   134  000821  00                 	db	0
   135  000822                     STR_2:
   136  000822  25                 	db	37
   137  000823  64                 	db	100	;'d'
   138  000824  3A                 	db	58	;':'
   139  000825  25                 	db	37
   140  000826  64                 	db	100	;'d'
   141  000827  3A                 	db	58	;':'
   142  000828  25                 	db	37
   143  000829  64                 	db	100	;'d'
   144  00082A  00                 	db	0
   145  00082B  00                 	db	0	; dummy byte at the end
   146  0000                     
   147                           ; #config settings
   148                           
   149                           	psect	cinit
   150  001760                     __pcinit:
   151                           	callstack 0
   152  001760                     start_initialization:
   153                           	callstack 0
   154  001760                     __initialization:
   155                           	callstack 0
   156                           
   157                           ; Clear objects allocated to BANK0 (38 bytes)
   158  001760  EE00  F060         	lfsr	0,__pbssBANK0
   159  001764  0E26               	movlw	38
   160  001766                     clear_0:
   161  001766  6AEE               	clrf	postinc0,c
   162  001768  06E8               	decf	wreg,f,c
   163  00176A  E1FD               	bnz	clear_0
   164                           
   165                           ; Clear objects allocated to COMRAM (2 bytes)
   166  00176C  6A5E               	clrf	(__pbssCOMRAM+1)& (0+255),c
   167  00176E  6A5D               	clrf	__pbssCOMRAM& (0+255),c
   168  001770                     end_of_initialization:
   169                           	callstack 0
   170  001770                     __end_of__initialization:
   171                           	callstack 0
   172  001770  0E00               	movlw	low (__Lmediumconst shr (0+16))
   173  001772  6EF8               	movwf	tblptru,c
   174  001774  0100               	movlb	0
   175  001776  EFAC  F008         	goto	_main	;jump to C main() function
   176                           
   177                           	psect	bssCOMRAM
   178  00005D                     __pbssCOMRAM:
   179                           	callstack 0
   180  00005D                     _flags:
   181                           	callstack 0
   182  00005D                     	ds	2
   183                           
   184                           	psect	bssBANK0
   185  000060                     __pbssBANK0:
   186                           	callstack 0
   187  000060                     _nout:
   188                           	callstack 0
   189  000060                     	ds	2
   190  000062                     _width:
   191                           	callstack 0
   192  000062                     	ds	2
   193  000064                     _prec:
   194                           	callstack 0
   195  000064                     	ds	2
   196  000066                     _dbuf:
   197                           	callstack 0
   198  000066                     	ds	32
   199                           
   200                           	psect	cstackBANK0
   201  000086                     __pcstackBANK0:
   202                           	callstack 0
   203  000086                     main@date:
   204                           	callstack 0
   205                           
   206                           ; 20 bytes @ 0x0
   207  000086                     	ds	20
   208  00009A                     main@time:
   209                           	callstack 0
   210                           
   211                           ; 10 bytes @ 0x14
   212  00009A                     	ds	10
   213  0000A4                     main@datos:
   214                           	callstack 0
   215                           
   216                           ; 7 bytes @ 0x1E
   217  0000A4                     	ds	7
   218                           
   219                           	psect	cstackCOMRAM
   220  000001                     __pcstackCOMRAM:
   221                           	callstack 0
   222  000001                     ??_Lcd_Cmd:
   223  000001                     ??_Lcd_Chr_CP:
   224  000001                     ??_BCDbin:
   225  000001                     ??_I2Cidle:
   226  000001                     ?_strlen:
   227                           	callstack 0
   228  000001                     ?___lldiv:
   229                           	callstack 0
   230  000001                     ?___aodiv:
   231                           	callstack 0
   232  000001                     ?___aomod:
   233                           	callstack 0
   234  000001                     I2Cwrite@data:
   235                           	callstack 0
   236  000001                     ___lbdiv@divisor:
   237                           	callstack 0
   238  000001                     ___lbmod@divisor:
   239                           	callstack 0
   240  000001                     strlen@s:
   241                           	callstack 0
   242  000001                     fputc@c:
   243                           	callstack 0
   244  000001                     ___lldiv@dividend:
   245                           	callstack 0
   246  000001                     ___aodiv@dividend:
   247                           	callstack 0
   248  000001                     ___aomod@dividend:
   249                           	callstack 0
   250                           
   251                           ; 8 bytes @ 0x0
   252  000001                     	ds	1
   253  000002                     I2Cdata@data:
   254                           	callstack 0
   255  000002                     BCDbin@bcd:
   256                           	callstack 0
   257  000002                     ___lbdiv@dividend:
   258                           	callstack 0
   259  000002                     ___lbmod@dividend:
   260                           	callstack 0
   261                           
   262                           ; 1 bytes @ 0x1
   263  000002                     	ds	1
   264  000003                     Lcd_Chr_CP@data:
   265                           	callstack 0
   266  000003                     Lcd_Cmd@data:
   267                           	callstack 0
   268  000003                     I2Cdata@address:
   269                           	callstack 0
   270  000003                     ___lbdiv@counter:
   271                           	callstack 0
   272  000003                     ___lbmod@counter:
   273                           	callstack 0
   274  000003                     fputc@fp:
   275                           	callstack 0
   276  000003                     strlen@a:
   277                           	callstack 0
   278                           
   279                           ; 1 bytes @ 0x2
   280  000003                     	ds	1
   281  000004                     ??_fputc:
   282  000004                     ??_Lcd_Init:
   283  000004                     Lcd_Out2@x:
   284                           	callstack 0
   285  000004                     DS1307read@data:
   286                           	callstack 0
   287  000004                     ___lbdiv@quotient:
   288                           	callstack 0
   289  000004                     ___lbmod@rem:
   290                           	callstack 0
   291                           
   292                           ; 1 bytes @ 0x3
   293  000004                     	ds	1
   294  000005                     ??_binBCD:
   295  000005                     Lcd_Init@data:
   296                           	callstack 0
   297  000005                     Lcd_Out2@buffer:
   298                           	callstack 0
   299  000005                     ___lldiv@divisor:
   300                           	callstack 0
   301                           
   302                           ; 4 bytes @ 0x4
   303  000005                     	ds	1
   304  000006                     binBCD@bin:
   305                           	callstack 0
   306                           
   307                           ; 1 bytes @ 0x5
   308  000006                     	ds	1
   309  000007                     ??_Lcd_Out2:
   310  000007                     DS1307setTime@minutes:
   311                           	callstack 0
   312                           
   313                           ; 1 bytes @ 0x6
   314  000007                     	ds	1
   315  000008                     DS1307setTime@seconds:
   316                           	callstack 0
   317                           
   318                           ; 1 bytes @ 0x7
   319  000008                     	ds	1
   320  000009                     Lcd_Out2@y:
   321                           	callstack 0
   322  000009                     DS1307setTime@day:
   323                           	callstack 0
   324  000009                     fputs@s:
   325                           	callstack 0
   326  000009                     ___lldiv@quotient:
   327                           	callstack 0
   328  000009                     ___aodiv@divisor:
   329                           	callstack 0
   330  000009                     ___aomod@divisor:
   331                           	callstack 0
   332                           
   333                           ; 8 bytes @ 0x8
   334  000009                     	ds	1
   335  00000A                     Lcd_Out2@data:
   336                           	callstack 0
   337  00000A                     DS1307setTime@week:
   338                           	callstack 0
   339  00000A                     fputs@fp:
   340                           	callstack 0
   341                           
   342                           ; 1 bytes @ 0x9
   343  00000A                     	ds	1
   344  00000B                     DS1307setTime@month:
   345                           	callstack 0
   346  00000B                     fputs@c:
   347                           	callstack 0
   348                           
   349                           ; 1 bytes @ 0xA
   350  00000B                     	ds	1
   351  00000C                     DS1307setTime@year:
   352                           	callstack 0
   353  00000C                     fputs@i:
   354                           	callstack 0
   355                           
   356                           ; 2 bytes @ 0xB
   357  00000C                     	ds	1
   358  00000D                     DS1307setTime@hours:
   359                           	callstack 0
   360  00000D                     ___lldiv@counter:
   361                           	callstack 0
   362                           
   363                           ; 1 bytes @ 0xC
   364  00000D                     	ds	1
   365  00000E                     ?_pad:
   366                           	callstack 0
   367  00000E                     pad@fp:
   368                           	callstack 0
   369  00000E                     I2Cinit@FCPU:
   370                           	callstack 0
   371                           
   372                           ; 4 bytes @ 0xD
   373  00000E                     	ds	1
   374  00000F                     pad@buf:
   375                           	callstack 0
   376                           
   377                           ; 1 bytes @ 0xE
   378  00000F                     	ds	1
   379  000010                     pad@p:
   380                           	callstack 0
   381                           
   382                           ; 2 bytes @ 0xF
   383  000010                     	ds	1
   384  000011                     ___aodiv@counter:
   385                           	callstack 0
   386  000011                     ___aomod@counter:
   387                           	callstack 0
   388                           
   389                           ; 1 bytes @ 0x10
   390  000011                     	ds	1
   391  000012                     ??_pad:
   392  000012                     ___aodiv@sign:
   393                           	callstack 0
   394  000012                     ___aomod@sign:
   395                           	callstack 0
   396  000012                     I2Cinit@clock:
   397                           	callstack 0
   398                           
   399                           ; 4 bytes @ 0x11
   400  000012                     	ds	1
   401  000013                     ?_abs:
   402                           	callstack 0
   403  000013                     pad@i:
   404                           	callstack 0
   405  000013                     abs@a:
   406                           	callstack 0
   407  000013                     ___aodiv@quotient:
   408                           	callstack 0
   409                           
   410                           ; 8 bytes @ 0x12
   411  000013                     	ds	2
   412  000015                     ??_abs:
   413  000015                     pad@w:
   414                           	callstack 0
   415                           
   416                           ; 2 bytes @ 0x14
   417  000015                     	ds	1
   418  000016                     ??_I2Cinit:
   419                           
   420                           ; 1 bytes @ 0x15
   421  000016                     	ds	4
   422  00001A                     I2Cinit@speed:
   423                           	callstack 0
   424                           
   425                           ; 1 bytes @ 0x19
   426  00001A                     	ds	1
   427  00001B                     ?_dtoa:
   428                           	callstack 0
   429  00001B                     dtoa@fp:
   430                           	callstack 0
   431                           
   432                           ; 1 bytes @ 0x1A
   433  00001B                     	ds	1
   434  00001C                     dtoa@d:
   435                           	callstack 0
   436                           
   437                           ; 8 bytes @ 0x1B
   438  00001C                     	ds	8
   439  000024                     ??_dtoa:
   440                           
   441                           ; 1 bytes @ 0x23
   442  000024                     	ds	8
   443  00002C                     _dtoa$1063:
   444                           	callstack 0
   445                           
   446                           ; 2 bytes @ 0x2B
   447  00002C                     	ds	2
   448  00002E                     dtoa@p:
   449                           	callstack 0
   450                           
   451                           ; 2 bytes @ 0x2D
   452  00002E                     	ds	2
   453  000030                     dtoa@w:
   454                           	callstack 0
   455                           
   456                           ; 2 bytes @ 0x2F
   457  000030                     	ds	2
   458  000032                     dtoa@s:
   459                           	callstack 0
   460                           
   461                           ; 2 bytes @ 0x31
   462  000032                     	ds	2
   463  000034                     dtoa@n:
   464                           	callstack 0
   465                           
   466                           ; 8 bytes @ 0x33
   467  000034                     	ds	8
   468  00003C                     dtoa@i:
   469                           	callstack 0
   470                           
   471                           ; 2 bytes @ 0x3B
   472  00003C                     	ds	2
   473  00003E                     ?_vfpfcnvrt:
   474                           	callstack 0
   475  00003E                     vfpfcnvrt@fp:
   476                           	callstack 0
   477                           
   478                           ; 1 bytes @ 0x3D
   479  00003E                     	ds	1
   480  00003F                     vfpfcnvrt@fmt:
   481                           	callstack 0
   482                           
   483                           ; 1 bytes @ 0x3E
   484  00003F                     	ds	1
   485  000040                     vfpfcnvrt@ap:
   486                           	callstack 0
   487                           
   488                           ; 1 bytes @ 0x3F
   489  000040                     	ds	1
   490  000041                     vfpfcnvrt@ll:
   491                           	callstack 0
   492                           
   493                           ; 8 bytes @ 0x40
   494  000041                     	ds	8
   495  000049                     ?_vfprintf:
   496                           	callstack 0
   497  000049                     vfprintf@fp:
   498                           	callstack 0
   499                           
   500                           ; 1 bytes @ 0x48
   501  000049                     	ds	1
   502  00004A                     vfprintf@fmt:
   503                           	callstack 0
   504                           
   505                           ; 1 bytes @ 0x49
   506  00004A                     	ds	1
   507  00004B                     vfprintf@ap:
   508                           	callstack 0
   509                           
   510                           ; 1 bytes @ 0x4A
   511  00004B                     	ds	1
   512  00004C                     vfprintf@cfmt:
   513                           	callstack 0
   514                           
   515                           ; 1 bytes @ 0x4B
   516  00004C                     	ds	1
   517  00004D                     ?_sprintf:
   518                           	callstack 0
   519  00004D                     sprintf@s:
   520                           	callstack 0
   521                           
   522                           ; 1 bytes @ 0x4C
   523  00004D                     	ds	1
   524  00004E                     sprintf@fmt:
   525                           	callstack 0
   526                           
   527                           ; 1 bytes @ 0x4D
   528  00004E                     	ds	7
   529  000055                     
   530                           ; 1 bytes @ 0x54
   531  000055                     	ds	2
   532  000057                     sprintf@ap:
   533                           	callstack 0
   534                           
   535                           ; 1 bytes @ 0x56
   536  000057                     	ds	1
   537  000058                     sprintf@f:
   538                           	callstack 0
   539                           
   540                           ; 5 bytes @ 0x57
   541  000058                     	ds	5
   542  00005D                     
   543                           ; 1 bytes @ 0x5C
   544 ;;
   545 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   546 ;;
   547 ;; *************** function _main *****************
   548 ;; Defined at:
   549 ;;		line 11 in file "Main.c"
   550 ;; Parameters:    Size  Location     Type
   551 ;;		None
   552 ;; Auto vars:     Size  Location     Type
   553 ;;  date           20    0[BANK0 ] unsigned char [20]
   554 ;;  time           10   20[BANK0 ] unsigned char [10]
   555 ;;  datos           7   30[BANK0 ] unsigned char [7]
   556 ;; Return value:  Size  Location     Type
   557 ;;                  1    wreg      void 
   558 ;; Registers used:
   559 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   560 ;; Tracked objects:
   561 ;;		On entry : 0/0
   562 ;;		On exit  : 0/0
   563 ;;		Unchanged: 0/0
   564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   565 ;;      Params:         0       0       0       0       0       0       0       0       0
   566 ;;      Locals:         0      37       0       0       0       0       0       0       0
   567 ;;      Temps:          0       0       0       0       0       0       0       0       0
   568 ;;      Totals:         0      37       0       0       0       0       0       0       0
   569 ;;Total ram usage:       37 bytes
   570 ;; Hardware stack levels required when called:    8
   571 ;; This function calls:
   572 ;;		_DS1307read
   573 ;;		_DS1307setTime
   574 ;;		_I2Cinit
   575 ;;		_Lcd_Cmd
   576 ;;		_Lcd_Init
   577 ;;		_Lcd_Out2
   578 ;;		_sprintf
   579 ;; This function is called by:
   580 ;;		Startup code after reset
   581 ;; This function uses a non-reentrant model
   582 ;;
   583                           
   584                           	psect	text0
   585  001158                     __ptext0:
   586                           	callstack 0
   587  001158                     _main:
   588                           	callstack 23
   589                           
   590                           ;Main.c: 12:     OSCCONbits.SCS = 0x02;
   591                           
   592                           ;incstack = 0
   593  001158  50D3               	movf	211,w,c	;volatile
   594  00115A  0BFC               	andlw	-4
   595  00115C  0902               	iorlw	2
   596  00115E  6ED3               	movwf	211,c	;volatile
   597                           
   598                           ;Main.c: 13:     OSCCONbits.IRCF = 0x06;
   599  001160  50D3               	movf	211,w,c	;volatile
   600  001162  0B8F               	andlw	-113
   601  001164  0960               	iorlw	96
   602  001166  6ED3               	movwf	211,c	;volatile
   603                           
   604                           ;Main.c: 14:     uint8_t datos[7];;Main.c: 15:     unsigned char date[20];;Main.c: 16:  
      +                             unsigned char time[10];;Main.c: 18:     I2Cinit(4000000,100000);
   605  001168  0E00               	movlw	0
   606  00116A  6E0E               	movwf	I2Cinit@FCPU^0,c
   607  00116C  0E09               	movlw	9
   608  00116E  6E0F               	movwf	(I2Cinit@FCPU+1)^0,c
   609  001170  0E3D               	movlw	61
   610  001172  6E10               	movwf	(I2Cinit@FCPU+2)^0,c
   611  001174  0E00               	movlw	0
   612  001176  6E11               	movwf	(I2Cinit@FCPU+3)^0,c
   613  001178  0EA0               	movlw	160
   614  00117A  6E12               	movwf	I2Cinit@clock^0,c
   615  00117C  0E86               	movlw	134
   616  00117E  6E13               	movwf	(I2Cinit@clock+1)^0,c
   617  001180  0E01               	movlw	1
   618  001182  6E14               	movwf	(I2Cinit@clock+2)^0,c
   619  001184  0E00               	movlw	0
   620  001186  6E15               	movwf	(I2Cinit@clock+3)^0,c
   621  001188  ECBD  F00A         	call	_I2Cinit	;wreg free
   622                           
   623                           ;Main.c: 19:     Lcd_Init();
   624  00118C  EC23  F008         	call	_Lcd_Init	;wreg free
   625                           
   626                           ;Main.c: 20:     Lcd_Cmd(1);
   627  001190  0E01               	movlw	1
   628  001192  EC94  F007         	call	_Lcd_Cmd
   629                           
   630                           ;Main.c: 21:     Lcd_Cmd(12);
   631  001196  0E0C               	movlw	12
   632  001198  EC94  F007         	call	_Lcd_Cmd
   633                           
   634                           ;Main.c: 23:     DS1307setTime(13,53,0,1,5,10,18);
   635  00119C  0E35               	movlw	53
   636  00119E  6E07               	movwf	DS1307setTime@minutes^0,c
   637  0011A0  0E00               	movlw	0
   638  0011A2  6E08               	movwf	DS1307setTime@seconds^0,c
   639  0011A4  0E01               	movlw	1
   640  0011A6  6E09               	movwf	DS1307setTime@day^0,c
   641  0011A8  0E05               	movlw	5
   642  0011AA  6E0A               	movwf	DS1307setTime@week^0,c
   643  0011AC  0E0A               	movlw	10
   644  0011AE  6E0B               	movwf	DS1307setTime@month^0,c
   645  0011B0  0E12               	movlw	18
   646  0011B2  6E0C               	movwf	DS1307setTime@year^0,c
   647  0011B4  0E0D               	movlw	13
   648  0011B6  EC89  F00A         	call	_DS1307setTime
   649  0011BA                     l2118:
   650                           
   651                           ;Main.c: 26:         DS1307read(datos);
   652  0011BA  0EA4               	movlw	low main@datos
   653  0011BC  6E04               	movwf	DS1307read@data^0,c
   654  0011BE  EC19  F009         	call	_DS1307read	;wreg free
   655                           
   656                           ;Main.c: 27:         sprintf(date,"%d/Octubre/2018",datos[4]);
   657  0011C2  0E86               	movlw	low main@date
   658  0011C4  6E4D               	movwf	sprintf@s^0,c
   659  0011C6  0E12               	movlw	low STR_1
   660  0011C8  6E4E               	movwf	sprintf@fmt^0,c
   661  0011CA  C0A8  F04F         	movff	main@datos+4,?_sprintf+2
   662  0011CE  6A50               	clrf	(?_sprintf+3)^0,c
   663  0011D0  EC2E  F00B         	call	_sprintf	;wreg free
   664                           
   665                           ; BSR set to: 0
   666                           ;Main.c: 28:         sprintf(time,"%d:%d:%d",datos[2],datos[1],datos[0]);
   667  0011D4  0E9A               	movlw	low main@time
   668  0011D6  6E4D               	movwf	sprintf@s^0,c
   669  0011D8  0E22               	movlw	low STR_2
   670  0011DA  6E4E               	movwf	sprintf@fmt^0,c
   671  0011DC  C0A6  F04F         	movff	main@datos+2,?_sprintf+2
   672  0011E0  6A50               	clrf	(?_sprintf+3)^0,c
   673  0011E2  C0A5  F051         	movff	main@datos+1,?_sprintf+4
   674  0011E6  6A52               	clrf	(?_sprintf+5)^0,c
   675  0011E8  C0A4  F053         	movff	main@datos,?_sprintf+6
   676  0011EC  6A54               	clrf	(?_sprintf+7)^0,c
   677  0011EE  EC2E  F00B         	call	_sprintf	;wreg free
   678                           
   679                           ; BSR set to: 0
   680                           ;Main.c: 29:         Lcd_Out2(1,2,"Reloj RTC DS1307");
   681  0011F2  0E02               	movlw	2
   682  0011F4  6E04               	movwf	Lcd_Out2@x^0,c
   683  0011F6  0E01               	movlw	low STR_3
   684  0011F8  6E05               	movwf	Lcd_Out2@buffer^0,c
   685  0011FA  5005               	movf	Lcd_Out2@buffer^0,w,c
   686  0011FC  A4D8               	btfss	status,2,c
   687  0011FE  0E08               	movlw	high __smallconst
   688  001200  6E06               	movwf	(Lcd_Out2@buffer+1)^0,c
   689  001202  0E01               	movlw	1
   690  001204  EC7A  F009         	call	_Lcd_Out2
   691                           
   692                           ;Main.c: 30:         Lcd_Out2(2,3,date);
   693  001208  0E03               	movlw	3
   694  00120A  6E04               	movwf	Lcd_Out2@x^0,c
   695  00120C  0E86               	movlw	low main@date
   696  00120E  6E05               	movwf	Lcd_Out2@buffer^0,c
   697  001210  6A06               	clrf	(Lcd_Out2@buffer+1)^0,c
   698  001212  0E02               	movlw	2
   699  001214  EC7A  F009         	call	_Lcd_Out2
   700                           
   701                           ;Main.c: 31:         Lcd_Out2(3,6,time);
   702  001218  0E06               	movlw	6
   703  00121A  6E04               	movwf	Lcd_Out2@x^0,c
   704  00121C  0E9A               	movlw	low main@time
   705  00121E  6E05               	movwf	Lcd_Out2@buffer^0,c
   706  001220  6A06               	clrf	(Lcd_Out2@buffer+1)^0,c
   707  001222  0E03               	movlw	3
   708  001224  EC7A  F009         	call	_Lcd_Out2
   709                           
   710                           ;Main.c: 32:         _delay((unsigned long)((100)*(4000000/4000000.0)));
   711  001228  0E21               	movlw	33
   712  00122A                     u1477:
   713  00122A  2EE8               	decfsz	wreg,f,c
   714  00122C  D7FE               	bra	u1477
   715  00122E  F000               	nop	
   716  001230  D7C4               	goto	l2118
   717  001232                     __end_of_main:
   718                           	callstack 0
   719                           
   720 ;; *************** function _sprintf *****************
   721 ;; Defined at:
   722 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_sprintf.c"
   723 ;; Parameters:    Size  Location     Type
   724 ;;  s               1   76[COMRAM] PTR unsigned char 
   725 ;;		 -> main@time(10), main@date(20), 
   726 ;;  fmt             1   77[COMRAM] PTR const unsigned char 
   727 ;;		 -> STR_2(9), STR_1(16), 
   728 ;; Auto vars:     Size  Location     Type
   729 ;;  f               5   87[COMRAM] struct _IO_FILE
   730 ;;  ret             2    0        int 
   731 ;;  ap              1   86[COMRAM] PTR void [1]
   732 ;;		 -> ?_sprintf(2), 
   733 ;; Return value:  Size  Location     Type
   734 ;;                  2   76[COMRAM] int 
   735 ;; Registers used:
   736 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   737 ;; Tracked objects:
   738 ;;		On entry : 0/0
   739 ;;		On exit  : 3F/0
   740 ;;		Unchanged: 0/0
   741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   742 ;;      Params:         8       0       0       0       0       0       0       0       0
   743 ;;      Locals:         8       0       0       0       0       0       0       0       0
   744 ;;      Temps:          0       0       0       0       0       0       0       0       0
   745 ;;      Totals:        16       0       0       0       0       0       0       0       0
   746 ;;Total ram usage:       16 bytes
   747 ;; Hardware stack levels used:    1
   748 ;; Hardware stack levels required when called:    7
   749 ;; This function calls:
   750 ;;		_vfprintf
   751 ;; This function is called by:
   752 ;;		_main
   753 ;; This function uses a non-reentrant model
   754 ;;
   755                           
   756                           	psect	text1
   757  00165C                     __ptext1:
   758                           	callstack 0
   759  00165C                     _sprintf:
   760                           	callstack 23
   761                           
   762                           ;incstack = 0
   763  00165C  0E4F               	movlw	low (?_sprintf+2)
   764  00165E  6E57               	movwf	sprintf@ap^0,c
   765  001660  C04D  F058         	movff	sprintf@s,sprintf@f
   766  001664  0E00               	movlw	0
   767  001666  6E5A               	movwf	(sprintf@f+2)^0,c
   768  001668  0E00               	movlw	0
   769  00166A  6E59               	movwf	(sprintf@f+1)^0,c
   770  00166C  0E00               	movlw	0
   771  00166E  6E5C               	movwf	(sprintf@f+4)^0,c
   772  001670  0E00               	movlw	0
   773  001672  6E5B               	movwf	(sprintf@f+3)^0,c
   774  001674  0E58               	movlw	low sprintf@f
   775  001676  6E49               	movwf	vfprintf@fp^0,c
   776  001678  C04E  F04A         	movff	sprintf@fmt,vfprintf@fmt
   777  00167C  0E57               	movlw	low sprintf@ap
   778  00167E  6E4B               	movwf	vfprintf@ap^0,c
   779  001680  ECEE  F00A         	call	_vfprintf	;wreg free
   780                           
   781                           ; BSR set to: 0
   782  001684  504D               	movf	sprintf@s^0,w,c
   783  001686  2459               	addwf	(sprintf@f+1)^0,w,c
   784  001688  6ED9               	movwf	fsr2l,c
   785  00168A  6ADA               	clrf	fsr2h,c
   786  00168C  0E00               	movlw	0
   787  00168E  6EDF               	movwf	indf2,c
   788                           
   789                           ; BSR set to: 0
   790  001690  0012               	return		;funcret
   791  001692                     __end_of_sprintf:
   792                           	callstack 0
   793                           
   794 ;; *************** function _vfprintf *****************
   795 ;; Defined at:
   796 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
   797 ;; Parameters:    Size  Location     Type
   798 ;;  fp              1   72[COMRAM] PTR struct _IO_FILE
   799 ;;		 -> sprintf@f(5), 
   800 ;;  fmt             1   73[COMRAM] PTR const unsigned char 
   801 ;;		 -> STR_2(9), STR_1(16), 
   802 ;;  ap              1   74[COMRAM] PTR PTR void 
   803 ;;		 -> sprintf@ap(1), 
   804 ;; Auto vars:     Size  Location     Type
   805 ;;  cfmt            1   75[COMRAM] PTR unsigned char 
   806 ;;		 -> STR_2(9), STR_1(16), 
   807 ;; Return value:  Size  Location     Type
   808 ;;                  2   72[COMRAM] int 
   809 ;; Registers used:
   810 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   811 ;; Tracked objects:
   812 ;;		On entry : 0/0
   813 ;;		On exit  : 3F/0
   814 ;;		Unchanged: 0/0
   815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   816 ;;      Params:         3       0       0       0       0       0       0       0       0
   817 ;;      Locals:         1       0       0       0       0       0       0       0       0
   818 ;;      Temps:          0       0       0       0       0       0       0       0       0
   819 ;;      Totals:         4       0       0       0       0       0       0       0       0
   820 ;;Total ram usage:        4 bytes
   821 ;; Hardware stack levels used:    1
   822 ;; Hardware stack levels required when called:    6
   823 ;; This function calls:
   824 ;;		_vfpfcnvrt
   825 ;; This function is called by:
   826 ;;		_sprintf
   827 ;; This function uses a non-reentrant model
   828 ;;
   829                           
   830                           	psect	text2
   831  0015DC                     __ptext2:
   832                           	callstack 0
   833  0015DC                     _vfprintf:
   834                           	callstack 23
   835                           
   836                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
   837                           
   838                           ; BSR set to: 0
   839                           ;incstack = 0
   840  0015DC  C04A  F04C         	movff	vfprintf@fmt,vfprintf@cfmt
   841                           
   842                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
   843  0015E0  0E00               	movlw	0
   844  0015E2  0100               	movlb	0	; () banked
   845  0015E4  6F61               	movwf	(_nout+1)& (0+255),b
   846  0015E6  0E00               	movlw	0
   847  0015E8  6F60               	movwf	_nout& (0+255),b
   848                           
   849                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
   850  0015EA  D00D               	goto	l1962
   851  0015EC                     l1960:
   852                           
   853                           ; BSR set to: 0
   854                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
   855  0015EC  C049  F03E         	movff	vfprintf@fp,vfpfcnvrt@fp
   856  0015F0  0E4C               	movlw	low vfprintf@cfmt
   857  0015F2  6E3F               	movwf	vfpfcnvrt@fmt^0,c
   858  0015F4  C04B  F040         	movff	vfprintf@ap,vfpfcnvrt@ap
   859  0015F8  ECD1  F005         	call	_vfpfcnvrt	;wreg free
   860  0015FC  503E               	movf	?_vfpfcnvrt^0,w,c
   861  0015FE  0100               	movlb	0	; () banked
   862  001600  2760               	addwf	_nout& (0+255),f,b
   863  001602  503F               	movf	(?_vfpfcnvrt+1)^0,w,c
   864  001604  2361               	addwfc	(_nout+1)& (0+255),f,b
   865  001606                     l1962:
   866                           
   867                           ; BSR set to: 0
   868                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
   869  001606  C04C  FFF6         	movff	vfprintf@cfmt,tblptrl
   870  00160A                     	if	1	;There is more than 1 active tblptr byte
   871  00160A  0E08               	movlw	high __smallconst
   872  00160C  6EF7               	movwf	tblptrh,c
   873  00160E                     	endif
   874  00160E                     	if	0	;tblptru may be non-zero
   875  00160E                     	endif
   876  00160E                     	if	0	;tblptru may be non-zero
   877  00160E                     	endif
   878  00160E  0008               	tblrd		*
   879  001610  50F5               	movf	tablat,w,c
   880  001612  0900               	iorlw	0
   881  001614  A4D8               	btfss	status,2,c
   882  001616  D7EA               	goto	l1960
   883                           
   884                           ; BSR set to: 0
   885                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
   886  001618  C060  F049         	movff	_nout,?_vfprintf
   887  00161C  C061  F04A         	movff	_nout+1,?_vfprintf+1
   888                           
   889                           ; BSR set to: 0
   890  001620  0012               	return		;funcret
   891  001622                     __end_of_vfprintf:
   892                           	callstack 0
   893                           
   894 ;; *************** function _vfpfcnvrt *****************
   895 ;; Defined at:
   896 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
   897 ;; Parameters:    Size  Location     Type
   898 ;;  fp              1   61[COMRAM] PTR struct _IO_FILE
   899 ;;		 -> sprintf@f(5), 
   900 ;;  fmt             1   62[COMRAM] PTR PTR unsigned char 
   901 ;;		 -> vfprintf@cfmt(1), 
   902 ;;  ap              1   63[COMRAM] PTR PTR void 
   903 ;;		 -> sprintf@ap(1), 
   904 ;; Auto vars:     Size  Location     Type
   905 ;;  ll              8   64[COMRAM] long long 
   906 ;;  llu             8    0        unsigned long long 
   907 ;;  f               4    0        unsigned long long 
   908 ;;  vp              3    0        PTR void 
   909 ;;  ct              3    0        unsigned char [3]
   910 ;;  cp              3    0        PTR unsigned char 
   911 ;;  i               2    0        int 
   912 ;;  done            2    0        int 
   913 ;;  c               1    0        unsigned char 
   914 ;; Return value:  Size  Location     Type
   915 ;;                  2   61[COMRAM] int 
   916 ;; Registers used:
   917 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   918 ;; Tracked objects:
   919 ;;		On entry : 0/0
   920 ;;		On exit  : 0/0
   921 ;;		Unchanged: 0/0
   922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   923 ;;      Params:         3       0       0       0       0       0       0       0       0
   924 ;;      Locals:         8       0       0       0       0       0       0       0       0
   925 ;;      Temps:          0       0       0       0       0       0       0       0       0
   926 ;;      Totals:        11       0       0       0       0       0       0       0       0
   927 ;;Total ram usage:       11 bytes
   928 ;; Hardware stack levels used:    1
   929 ;; Hardware stack levels required when called:    5
   930 ;; This function calls:
   931 ;;		_dtoa
   932 ;;		_fputc
   933 ;; This function is called by:
   934 ;;		_vfprintf
   935 ;; This function uses a non-reentrant model
   936 ;;
   937                           
   938                           	psect	text3
   939  000BA2                     __ptext3:
   940                           	callstack 0
   941  000BA2                     _vfpfcnvrt:
   942                           	callstack 23
   943                           
   944                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
   945                           
   946                           ; BSR set to: 0
   947                           ;incstack = 0
   948  000BA2  503F               	movf	vfpfcnvrt@fmt^0,w,c
   949  000BA4  6ED9               	movwf	fsr2l,c
   950  000BA6  6ADA               	clrf	fsr2h,c
   951  000BA8  CFDF FFF6          	movff	indf2,tblptrl
   952  000BAC                     	if	1	;There is more than 1 active tblptr byte
   953  000BAC  0E08               	movlw	high __smallconst
   954  000BAE  6EF7               	movwf	tblptrh,c
   955  000BB0                     	endif
   956  000BB0                     	if	0	;tblptru may be non-zero
   957  000BB0                     	endif
   958  000BB0                     	if	0	;tblptru may be non-zero
   959  000BB0                     	endif
   960  000BB0  0008               	tblrd		*
   961  000BB2  50F5               	movf	tablat,w,c
   962  000BB4  0A25               	xorlw	37
   963  000BB6  A4D8               	btfss	status,2,c
   964  000BB8  D07F               	goto	l1836
   965                           
   966                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
   967  000BBA  503F               	movf	vfpfcnvrt@fmt^0,w,c
   968  000BBC  6ED9               	movwf	fsr2l,c
   969  000BBE  6ADA               	clrf	fsr2h,c
   970  000BC0  2ADF               	incf	indf2,f,c
   971                           
   972                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
   973  000BC2  0E00               	movlw	0
   974  000BC4  0100               	movlb	0	; () banked
   975  000BC6  6F63               	movwf	(_width+1)& (0+255),b
   976  000BC8  0E00               	movlw	0
   977  000BCA  6F62               	movwf	_width& (0+255),b
   978  000BCC  C062  F05D         	movff	_width,_flags
   979  000BD0  C063  F05E         	movff	_width+1,_flags+1
   980                           
   981                           ; BSR set to: 0
   982                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
   983  000BD4  6964               	setf	_prec& (0+255),b
   984  000BD6  6965               	setf	(_prec+1)& (0+255),b
   985                           
   986                           ; BSR set to: 0
   987                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
   988  000BD8  503F               	movf	vfpfcnvrt@fmt^0,w,c
   989  000BDA  6ED9               	movwf	fsr2l,c
   990  000BDC  6ADA               	clrf	fsr2h,c
   991  000BDE  CFDF FFF6          	movff	indf2,tblptrl
   992  000BE2                     	if	1	;There is more than 1 active tblptr byte
   993  000BE2  0E08               	movlw	high __smallconst
   994  000BE4  6EF7               	movwf	tblptrh,c
   995  000BE6                     	endif
   996  000BE6                     	if	0	;tblptru may be non-zero
   997  000BE6                     	endif
   998  000BE6                     	if	0	;tblptru may be non-zero
   999  000BE6                     	endif
  1000  000BE6  0008               	tblrd		*
  1001  000BE8  50F5               	movf	tablat,w,c
  1002  000BEA  0A64               	xorlw	100
  1003  000BEC  B4D8               	btfsc	status,2,c
  1004  000BEE  D00C               	goto	u1240
  1005                           
  1006                           ; BSR set to: 0
  1007  000BF0  503F               	movf	vfpfcnvrt@fmt^0,w,c
  1008  000BF2  6ED9               	movwf	fsr2l,c
  1009  000BF4  6ADA               	clrf	fsr2h,c
  1010  000BF6  CFDF FFF6          	movff	indf2,tblptrl
  1011  000BFA                     	if	1	;There is more than 1 active tblptr byte
  1012  000BFA  0E08               	movlw	high __smallconst
  1013  000BFC  6EF7               	movwf	tblptrh,c
  1014  000BFE                     	endif
  1015  000BFE                     	if	0	;tblptru may be non-zero
  1016  000BFE                     	endif
  1017  000BFE                     	if	0	;tblptru may be non-zero
  1018  000BFE                     	endif
  1019  000BFE  0008               	tblrd		*
  1020  000C00  50F5               	movf	tablat,w,c
  1021  000C02  0A69               	xorlw	105
  1022  000C04  A4D8               	btfss	status,2,c
  1023  000C06  D032               	goto	l1820
  1024  000C08                     u1240:
  1025                           
  1026                           ; BSR set to: 0
  1027                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  1028  000C08  503F               	movf	vfpfcnvrt@fmt^0,w,c
  1029  000C0A  6ED9               	movwf	fsr2l,c
  1030  000C0C  6ADA               	clrf	fsr2h,c
  1031  000C0E  2ADF               	incf	indf2,f,c
  1032                           
  1033                           ; BSR set to: 0
  1034                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1035  000C10  5040               	movf	vfpfcnvrt@ap^0,w,c
  1036  000C12  6ED9               	movwf	fsr2l,c
  1037  000C14  6ADA               	clrf	fsr2h,c
  1038  000C16  50DF               	movf	indf2,w,c
  1039  000C18  2ADF               	incf	indf2,f,c
  1040  000C1A  2ADF               	incf	indf2,f,c
  1041  000C1C  6ED9               	movwf	fsr2l,c
  1042  000C1E  6ADA               	clrf	fsr2h,c
  1043  000C20  CFDE F041          	movff	postinc2,vfpfcnvrt@ll
  1044  000C24  CFDD F042          	movff	postdec2,vfpfcnvrt@ll+1
  1045  000C28  0E00               	movlw	0
  1046  000C2A  BE42               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  1047  000C2C  0EFF               	movlw	-1
  1048  000C2E  6E43               	movwf	(vfpfcnvrt@ll+2)^0,c
  1049  000C30  6E44               	movwf	(vfpfcnvrt@ll+3)^0,c
  1050  000C32  6E45               	movwf	(vfpfcnvrt@ll+4)^0,c
  1051  000C34  6E46               	movwf	(vfpfcnvrt@ll+5)^0,c
  1052  000C36  6E47               	movwf	(vfpfcnvrt@ll+6)^0,c
  1053  000C38  6E48               	movwf	(vfpfcnvrt@ll+7)^0,c
  1054                           
  1055                           ; BSR set to: 0
  1056                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  1057  000C3A  C03E  F01B         	movff	vfpfcnvrt@fp,dtoa@fp
  1058  000C3E  C041  F01C         	movff	vfpfcnvrt@ll,dtoa@d
  1059  000C42  C042  F01D         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1060  000C46  C043  F01E         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1061  000C4A  C044  F01F         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1062  000C4E  C045  F020         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1063  000C52  C046  F021         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1064  000C56  C047  F022         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1065  000C5A  C048  F023         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1066  000C5E  EC16  F004         	call	_dtoa	;wreg free
  1067  000C62  C01B  F03E         	movff	?_dtoa,?_vfpfcnvrt
  1068  000C66  C01C  F03F         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1069  000C6A  0012               	return	
  1070  000C6C                     l1820:
  1071                           
  1072                           ; BSR set to: 0
  1073                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  1074  000C6C  503F               	movf	vfpfcnvrt@fmt^0,w,c
  1075  000C6E  6ED9               	movwf	fsr2l,c
  1076  000C70  6ADA               	clrf	fsr2h,c
  1077  000C72  CFDF FFF6          	movff	indf2,tblptrl
  1078  000C76                     	if	1	;There is more than 1 active tblptr byte
  1079  000C76  0E08               	movlw	high __smallconst
  1080  000C78  6EF7               	movwf	tblptrh,c
  1081  000C7A                     	endif
  1082  000C7A                     	if	0	;tblptru may be non-zero
  1083  000C7A                     	endif
  1084  000C7A                     	if	0	;tblptru may be non-zero
  1085  000C7A                     	endif
  1086  000C7A  0008               	tblrd		*
  1087  000C7C  50F5               	movf	tablat,w,c
  1088  000C7E  0A25               	xorlw	37
  1089  000C80  A4D8               	btfss	status,2,c
  1090  000C82  D011               	goto	l1830
  1091                           
  1092                           ; BSR set to: 0
  1093                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  1094  000C84  503F               	movf	vfpfcnvrt@fmt^0,w,c
  1095  000C86  6ED9               	movwf	fsr2l,c
  1096  000C88  6ADA               	clrf	fsr2h,c
  1097  000C8A  2ADF               	incf	indf2,f,c
  1098                           
  1099                           ; BSR set to: 0
  1100                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  1101  000C8C  0E00               	movlw	0
  1102  000C8E  6E02               	movwf	(fputc@c+1)^0,c
  1103  000C90  0E25               	movlw	37
  1104  000C92  6E01               	movwf	fputc@c^0,c
  1105  000C94  C03E  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1106  000C98  EC0A  F00A         	call	_fputc	;wreg free
  1107  000C9C                     l1826:
  1108                           
  1109                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  1110  000C9C  0E00               	movlw	0
  1111  000C9E  6E3F               	movwf	(?_vfpfcnvrt+1)^0,c
  1112  000CA0  0E01               	movlw	1
  1113  000CA2  6E3E               	movwf	?_vfpfcnvrt^0,c
  1114  000CA4  0012               	return	
  1115  000CA6                     l1830:
  1116                           
  1117                           ; BSR set to: 0
  1118                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  1119  000CA6  503F               	movf	vfpfcnvrt@fmt^0,w,c
  1120  000CA8  6ED9               	movwf	fsr2l,c
  1121  000CAA  6ADA               	clrf	fsr2h,c
  1122  000CAC  2ADF               	incf	indf2,f,c
  1123                           
  1124                           ; BSR set to: 0
  1125                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  1126  000CAE  0E00               	movlw	0
  1127  000CB0  6E3F               	movwf	(?_vfpfcnvrt+1)^0,c
  1128  000CB2  0E00               	movlw	0
  1129  000CB4  6E3E               	movwf	?_vfpfcnvrt^0,c
  1130  000CB6  0012               	return	
  1131  000CB8                     l1836:
  1132                           
  1133                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  1134  000CB8  503F               	movf	vfpfcnvrt@fmt^0,w,c
  1135  000CBA  6ED9               	movwf	fsr2l,c
  1136  000CBC  6ADA               	clrf	fsr2h,c
  1137  000CBE  CFDF FFF6          	movff	indf2,tblptrl
  1138  000CC2                     	if	1	;There is more than 1 active tblptr byte
  1139  000CC2  0E08               	movlw	high __smallconst
  1140  000CC4  6EF7               	movwf	tblptrh,c
  1141  000CC6                     	endif
  1142  000CC6                     	if	0	;tblptru may be non-zero
  1143  000CC6                     	endif
  1144  000CC6                     	if	0	;tblptru may be non-zero
  1145  000CC6                     	endif
  1146  000CC6  0008               	tblrd		*
  1147  000CC8  50F5               	movf	tablat,w,c
  1148  000CCA  6E01               	movwf	fputc@c^0,c
  1149  000CCC  6A02               	clrf	(fputc@c+1)^0,c
  1150  000CCE  C03E  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1151  000CD2  EC0A  F00A         	call	_fputc	;wreg free
  1152                           
  1153                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1154  000CD6  503F               	movf	vfpfcnvrt@fmt^0,w,c
  1155  000CD8  6ED9               	movwf	fsr2l,c
  1156  000CDA  6ADA               	clrf	fsr2h,c
  1157  000CDC  2ADF               	incf	indf2,f,c
  1158  000CDE  D7DE               	goto	l1826
  1159  000CE0                     __end_of_vfpfcnvrt:
  1160                           	callstack 0
  1161                           
  1162 ;; *************** function _dtoa *****************
  1163 ;; Defined at:
  1164 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  1165 ;; Parameters:    Size  Location     Type
  1166 ;;  fp              1   26[COMRAM] PTR struct _IO_FILE
  1167 ;;		 -> sprintf@f(5), 
  1168 ;;  d               8   27[COMRAM] long long 
  1169 ;; Auto vars:     Size  Location     Type
  1170 ;;  n               8   51[COMRAM] long long 
  1171 ;;  i               2   59[COMRAM] int 
  1172 ;;  s               2   49[COMRAM] int 
  1173 ;;  w               2   47[COMRAM] int 
  1174 ;;  p               2   45[COMRAM] int 
  1175 ;; Return value:  Size  Location     Type
  1176 ;;                  2   26[COMRAM] int 
  1177 ;; Registers used:
  1178 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1179 ;; Tracked objects:
  1180 ;;		On entry : 3F/0
  1181 ;;		On exit  : 0/0
  1182 ;;		Unchanged: 0/0
  1183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1184 ;;      Params:         9       0       0       0       0       0       0       0       0
  1185 ;;      Locals:        18       0       0       0       0       0       0       0       0
  1186 ;;      Temps:          8       0       0       0       0       0       0       0       0
  1187 ;;      Totals:        35       0       0       0       0       0       0       0       0
  1188 ;;Total ram usage:       35 bytes
  1189 ;; Hardware stack levels used:    1
  1190 ;; Hardware stack levels required when called:    4
  1191 ;; This function calls:
  1192 ;;		___aodiv
  1193 ;;		___aomod
  1194 ;;		_abs
  1195 ;;		_pad
  1196 ;; This function is called by:
  1197 ;;		_vfpfcnvrt
  1198 ;; This function uses a non-reentrant model
  1199 ;;
  1200                           
  1201                           	psect	text4
  1202  00082C                     __ptext4:
  1203                           	callstack 0
  1204  00082C                     _dtoa:
  1205                           	callstack 23
  1206                           
  1207                           ; BSR set to: 0
  1208                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  1209                           
  1210                           ;incstack = 0
  1211  00082C  C01C  F034         	movff	dtoa@d,dtoa@n
  1212  000830  C01D  F035         	movff	dtoa@d+1,dtoa@n+1
  1213  000834  C01E  F036         	movff	dtoa@d+2,dtoa@n+2
  1214  000838  C01F  F037         	movff	dtoa@d+3,dtoa@n+3
  1215  00083C  C020  F038         	movff	dtoa@d+4,dtoa@n+4
  1216  000840  C021  F039         	movff	dtoa@d+5,dtoa@n+5
  1217  000844  C022  F03A         	movff	dtoa@d+6,dtoa@n+6
  1218  000848  C023  F03B         	movff	dtoa@d+7,dtoa@n+7
  1219                           
  1220                           ; BSR set to: 0
  1221                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  1222  00084C  AE3B               	btfss	(dtoa@n+7)^0,7,c
  1223  00084E  D002               	goto	u980
  1224  000850  0E01               	movlw	1
  1225  000852  D001               	goto	u990
  1226  000854                     u980:
  1227  000854  0E00               	movlw	0
  1228  000856                     u990:
  1229  000856  6E32               	movwf	dtoa@s^0,c
  1230  000858  6A33               	clrf	(dtoa@s+1)^0,c
  1231                           
  1232                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  1233  00085A  5032               	movf	dtoa@s^0,w,c
  1234  00085C  1033               	iorwf	(dtoa@s+1)^0,w,c
  1235  00085E  B4D8               	btfsc	status,2,c
  1236  000860  D010               	goto	l1692
  1237                           
  1238                           ; BSR set to: 0
  1239                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  1240  000862  1E3B               	comf	(dtoa@n+7)^0,f,c
  1241  000864  1E3A               	comf	(dtoa@n+6)^0,f,c
  1242  000866  1E39               	comf	(dtoa@n+5)^0,f,c
  1243  000868  1E38               	comf	(dtoa@n+4)^0,f,c
  1244  00086A  1E37               	comf	(dtoa@n+3)^0,f,c
  1245  00086C  1E36               	comf	(dtoa@n+2)^0,f,c
  1246  00086E  1E35               	comf	(dtoa@n+1)^0,f,c
  1247  000870  6C34               	negf	dtoa@n^0,c
  1248  000872  0E00               	movlw	0
  1249  000874  2235               	addwfc	(dtoa@n+1)^0,f,c
  1250  000876  2236               	addwfc	(dtoa@n+2)^0,f,c
  1251  000878  2237               	addwfc	(dtoa@n+3)^0,f,c
  1252  00087A  2238               	addwfc	(dtoa@n+4)^0,f,c
  1253  00087C  2239               	addwfc	(dtoa@n+5)^0,f,c
  1254  00087E  223A               	addwfc	(dtoa@n+6)^0,f,c
  1255  000880  223B               	addwfc	(dtoa@n+7)^0,f,c
  1256  000882                     l1692:
  1257                           
  1258                           ; BSR set to: 0
  1259                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  1260  000882  AF65               	btfss	(_prec+1)& (0+255),7,b
  1261                           
  1262                           ; BSR set to: 0
  1263                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  1264  000884  925D               	bcf	_flags^0,1,c
  1265                           
  1266                           ; BSR set to: 0
  1267                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  1268  000886  BF65               	btfsc	(_prec+1)& (0+255),7,b
  1269  000888  D005               	goto	u1020
  1270  00088A  5165               	movf	(_prec+1)& (0+255),w,b
  1271  00088C  E108               	bnz	l888
  1272  00088E  0564               	decf	_prec& (0+255),w,b
  1273  000890  B0D8               	btfsc	status,0,c
  1274  000892  D005               	goto	l888
  1275  000894                     u1020:
  1276                           
  1277                           ; BSR set to: 0
  1278  000894  0E00               	movlw	0
  1279  000896  6E2F               	movwf	(dtoa@p+1)^0,c
  1280  000898  0E01               	movlw	1
  1281  00089A  6E2E               	movwf	dtoa@p^0,c
  1282  00089C  D004               	goto	l890
  1283  00089E                     l888:
  1284                           
  1285                           ; BSR set to: 0
  1286  00089E  C064  F02E         	movff	_prec,dtoa@p
  1287  0008A2  C065  F02F         	movff	_prec+1,dtoa@p+1
  1288  0008A6                     l890:
  1289                           
  1290                           ; BSR set to: 0
  1291                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  1292  0008A6  C062  F030         	movff	_width,dtoa@w
  1293  0008AA  C063  F031         	movff	_width+1,dtoa@w+1
  1294                           
  1295                           ; BSR set to: 0
  1296                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  1297  0008AE  5032               	movf	dtoa@s^0,w,c
  1298  0008B0  1033               	iorwf	(dtoa@s+1)^0,w,c
  1299  0008B2  A4D8               	btfss	status,2,c
  1300  0008B4  D002               	goto	u1040
  1301                           
  1302                           ; BSR set to: 0
  1303  0008B6  A45D               	btfss	_flags^0,2,c
  1304  0008B8  D003               	goto	l1706
  1305  0008BA                     u1040:
  1306                           
  1307                           ; BSR set to: 0
  1308                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 306:         --w;
  1309  0008BA  0630               	decf	dtoa@w^0,f,c
  1310  0008BC  A0D8               	btfss	status,0,c
  1311  0008BE  0631               	decf	(dtoa@w+1)^0,f,c
  1312  0008C0                     l1706:
  1313                           
  1314                           ; BSR set to: 0
  1315                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  1316  0008C0  0E00               	movlw	0
  1317  0008C2  6E3D               	movwf	(dtoa@i+1)^0,c
  1318  0008C4  0E1F               	movlw	31
  1319  0008C6  6E3C               	movwf	dtoa@i^0,c
  1320                           
  1321                           ; BSR set to: 0
  1322                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  1323  0008C8  0E00               	movlw	0
  1324  0008CA  6F85               	movwf	(_dbuf+31)& (0+255),b
  1325                           
  1326                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1327  0008CC  D07A               	goto	l1720
  1328  0008CE                     l1710:
  1329                           
  1330                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 313:         --i;
  1331  0008CE  063C               	decf	dtoa@i^0,f,c
  1332  0008D0  A0D8               	btfss	status,0,c
  1333  0008D2  063D               	decf	(dtoa@i+1)^0,f,c
  1334                           
  1335                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  1336  0008D4  503C               	movf	dtoa@i^0,w,c
  1337  0008D6  0F66               	addlw	low _dbuf
  1338  0008D8  6ED9               	movwf	fsr2l,c
  1339  0008DA  6ADA               	clrf	fsr2h,c
  1340  0008DC  C034  F001         	movff	dtoa@n,___aomod@dividend
  1341  0008E0  C035  F002         	movff	dtoa@n+1,___aomod@dividend+1
  1342  0008E4  C036  F003         	movff	dtoa@n+2,___aomod@dividend+2
  1343  0008E8  C037  F004         	movff	dtoa@n+3,___aomod@dividend+3
  1344  0008EC  C038  F005         	movff	dtoa@n+4,___aomod@dividend+4
  1345  0008F0  C039  F006         	movff	dtoa@n+5,___aomod@dividend+5
  1346  0008F4  C03A  F007         	movff	dtoa@n+6,___aomod@dividend+6
  1347  0008F8  C03B  F008         	movff	dtoa@n+7,___aomod@dividend+7
  1348  0008FC  0E0A               	movlw	10
  1349  0008FE  6E09               	movwf	___aomod@divisor^0,c
  1350  000900  0E00               	movlw	0
  1351  000902  6E0A               	movwf	(___aomod@divisor+1)^0,c
  1352  000904  0E00               	movlw	0
  1353  000906  6E0B               	movwf	(___aomod@divisor+2)^0,c
  1354  000908  0E00               	movlw	0
  1355  00090A  6E0C               	movwf	(___aomod@divisor+3)^0,c
  1356  00090C  0E00               	movlw	0
  1357  00090E  6E0D               	movwf	(___aomod@divisor+4)^0,c
  1358  000910  0E00               	movlw	0
  1359  000912  6E0E               	movwf	(___aomod@divisor+5)^0,c
  1360  000914  0E00               	movlw	0
  1361  000916  6E0F               	movwf	(___aomod@divisor+6)^0,c
  1362  000918  0E00               	movlw	0
  1363  00091A  6E10               	movwf	(___aomod@divisor+7)^0,c
  1364  00091C  EC70  F006         	call	___aomod	;wreg free
  1365  000920  C001  F024         	movff	?___aomod,??_dtoa
  1366  000924  C002  F025         	movff	?___aomod+1,??_dtoa+1
  1367  000928  C003  F026         	movff	?___aomod+2,??_dtoa+2
  1368  00092C  C004  F027         	movff	?___aomod+3,??_dtoa+3
  1369  000930  C005  F028         	movff	?___aomod+4,??_dtoa+4
  1370  000934  C006  F029         	movff	?___aomod+5,??_dtoa+5
  1371  000938  C007  F02A         	movff	?___aomod+6,??_dtoa+6
  1372  00093C  C008  F02B         	movff	?___aomod+7,??_dtoa+7
  1373  000940  C024  F013         	movff	??_dtoa,abs@a
  1374  000944  C026  F014         	movff	??_dtoa+2,abs@a+1
  1375  000948  EC49  F00B         	call	_abs	;wreg free
  1376  00094C  5013               	movf	?_abs^0,w,c
  1377  00094E  0F30               	addlw	48
  1378  000950  6EDF               	movwf	indf2,c
  1379                           
  1380                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 315:         --p;
  1381  000952  062E               	decf	dtoa@p^0,f,c
  1382  000954  A0D8               	btfss	status,0,c
  1383  000956  062F               	decf	(dtoa@p+1)^0,f,c
  1384                           
  1385                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 316:         --w;
  1386  000958  0630               	decf	dtoa@w^0,f,c
  1387  00095A  A0D8               	btfss	status,0,c
  1388  00095C  0631               	decf	(dtoa@w+1)^0,f,c
  1389                           
  1390                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  1391  00095E  C034  F001         	movff	dtoa@n,___aodiv@dividend
  1392  000962  C035  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  1393  000966  C036  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  1394  00096A  C037  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  1395  00096E  C038  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  1396  000972  C039  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  1397  000976  C03A  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  1398  00097A  C03B  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  1399  00097E  0E0A               	movlw	10
  1400  000980  6E09               	movwf	___aodiv@divisor^0,c
  1401  000982  0E00               	movlw	0
  1402  000984  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  1403  000986  0E00               	movlw	0
  1404  000988  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  1405  00098A  0E00               	movlw	0
  1406  00098C  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  1407  00098E  0E00               	movlw	0
  1408  000990  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  1409  000992  0E00               	movlw	0
  1410  000994  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  1411  000996  0E00               	movlw	0
  1412  000998  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  1413  00099A  0E00               	movlw	0
  1414  00099C  6E10               	movwf	(___aodiv@divisor+7)^0,c
  1415  00099E  EC2D  F005         	call	___aodiv	;wreg free
  1416  0009A2  C001  F034         	movff	?___aodiv,dtoa@n
  1417  0009A6  C002  F035         	movff	?___aodiv+1,dtoa@n+1
  1418  0009AA  C003  F036         	movff	?___aodiv+2,dtoa@n+2
  1419  0009AE  C004  F037         	movff	?___aodiv+3,dtoa@n+3
  1420  0009B2  C005  F038         	movff	?___aodiv+4,dtoa@n+4
  1421  0009B6  C006  F039         	movff	?___aodiv+5,dtoa@n+5
  1422  0009BA  C007  F03A         	movff	?___aodiv+6,dtoa@n+6
  1423  0009BE  C008  F03B         	movff	?___aodiv+7,dtoa@n+7
  1424  0009C2                     l1720:
  1425                           
  1426                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1427  0009C2  BE3D               	btfsc	(dtoa@i+1)^0,7,c
  1428  0009C4  D01F               	goto	u1090
  1429  0009C6  503D               	movf	(dtoa@i+1)^0,w,c
  1430  0009C8  E103               	bnz	u1050
  1431  0009CA  043C               	decf	dtoa@i^0,w,c
  1432  0009CC  A0D8               	btfss	status,0,c
  1433  0009CE  D01A               	goto	u1090
  1434  0009D0                     u1050:
  1435  0009D0  5034               	movf	dtoa@n^0,w,c
  1436  0009D2  1035               	iorwf	(dtoa@n+1)^0,w,c
  1437  0009D4  1036               	iorwf	(dtoa@n+2)^0,w,c
  1438  0009D6  1037               	iorwf	(dtoa@n+3)^0,w,c
  1439  0009D8  1038               	iorwf	(dtoa@n+4)^0,w,c
  1440  0009DA  1039               	iorwf	(dtoa@n+5)^0,w,c
  1441  0009DC  103A               	iorwf	(dtoa@n+6)^0,w,c
  1442  0009DE  103B               	iorwf	(dtoa@n+7)^0,w,c
  1443  0009E0  A4D8               	btfss	status,2,c
  1444  0009E2  D775               	goto	l1710
  1445  0009E4  BE2F               	btfsc	(dtoa@p+1)^0,7,c
  1446  0009E6  D005               	goto	u1070
  1447  0009E8  502F               	movf	(dtoa@p+1)^0,w,c
  1448  0009EA  E102               	bnz	u1071
  1449  0009EC  042E               	decf	dtoa@p^0,w,c
  1450  0009EE  B0D8               	btfsc	status,0,c
  1451  0009F0                     u1071:
  1452  0009F0  D76E               	goto	l1710
  1453  0009F2                     u1070:
  1454  0009F2  BE31               	btfsc	(dtoa@w+1)^0,7,c
  1455  0009F4  D007               	goto	u1090
  1456  0009F6  5031               	movf	(dtoa@w+1)^0,w,c
  1457  0009F8  E103               	bnz	u1080
  1458  0009FA  0430               	decf	dtoa@w^0,w,c
  1459  0009FC  A0D8               	btfss	status,0,c
  1460  0009FE  D002               	goto	u1090
  1461  000A00                     u1080:
  1462  000A00  B25D               	btfsc	_flags^0,1,c
  1463  000A02  D765               	goto	l1710
  1464  000A04                     u1090:
  1465                           
  1466                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  1467  000A04  5032               	movf	dtoa@s^0,w,c
  1468  000A06  1033               	iorwf	(dtoa@s+1)^0,w,c
  1469  000A08  A4D8               	btfss	status,2,c
  1470  000A0A  D002               	goto	u1110
  1471  000A0C  A45D               	btfss	_flags^0,2,c
  1472  000A0E  D015               	goto	l1744
  1473  000A10                     u1110:
  1474                           
  1475                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 322:         --i;
  1476  000A10  063C               	decf	dtoa@i^0,f,c
  1477  000A12  A0D8               	btfss	status,0,c
  1478  000A14  063D               	decf	(dtoa@i+1)^0,f,c
  1479                           
  1480                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  1481  000A16  5032               	movf	dtoa@s^0,w,c
  1482  000A18  1033               	iorwf	(dtoa@s+1)^0,w,c
  1483  000A1A  A4D8               	btfss	status,2,c
  1484  000A1C  D004               	goto	l1740
  1485  000A1E  0E00               	movlw	0
  1486  000A20  6E2D               	movwf	(_dtoa$1063+1)^0,c
  1487  000A22  0E2B               	movlw	43
  1488  000A24  D003               	goto	L1
  1489  000A26                     l1740:
  1490  000A26  0E00               	movlw	0
  1491  000A28  6E2D               	movwf	(_dtoa$1063+1)^0,c
  1492  000A2A  0E2D               	movlw	45
  1493  000A2C                     L1:
  1494  000A2C  6E2C               	movwf	_dtoa$1063^0,c
  1495  000A2E  503C               	movf	dtoa@i^0,w,c
  1496  000A30  0F66               	addlw	low _dbuf
  1497  000A32  6ED9               	movwf	fsr2l,c
  1498  000A34  6ADA               	clrf	fsr2h,c
  1499  000A36  C02C  FFDF         	movff	_dtoa$1063,indf2
  1500  000A3A                     l1744:
  1501                           
  1502                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  1503  000A3A  C01B  F00E         	movff	dtoa@fp,pad@fp
  1504  000A3E  503C               	movf	dtoa@i^0,w,c
  1505  000A40  0F66               	addlw	low _dbuf
  1506  000A42  6E0F               	movwf	pad@buf^0,c
  1507  000A44  C030  F010         	movff	dtoa@w,pad@p
  1508  000A48  C031  F011         	movff	dtoa@w+1,pad@p+1
  1509  000A4C  EC4A  F00A         	call	_pad	;wreg free
  1510  000A50  C00E  F01B         	movff	?_pad,?_dtoa
  1511  000A54  C00F  F01C         	movff	?_pad+1,?_dtoa+1
  1512  000A58  0012               	return		;funcret
  1513  000A5A                     __end_of_dtoa:
  1514                           	callstack 0
  1515                           
  1516 ;; *************** function _pad *****************
  1517 ;; Defined at:
  1518 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  1519 ;; Parameters:    Size  Location     Type
  1520 ;;  fp              1   13[COMRAM] PTR struct _IO_FILE
  1521 ;;		 -> sprintf@f(5), 
  1522 ;;  buf             1   14[COMRAM] PTR unsigned char 
  1523 ;;		 -> dbuf(32), 
  1524 ;;  p               2   15[COMRAM] int 
  1525 ;; Auto vars:     Size  Location     Type
  1526 ;;  w               2   20[COMRAM] int 
  1527 ;;  i               2   18[COMRAM] int 
  1528 ;; Return value:  Size  Location     Type
  1529 ;;                  2   13[COMRAM] int 
  1530 ;; Registers used:
  1531 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1532 ;; Tracked objects:
  1533 ;;		On entry : 0/0
  1534 ;;		On exit  : 0/0
  1535 ;;		Unchanged: 0/0
  1536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1537 ;;      Params:         4       0       0       0       0       0       0       0       0
  1538 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1539 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1540 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1541 ;;Total ram usage:        9 bytes
  1542 ;; Hardware stack levels used:    1
  1543 ;; Hardware stack levels required when called:    3
  1544 ;; This function calls:
  1545 ;;		_fputc
  1546 ;;		_fputs
  1547 ;;		_strlen
  1548 ;; This function is called by:
  1549 ;;		_dtoa
  1550 ;; This function uses a non-reentrant model
  1551 ;;
  1552                           
  1553                           	psect	text5
  1554  001494                     __ptext5:
  1555                           	callstack 0
  1556  001494                     _pad:
  1557                           	callstack 23
  1558                           
  1559                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  1560                           
  1561                           ;incstack = 0
  1562  001494  A05D               	btfss	_flags^0,0,c
  1563  001496  D006               	goto	l1664
  1564                           
  1565                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  1566  001498  C00F  F009         	movff	pad@buf,fputs@s
  1567  00149C  C00E  F00A         	movff	pad@fp,fputs@fp
  1568  0014A0  EC62  F00B         	call	_fputs	;wreg free
  1569  0014A4                     l1664:
  1570                           
  1571                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  1572  0014A4  BE11               	btfsc	(pad@p+1)^0,7,c
  1573  0014A6  D005               	goto	l1668
  1574  0014A8  C010  F015         	movff	pad@p,pad@w
  1575  0014AC  C011  F016         	movff	pad@p+1,pad@w+1
  1576  0014B0  D004               	goto	l877
  1577  0014B2                     l1668:
  1578  0014B2  0E00               	movlw	0
  1579  0014B4  6E16               	movwf	(pad@w+1)^0,c
  1580  0014B6  0E00               	movlw	0
  1581  0014B8  6E15               	movwf	pad@w^0,c
  1582  0014BA                     l877:
  1583                           
  1584                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  1585  0014BA  0E00               	movlw	0
  1586  0014BC  6E14               	movwf	(pad@i+1)^0,c
  1587  0014BE  0E00               	movlw	0
  1588  0014C0  6E13               	movwf	pad@i^0,c
  1589                           
  1590                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  1591  0014C2  D00A               	goto	l1674
  1592  0014C4                     l1670:
  1593                           
  1594                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  1595  0014C4  0E00               	movlw	0
  1596  0014C6  6E02               	movwf	(fputc@c+1)^0,c
  1597  0014C8  0E20               	movlw	32
  1598  0014CA  6E01               	movwf	fputc@c^0,c
  1599  0014CC  C00E  F003         	movff	pad@fp,fputc@fp
  1600  0014D0  EC0A  F00A         	call	_fputc	;wreg free
  1601                           
  1602                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 86:         ++i;
  1603  0014D4  4A13               	infsnz	pad@i^0,f,c
  1604  0014D6  2A14               	incf	(pad@i+1)^0,f,c
  1605  0014D8                     l1674:
  1606                           
  1607                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  1608  0014D8  5015               	movf	pad@w^0,w,c
  1609  0014DA  5C13               	subwf	pad@i^0,w,c
  1610  0014DC  5014               	movf	(pad@i+1)^0,w,c
  1611  0014DE  0A80               	xorlw	128
  1612  0014E0  6E12               	movwf	??_pad^0,c
  1613  0014E2  5016               	movf	(pad@w+1)^0,w,c
  1614  0014E4  0A80               	xorlw	128
  1615  0014E6  5812               	subwfb	??_pad^0,w,c
  1616  0014E8  A0D8               	btfss	status,0,c
  1617  0014EA  D7EC               	goto	l1670
  1618                           
  1619                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  1620  0014EC  B05D               	btfsc	_flags^0,0,c
  1621  0014EE  D006               	goto	l1678
  1622                           
  1623                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  1624  0014F0  C00F  F009         	movff	pad@buf,fputs@s
  1625  0014F4  C00E  F00A         	movff	pad@fp,fputs@fp
  1626  0014F8  EC62  F00B         	call	_fputs	;wreg free
  1627  0014FC                     l1678:
  1628                           
  1629                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  1630  0014FC  C00F  F001         	movff	pad@buf,strlen@s
  1631  001500  EC8F  F00B         	call	_strlen	;wreg free
  1632  001504  5015               	movf	pad@w^0,w,c
  1633  001506  2401               	addwf	?_strlen^0,w,c
  1634  001508  6E0E               	movwf	?_pad^0,c
  1635  00150A  5016               	movf	(pad@w+1)^0,w,c
  1636  00150C  2002               	addwfc	(?_strlen+1)^0,w,c
  1637  00150E  6E0F               	movwf	(?_pad+1)^0,c
  1638  001510  0012               	return		;funcret
  1639  001512                     __end_of_pad:
  1640                           	callstack 0
  1641                           
  1642 ;; *************** function _strlen *****************
  1643 ;; Defined at:
  1644 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strlen.c"
  1645 ;; Parameters:    Size  Location     Type
  1646 ;;  s               1    0[COMRAM] PTR const unsigned char 
  1647 ;;		 -> dbuf(32), 
  1648 ;; Auto vars:     Size  Location     Type
  1649 ;;  a               1    2[COMRAM] PTR const unsigned char 
  1650 ;;		 -> dbuf(32), 
  1651 ;; Return value:  Size  Location     Type
  1652 ;;                  2    0[COMRAM] unsigned int 
  1653 ;; Registers used:
  1654 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1655 ;; Tracked objects:
  1656 ;;		On entry : 0/0
  1657 ;;		On exit  : 0/0
  1658 ;;		Unchanged: 0/0
  1659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1660 ;;      Params:         2       0       0       0       0       0       0       0       0
  1661 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1662 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1663 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1664 ;;Total ram usage:        3 bytes
  1665 ;; Hardware stack levels used:    1
  1666 ;; This function calls:
  1667 ;;		Nothing
  1668 ;; This function is called by:
  1669 ;;		_pad
  1670 ;; This function uses a non-reentrant model
  1671 ;;
  1672                           
  1673                           	psect	text6
  1674  00171E                     __ptext6:
  1675                           	callstack 0
  1676  00171E                     _strlen:
  1677                           	callstack 25
  1678                           
  1679                           ;incstack = 0
  1680  00171E  C001  F003         	movff	strlen@s,strlen@a
  1681  001722  D001               	goto	l1574
  1682  001724                     l1572:
  1683  001724  2A01               	incf	strlen@s^0,f,c
  1684  001726                     l1574:
  1685  001726  5001               	movf	strlen@s^0,w,c
  1686  001728  6ED9               	movwf	fsr2l,c
  1687  00172A  6ADA               	clrf	fsr2h,c
  1688  00172C  50DF               	movf	indf2,w,c
  1689  00172E  A4D8               	btfss	status,2,c
  1690  001730  D7F9               	goto	l1572
  1691  001732  5003               	movf	strlen@a^0,w,c
  1692  001734  5C01               	subwf	strlen@s^0,w,c
  1693  001736  6E01               	movwf	?_strlen^0,c
  1694  001738  6A02               	clrf	(?_strlen+1)^0,c
  1695  00173A  BE01               	btfsc	?_strlen^0,7,c
  1696  00173C  0602               	decf	(?_strlen+1)^0,f,c
  1697  00173E  0012               	return		;funcret
  1698  001740                     __end_of_strlen:
  1699                           	callstack 0
  1700                           
  1701 ;; *************** function _fputs *****************
  1702 ;; Defined at:
  1703 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputs.c"
  1704 ;; Parameters:    Size  Location     Type
  1705 ;;  s               1    8[COMRAM] PTR const unsigned char 
  1706 ;;		 -> dbuf(32), 
  1707 ;;  fp              1    9[COMRAM] PTR struct _IO_FILE
  1708 ;;		 -> sprintf@f(5), 
  1709 ;; Auto vars:     Size  Location     Type
  1710 ;;  i               2   11[COMRAM] int 
  1711 ;;  c               1   10[COMRAM] unsigned char 
  1712 ;; Return value:  Size  Location     Type
  1713 ;;                  2    8[COMRAM] int 
  1714 ;; Registers used:
  1715 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1716 ;; Tracked objects:
  1717 ;;		On entry : 0/0
  1718 ;;		On exit  : 0/0
  1719 ;;		Unchanged: 0/0
  1720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1721 ;;      Params:         2       0       0       0       0       0       0       0       0
  1722 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1723 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1724 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1725 ;;Total ram usage:        5 bytes
  1726 ;; Hardware stack levels used:    1
  1727 ;; Hardware stack levels required when called:    2
  1728 ;; This function calls:
  1729 ;;		_fputc
  1730 ;; This function is called by:
  1731 ;;		_pad
  1732 ;; This function uses a non-reentrant model
  1733 ;;
  1734                           
  1735                           	psect	text7
  1736  0016C4                     __ptext7:
  1737                           	callstack 0
  1738  0016C4                     _fputs:
  1739                           	callstack 23
  1740                           
  1741                           ;incstack = 0
  1742  0016C4  0E00               	movlw	0
  1743  0016C6  6E0D               	movwf	(fputs@i+1)^0,c
  1744  0016C8  0E00               	movlw	0
  1745  0016CA  6E0C               	movwf	fputs@i^0,c
  1746  0016CC  D009               	goto	l1568
  1747  0016CE                     l1564:
  1748  0016CE  C00B  F001         	movff	fputs@c,fputc@c
  1749  0016D2  6A02               	clrf	(fputc@c+1)^0,c
  1750  0016D4  C00A  F003         	movff	fputs@fp,fputc@fp
  1751  0016D8  EC0A  F00A         	call	_fputc	;wreg free
  1752  0016DC  4A0C               	infsnz	fputs@i^0,f,c
  1753  0016DE  2A0D               	incf	(fputs@i+1)^0,f,c
  1754  0016E0                     l1568:
  1755  0016E0  5009               	movf	fputs@s^0,w,c
  1756  0016E2  240C               	addwf	fputs@i^0,w,c
  1757  0016E4  6ED9               	movwf	fsr2l,c
  1758  0016E6  6ADA               	clrf	fsr2h,c
  1759  0016E8  50DF               	movf	indf2,w,c
  1760  0016EA  6E0B               	movwf	fputs@c^0,c
  1761  0016EC  500B               	movf	fputs@c^0,w,c
  1762  0016EE  B4D8               	btfsc	status,2,c
  1763  0016F0  0012               	return	
  1764  0016F2  D7ED               	goto	l1564
  1765  0016F4                     __end_of_fputs:
  1766                           	callstack 0
  1767                           
  1768 ;; *************** function _fputc *****************
  1769 ;; Defined at:
  1770 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputc.c"
  1771 ;; Parameters:    Size  Location     Type
  1772 ;;  c               2    0[COMRAM] int 
  1773 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  1774 ;;		 -> sprintf@f(5), 
  1775 ;; Auto vars:     Size  Location     Type
  1776 ;;		None
  1777 ;; Return value:  Size  Location     Type
  1778 ;;                  2    0[COMRAM] int 
  1779 ;; Registers used:
  1780 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1781 ;; Tracked objects:
  1782 ;;		On entry : 0/0
  1783 ;;		On exit  : 0/0
  1784 ;;		Unchanged: 0/0
  1785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1786 ;;      Params:         3       0       0       0       0       0       0       0       0
  1787 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1788 ;;      Temps:          5       0       0       0       0       0       0       0       0
  1789 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1790 ;;Total ram usage:        8 bytes
  1791 ;; Hardware stack levels used:    1
  1792 ;; Hardware stack levels required when called:    1
  1793 ;; This function calls:
  1794 ;;		_putch
  1795 ;; This function is called by:
  1796 ;;		_pad
  1797 ;;		_vfpfcnvrt
  1798 ;;		_fputs
  1799 ;; This function uses a non-reentrant model
  1800 ;;
  1801                           
  1802                           	psect	text8
  1803  001414                     __ptext8:
  1804                           	callstack 0
  1805  001414                     _fputc:
  1806                           	callstack 26
  1807                           
  1808                           ;incstack = 0
  1809  001414  5003               	movf	fputc@fp^0,w,c
  1810  001416  B4D8               	btfsc	status,2,c
  1811  001418  D003               	goto	u750
  1812  00141A  5003               	movf	fputc@fp^0,w,c
  1813  00141C  A4D8               	btfss	status,2,c
  1814  00141E  D004               	goto	l1554
  1815  001420                     u750:
  1816  001420  5001               	movf	fputc@c^0,w,c
  1817  001422  EC06  F00C         	call	_putch
  1818  001426  0012               	return	
  1819  001428                     l1554:
  1820  001428  5003               	movf	fputc@fp^0,w,c
  1821  00142A  6ED9               	movwf	fsr2l,c
  1822  00142C  6ADA               	clrf	fsr2h,c
  1823  00142E  0E03               	movlw	3
  1824  001430  26D9               	addwf	fsr2l,f,c
  1825  001432  50DE               	movf	postinc2,w,c
  1826  001434  10DE               	iorwf	postinc2,w,c
  1827  001436  B4D8               	btfsc	status,2,c
  1828  001438  D014               	goto	u770
  1829  00143A  5003               	movf	fputc@fp^0,w,c
  1830  00143C  6ED9               	movwf	fsr2l,c
  1831  00143E  6ADA               	clrf	fsr2h,c
  1832  001440  0E03               	movlw	3
  1833  001442  26D9               	addwf	fsr2l,f,c
  1834  001444  5003               	movf	fputc@fp^0,w,c
  1835  001446  6EE1               	movwf	fsr1l,c
  1836  001448  6AE2               	clrf	fsr1h,c
  1837  00144A  0E01               	movlw	1
  1838  00144C  26E1               	addwf	fsr1l,f,c
  1839  00144E  50DE               	movf	postinc2,w,c
  1840  001450  5CE6               	subwf	postinc1,w,c
  1841  001452  50E6               	movf	postinc1,w,c
  1842  001454  0A80               	xorlw	128
  1843  001456  6E08               	movwf	(??_fputc+4)^0,c
  1844  001458  50DE               	movf	postinc2,w,c
  1845  00145A  0A80               	xorlw	128
  1846  00145C  5808               	subwfb	(??_fputc+4)^0,w,c
  1847  00145E  B0D8               	btfsc	status,0,c
  1848  001460  0012               	return	
  1849  001462                     u770:
  1850  001462  5003               	movf	fputc@fp^0,w,c
  1851  001464  6ED9               	movwf	fsr2l,c
  1852  001466  6ADA               	clrf	fsr2h,c
  1853  001468  0E01               	movlw	1
  1854  00146A  26D9               	addwf	fsr2l,f,c
  1855  00146C  50DF               	movf	indf2,w,c
  1856  00146E  6E04               	movwf	??_fputc^0,c
  1857  001470  5003               	movf	fputc@fp^0,w,c
  1858  001472  6ED9               	movwf	fsr2l,c
  1859  001474  6ADA               	clrf	fsr2h,c
  1860  001476  50DF               	movf	indf2,w,c
  1861  001478  2404               	addwf	??_fputc^0,w,c
  1862  00147A  6ED9               	movwf	fsr2l,c
  1863  00147C  6ADA               	clrf	fsr2h,c
  1864  00147E  C001  FFDF         	movff	fputc@c,indf2
  1865  001482  5003               	movf	fputc@fp^0,w,c
  1866  001484  6ED9               	movwf	fsr2l,c
  1867  001486  6ADA               	clrf	fsr2h,c
  1868  001488  0E01               	movlw	1
  1869  00148A  26D9               	addwf	fsr2l,f,c
  1870  00148C  2ADE               	incf	postinc2,f,c
  1871  00148E  0E00               	movlw	0
  1872  001490  22DD               	addwfc	postdec2,f,c
  1873  001492  0012               	return		;funcret
  1874  001494                     __end_of_fputc:
  1875                           	callstack 0
  1876                           
  1877 ;; *************** function _putch *****************
  1878 ;; Defined at:
  1879 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\putch.c"
  1880 ;; Parameters:    Size  Location     Type
  1881 ;;  c               1    wreg     unsigned char 
  1882 ;; Auto vars:     Size  Location     Type
  1883 ;;  c               1    0[COMRAM] unsigned char 
  1884 ;; Return value:  Size  Location     Type
  1885 ;;                  1    wreg      void 
  1886 ;; Registers used:
  1887 ;;		wreg
  1888 ;; Tracked objects:
  1889 ;;		On entry : 0/0
  1890 ;;		On exit  : 0/0
  1891 ;;		Unchanged: 0/0
  1892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1893 ;;      Params:         0       0       0       0       0       0       0       0       0
  1894 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1895 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1896 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1897 ;;Total ram usage:        0 bytes
  1898 ;; Hardware stack levels used:    1
  1899 ;; This function calls:
  1900 ;;		Nothing
  1901 ;; This function is called by:
  1902 ;;		_fputc
  1903 ;; This function uses a non-reentrant model
  1904 ;;
  1905                           
  1906                           	psect	text9
  1907  00180C                     __ptext9:
  1908                           	callstack 0
  1909  00180C                     _putch:
  1910                           	callstack 26
  1911                           
  1912                           ;incstack = 0
  1913  00180C  0012               	return		;funcret
  1914  00180E                     __end_of_putch:
  1915                           	callstack 0
  1916                           
  1917 ;; *************** function _abs *****************
  1918 ;; Defined at:
  1919 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\abs.c"
  1920 ;; Parameters:    Size  Location     Type
  1921 ;;  a               2   18[COMRAM] int 
  1922 ;; Auto vars:     Size  Location     Type
  1923 ;;		None
  1924 ;; Return value:  Size  Location     Type
  1925 ;;                  2   18[COMRAM] int 
  1926 ;; Registers used:
  1927 ;;		wreg, status,2, status,0
  1928 ;; Tracked objects:
  1929 ;;		On entry : 0/0
  1930 ;;		On exit  : 0/0
  1931 ;;		Unchanged: 0/0
  1932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1933 ;;      Params:         2       0       0       0       0       0       0       0       0
  1934 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1935 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1936 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1937 ;;Total ram usage:        4 bytes
  1938 ;; Hardware stack levels used:    1
  1939 ;; This function calls:
  1940 ;;		Nothing
  1941 ;; This function is called by:
  1942 ;;		_dtoa
  1943 ;; This function uses a non-reentrant model
  1944 ;;
  1945                           
  1946                           	psect	text10
  1947  001692                     __ptext10:
  1948                           	callstack 0
  1949  001692                     _abs:
  1950                           	callstack 26
  1951                           
  1952                           ;incstack = 0
  1953  001692  BE14               	btfsc	(abs@a+1)^0,7,c
  1954  001694  D005               	goto	u970
  1955  001696  5014               	movf	(abs@a+1)^0,w,c
  1956  001698  E110               	bnz	l926
  1957  00169A  0413               	decf	abs@a^0,w,c
  1958  00169C  B0D8               	btfsc	status,0,c
  1959  00169E  D00D               	goto	l926
  1960  0016A0                     u970:
  1961  0016A0  C013  F015         	movff	abs@a,??_abs
  1962  0016A4  C014  F016         	movff	abs@a+1,??_abs+1
  1963  0016A8  1E15               	comf	??_abs^0,f,c
  1964  0016AA  1E16               	comf	(??_abs+1)^0,f,c
  1965  0016AC  4A15               	infsnz	??_abs^0,f,c
  1966  0016AE  2A16               	incf	(??_abs+1)^0,f,c
  1967  0016B0  C015  F013         	movff	??_abs,?_abs
  1968  0016B4  C016  F014         	movff	??_abs+1,?_abs+1
  1969  0016B8  0012               	return	
  1970  0016BA                     l926:
  1971  0016BA  C013  F013         	movff	abs@a,?_abs
  1972  0016BE  C014  F014         	movff	abs@a+1,?_abs+1
  1973  0016C2  0012               	return		;funcret
  1974  0016C4                     __end_of_abs:
  1975                           	callstack 0
  1976                           
  1977 ;; *************** function ___aomod *****************
  1978 ;; Defined at:
  1979 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aomod.c"
  1980 ;; Parameters:    Size  Location     Type
  1981 ;;  dividend        8    0[COMRAM] long long 
  1982 ;;  divisor         8    8[COMRAM] long long 
  1983 ;; Auto vars:     Size  Location     Type
  1984 ;;  sign            1   17[COMRAM] unsigned char 
  1985 ;;  counter         1   16[COMRAM] unsigned char 
  1986 ;; Return value:  Size  Location     Type
  1987 ;;                  8    0[COMRAM] long long 
  1988 ;; Registers used:
  1989 ;;		wreg, status,2, status,0
  1990 ;; Tracked objects:
  1991 ;;		On entry : 0/0
  1992 ;;		On exit  : 0/0
  1993 ;;		Unchanged: 0/0
  1994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1995 ;;      Params:        16       0       0       0       0       0       0       0       0
  1996 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1997 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1998 ;;      Totals:        18       0       0       0       0       0       0       0       0
  1999 ;;Total ram usage:       18 bytes
  2000 ;; Hardware stack levels used:    1
  2001 ;; This function calls:
  2002 ;;		Nothing
  2003 ;; This function is called by:
  2004 ;;		_dtoa
  2005 ;; This function uses a non-reentrant model
  2006 ;;
  2007                           
  2008                           	psect	text11
  2009  000CE0                     __ptext11:
  2010                           	callstack 0
  2011  000CE0                     ___aomod:
  2012                           	callstack 26
  2013                           
  2014                           ;incstack = 0
  2015  000CE0  0E00               	movlw	0
  2016  000CE2  6E12               	movwf	___aomod@sign^0,c
  2017  000CE4  AE08               	btfss	(___aomod@dividend+7)^0,7,c
  2018  000CE6  D012               	goto	l1632
  2019  000CE8  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2020  000CEA  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2021  000CEC  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2022  000CEE  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2023  000CF0  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2024  000CF2  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2025  000CF4  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2026  000CF6  6C01               	negf	___aomod@dividend^0,c
  2027  000CF8  0E00               	movlw	0
  2028  000CFA  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2029  000CFC  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2030  000CFE  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2031  000D00  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2032  000D02  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2033  000D04  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2034  000D06  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2035  000D08  0E01               	movlw	1
  2036  000D0A  6E12               	movwf	___aomod@sign^0,c
  2037  000D0C                     l1632:
  2038  000D0C  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  2039  000D0E  D010               	goto	l1636
  2040  000D10  1E10               	comf	(___aomod@divisor+7)^0,f,c
  2041  000D12  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  2042  000D14  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  2043  000D16  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  2044  000D18  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  2045  000D1A  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  2046  000D1C  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  2047  000D1E  6C09               	negf	___aomod@divisor^0,c
  2048  000D20  0E00               	movlw	0
  2049  000D22  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  2050  000D24  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  2051  000D26  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  2052  000D28  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  2053  000D2A  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  2054  000D2C  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  2055  000D2E  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  2056  000D30                     l1636:
  2057  000D30  5009               	movf	___aomod@divisor^0,w,c
  2058  000D32  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  2059  000D34  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  2060  000D36  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  2061  000D38  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  2062  000D3A  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  2063  000D3C  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  2064  000D3E  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  2065  000D40  B4D8               	btfsc	status,2,c
  2066  000D42  D03C               	goto	l1652
  2067  000D44  0E01               	movlw	1
  2068  000D46  6E11               	movwf	___aomod@counter^0,c
  2069  000D48  D00A               	goto	l1642
  2070  000D4A                     l1640:
  2071  000D4A  90D8               	bcf	status,0,c
  2072  000D4C  3609               	rlcf	___aomod@divisor^0,f,c
  2073  000D4E  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  2074  000D50  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  2075  000D52  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  2076  000D54  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  2077  000D56  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  2078  000D58  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  2079  000D5A  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  2080  000D5C  2A11               	incf	___aomod@counter^0,f,c
  2081  000D5E                     l1642:
  2082  000D5E  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  2083  000D60  D7F4               	goto	l1640
  2084  000D62                     u900:
  2085  000D62  5009               	movf	___aomod@divisor^0,w,c
  2086  000D64  5C01               	subwf	___aomod@dividend^0,w,c
  2087  000D66  500A               	movf	(___aomod@divisor+1)^0,w,c
  2088  000D68  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  2089  000D6A  500B               	movf	(___aomod@divisor+2)^0,w,c
  2090  000D6C  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  2091  000D6E  500C               	movf	(___aomod@divisor+3)^0,w,c
  2092  000D70  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  2093  000D72  500D               	movf	(___aomod@divisor+4)^0,w,c
  2094  000D74  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  2095  000D76  500E               	movf	(___aomod@divisor+5)^0,w,c
  2096  000D78  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  2097  000D7A  500F               	movf	(___aomod@divisor+6)^0,w,c
  2098  000D7C  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  2099  000D7E  5010               	movf	(___aomod@divisor+7)^0,w,c
  2100  000D80  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  2101  000D82  A0D8               	btfss	status,0,c
  2102  000D84  D010               	goto	l1648
  2103  000D86  5009               	movf	___aomod@divisor^0,w,c
  2104  000D88  5E01               	subwf	___aomod@dividend^0,f,c
  2105  000D8A  500A               	movf	(___aomod@divisor+1)^0,w,c
  2106  000D8C  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  2107  000D8E  500B               	movf	(___aomod@divisor+2)^0,w,c
  2108  000D90  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  2109  000D92  500C               	movf	(___aomod@divisor+3)^0,w,c
  2110  000D94  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  2111  000D96  500D               	movf	(___aomod@divisor+4)^0,w,c
  2112  000D98  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  2113  000D9A  500E               	movf	(___aomod@divisor+5)^0,w,c
  2114  000D9C  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  2115  000D9E  500F               	movf	(___aomod@divisor+6)^0,w,c
  2116  000DA0  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  2117  000DA2  5010               	movf	(___aomod@divisor+7)^0,w,c
  2118  000DA4  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  2119  000DA6                     l1648:
  2120  000DA6  90D8               	bcf	status,0,c
  2121  000DA8  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  2122  000DAA  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  2123  000DAC  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  2124  000DAE  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  2125  000DB0  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  2126  000DB2  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  2127  000DB4  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  2128  000DB6  3209               	rrcf	___aomod@divisor^0,f,c
  2129  000DB8  2E11               	decfsz	___aomod@counter^0,f,c
  2130  000DBA  D7D3               	goto	u900
  2131  000DBC                     l1652:
  2132  000DBC  5012               	movf	___aomod@sign^0,w,c
  2133  000DBE  B4D8               	btfsc	status,2,c
  2134  000DC0  D010               	goto	l1656
  2135  000DC2  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2136  000DC4  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2137  000DC6  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2138  000DC8  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2139  000DCA  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2140  000DCC  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2141  000DCE  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2142  000DD0  6C01               	negf	___aomod@dividend^0,c
  2143  000DD2  0E00               	movlw	0
  2144  000DD4  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2145  000DD6  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2146  000DD8  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2147  000DDA  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2148  000DDC  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2149  000DDE  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2150  000DE0  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2151  000DE2                     l1656:
  2152  000DE2  C001  F001         	movff	___aomod@dividend,?___aomod
  2153  000DE6  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  2154  000DEA  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  2155  000DEE  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  2156  000DF2  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  2157  000DF6  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  2158  000DFA  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  2159  000DFE  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  2160  000E02  0012               	return		;funcret
  2161  000E04                     __end_of___aomod:
  2162                           	callstack 0
  2163                           
  2164 ;; *************** function ___aodiv *****************
  2165 ;; Defined at:
  2166 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aodiv.c"
  2167 ;; Parameters:    Size  Location     Type
  2168 ;;  dividend        8    0[COMRAM] long long 
  2169 ;;  divisor         8    8[COMRAM] long long 
  2170 ;; Auto vars:     Size  Location     Type
  2171 ;;  quotient        8   18[COMRAM] long long 
  2172 ;;  sign            1   17[COMRAM] unsigned char 
  2173 ;;  counter         1   16[COMRAM] unsigned char 
  2174 ;; Return value:  Size  Location     Type
  2175 ;;                  8    0[COMRAM] long long 
  2176 ;; Registers used:
  2177 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2178 ;; Tracked objects:
  2179 ;;		On entry : 0/0
  2180 ;;		On exit  : 0/0
  2181 ;;		Unchanged: 0/0
  2182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2183 ;;      Params:        16       0       0       0       0       0       0       0       0
  2184 ;;      Locals:        10       0       0       0       0       0       0       0       0
  2185 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2186 ;;      Totals:        26       0       0       0       0       0       0       0       0
  2187 ;;Total ram usage:       26 bytes
  2188 ;; Hardware stack levels used:    1
  2189 ;; This function calls:
  2190 ;;		Nothing
  2191 ;; This function is called by:
  2192 ;;		_dtoa
  2193 ;; This function uses a non-reentrant model
  2194 ;;
  2195                           
  2196                           	psect	text12
  2197  000A5A                     __ptext12:
  2198                           	callstack 0
  2199  000A5A                     ___aodiv:
  2200                           	callstack 26
  2201                           
  2202                           ;incstack = 0
  2203  000A5A  0E00               	movlw	0
  2204  000A5C  6E12               	movwf	___aodiv@sign^0,c
  2205  000A5E  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  2206  000A60  D012               	goto	l1588
  2207  000A62  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  2208  000A64  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  2209  000A66  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  2210  000A68  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  2211  000A6A  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  2212  000A6C  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  2213  000A6E  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  2214  000A70  6C09               	negf	___aodiv@divisor^0,c
  2215  000A72  0E00               	movlw	0
  2216  000A74  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  2217  000A76  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  2218  000A78  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  2219  000A7A  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  2220  000A7C  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  2221  000A7E  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  2222  000A80  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  2223  000A82  0E01               	movlw	1
  2224  000A84  6E12               	movwf	___aodiv@sign^0,c
  2225  000A86                     l1588:
  2226  000A86  AE08               	btfss	(___aodiv@dividend+7)^0,7,c
  2227  000A88  D012               	goto	l1594
  2228  000A8A  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  2229  000A8C  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  2230  000A8E  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  2231  000A90  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  2232  000A92  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  2233  000A94  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  2234  000A96  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  2235  000A98  6C01               	negf	___aodiv@dividend^0,c
  2236  000A9A  0E00               	movlw	0
  2237  000A9C  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  2238  000A9E  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  2239  000AA0  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  2240  000AA2  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  2241  000AA4  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  2242  000AA6  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  2243  000AA8  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  2244  000AAA  0E01               	movlw	1
  2245  000AAC  1A12               	xorwf	___aodiv@sign^0,f,c
  2246  000AAE                     l1594:
  2247  000AAE  EE20  F013         	lfsr	2,___aodiv@quotient
  2248  000AB2  0E07               	movlw	7
  2249  000AB4                     u821:
  2250  000AB4  6ADE               	clrf	postinc2,c
  2251  000AB6  06E8               	decf	wreg,f,c
  2252  000AB8  E2FD               	bc	u821
  2253  000ABA  5009               	movf	___aodiv@divisor^0,w,c
  2254  000ABC  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  2255  000ABE  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  2256  000AC0  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  2257  000AC2  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  2258  000AC4  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  2259  000AC6  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  2260  000AC8  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  2261  000ACA  B4D8               	btfsc	status,2,c
  2262  000ACC  D046               	goto	l1616
  2263  000ACE  0E01               	movlw	1
  2264  000AD0  6E11               	movwf	___aodiv@counter^0,c
  2265  000AD2  D00A               	goto	l1602
  2266  000AD4                     l1600:
  2267  000AD4  90D8               	bcf	status,0,c
  2268  000AD6  3609               	rlcf	___aodiv@divisor^0,f,c
  2269  000AD8  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  2270  000ADA  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  2271  000ADC  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  2272  000ADE  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  2273  000AE0  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  2274  000AE2  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  2275  000AE4  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  2276  000AE6  2A11               	incf	___aodiv@counter^0,f,c
  2277  000AE8                     l1602:
  2278  000AE8  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  2279  000AEA  D7F4               	goto	l1600
  2280  000AEC                     u840:
  2281  000AEC  90D8               	bcf	status,0,c
  2282  000AEE  3613               	rlcf	___aodiv@quotient^0,f,c
  2283  000AF0  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  2284  000AF2  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  2285  000AF4  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  2286  000AF6  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  2287  000AF8  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  2288  000AFA  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  2289  000AFC  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  2290  000AFE  5009               	movf	___aodiv@divisor^0,w,c
  2291  000B00  5C01               	subwf	___aodiv@dividend^0,w,c
  2292  000B02  500A               	movf	(___aodiv@divisor+1)^0,w,c
  2293  000B04  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  2294  000B06  500B               	movf	(___aodiv@divisor+2)^0,w,c
  2295  000B08  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  2296  000B0A  500C               	movf	(___aodiv@divisor+3)^0,w,c
  2297  000B0C  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  2298  000B0E  500D               	movf	(___aodiv@divisor+4)^0,w,c
  2299  000B10  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  2300  000B12  500E               	movf	(___aodiv@divisor+5)^0,w,c
  2301  000B14  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  2302  000B16  500F               	movf	(___aodiv@divisor+6)^0,w,c
  2303  000B18  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  2304  000B1A  5010               	movf	(___aodiv@divisor+7)^0,w,c
  2305  000B1C  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  2306  000B1E  A0D8               	btfss	status,0,c
  2307  000B20  D011               	goto	l1612
  2308  000B22  5009               	movf	___aodiv@divisor^0,w,c
  2309  000B24  5E01               	subwf	___aodiv@dividend^0,f,c
  2310  000B26  500A               	movf	(___aodiv@divisor+1)^0,w,c
  2311  000B28  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  2312  000B2A  500B               	movf	(___aodiv@divisor+2)^0,w,c
  2313  000B2C  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  2314  000B2E  500C               	movf	(___aodiv@divisor+3)^0,w,c
  2315  000B30  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  2316  000B32  500D               	movf	(___aodiv@divisor+4)^0,w,c
  2317  000B34  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  2318  000B36  500E               	movf	(___aodiv@divisor+5)^0,w,c
  2319  000B38  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  2320  000B3A  500F               	movf	(___aodiv@divisor+6)^0,w,c
  2321  000B3C  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  2322  000B3E  5010               	movf	(___aodiv@divisor+7)^0,w,c
  2323  000B40  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  2324  000B42  8013               	bsf	___aodiv@quotient^0,0,c
  2325  000B44                     l1612:
  2326  000B44  90D8               	bcf	status,0,c
  2327  000B46  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  2328  000B48  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  2329  000B4A  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  2330  000B4C  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  2331  000B4E  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  2332  000B50  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  2333  000B52  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  2334  000B54  3209               	rrcf	___aodiv@divisor^0,f,c
  2335  000B56  2E11               	decfsz	___aodiv@counter^0,f,c
  2336  000B58  D7C9               	goto	u840
  2337  000B5A                     l1616:
  2338  000B5A  5012               	movf	___aodiv@sign^0,w,c
  2339  000B5C  B4D8               	btfsc	status,2,c
  2340  000B5E  D010               	goto	l1620
  2341  000B60  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  2342  000B62  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  2343  000B64  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  2344  000B66  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  2345  000B68  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  2346  000B6A  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  2347  000B6C  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  2348  000B6E  6C13               	negf	___aodiv@quotient^0,c
  2349  000B70  0E00               	movlw	0
  2350  000B72  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  2351  000B74  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  2352  000B76  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  2353  000B78  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  2354  000B7A  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  2355  000B7C  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  2356  000B7E  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  2357  000B80                     l1620:
  2358  000B80  C013  F001         	movff	___aodiv@quotient,?___aodiv
  2359  000B84  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  2360  000B88  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  2361  000B8C  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  2362  000B90  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  2363  000B94  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  2364  000B98  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  2365  000B9C  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  2366  000BA0  0012               	return		;funcret
  2367  000BA2                     __end_of___aodiv:
  2368                           	callstack 0
  2369                           
  2370 ;; *************** function _Lcd_Out2 *****************
  2371 ;; Defined at:
  2372 ;;		line 117 in file "./LCD_HDD44780.h"
  2373 ;; Parameters:    Size  Location     Type
  2374 ;;  y               1    wreg     unsigned char 
  2375 ;;  x               1    3[COMRAM] unsigned char 
  2376 ;;  buffer          2    4[COMRAM] PTR unsigned char 
  2377 ;;		 -> STR_3(17), main@time(10), main@date(20), 
  2378 ;; Auto vars:     Size  Location     Type
  2379 ;;  y               1    8[COMRAM] unsigned char 
  2380 ;;  data            1    9[COMRAM] unsigned char 
  2381 ;; Return value:  Size  Location     Type
  2382 ;;                  1    wreg      void 
  2383 ;; Registers used:
  2384 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2385 ;; Tracked objects:
  2386 ;;		On entry : 0/0
  2387 ;;		On exit  : 0/0
  2388 ;;		Unchanged: 0/0
  2389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2390 ;;      Params:         3       0       0       0       0       0       0       0       0
  2391 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2392 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2393 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2394 ;;Total ram usage:        7 bytes
  2395 ;; Hardware stack levels used:    1
  2396 ;; Hardware stack levels required when called:    1
  2397 ;; This function calls:
  2398 ;;		_Lcd_Chr_CP
  2399 ;;		_Lcd_Cmd
  2400 ;; This function is called by:
  2401 ;;		_main
  2402 ;; This function uses a non-reentrant model
  2403 ;;
  2404                           
  2405                           	psect	text13
  2406  0012F4                     __ptext13:
  2407                           	callstack 0
  2408  0012F4                     _Lcd_Out2:
  2409                           	callstack 29
  2410                           
  2411                           ;incstack = 0
  2412                           ;Lcd_Out2@y stored from wreg
  2413  0012F4  6E09               	movwf	Lcd_Out2@y^0,c
  2414                           
  2415                           ;./LCD_HDD44780.h: 117: void Lcd_Out2(unsigned char y, unsigned char x, char *buffer);./
      +                          LCD_HDD44780.h: 118: {;./LCD_HDD44780.h: 119: unsigned char data;;./LCD_HDD44780.h: 120:
      +                           switch (y)
  2416  0012F6  D00D               	goto	l2008
  2417  0012F8                     l1998:
  2418  0012F8  5004               	movf	Lcd_Out2@x^0,w,c
  2419  0012FA  0F80               	addlw	128
  2420  0012FC  D008               	goto	L4
  2421  0012FE                     l2000:
  2422  0012FE  5004               	movf	Lcd_Out2@x^0,w,c
  2423  001300  0FC0               	addlw	192
  2424  001302  D005               	goto	L4
  2425  001304                     l2002:
  2426  001304  5004               	movf	Lcd_Out2@x^0,w,c
  2427  001306  0F94               	addlw	148
  2428  001308  D002               	goto	L4
  2429  00130A                     l2004:
  2430  00130A  5004               	movf	Lcd_Out2@x^0,w,c
  2431  00130C  0FD4               	addlw	212
  2432  00130E                     L4:
  2433  00130E  6E0A               	movwf	Lcd_Out2@data^0,c
  2434  001310  D014               	goto	l2010
  2435  001312                     l2008:
  2436  001312  5009               	movf	Lcd_Out2@y^0,w,c
  2437  001314  6E07               	movwf	??_Lcd_Out2^0,c
  2438  001316  6A08               	clrf	(??_Lcd_Out2+1)^0,c
  2439                           
  2440                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2441                           ; Switch size 1, requested type "simple"
  2442                           ; Number of cases is 1, Range of values is 0 to 0
  2443                           ; switch strategies available:
  2444                           ; Name         Instructions Cycles
  2445                           ; simple_byte            4     3 (average)
  2446                           ;	Chosen strategy is simple_byte
  2447  001318  5008               	movf	(??_Lcd_Out2+1)^0,w,c
  2448  00131A  0A00               	xorlw	0	; case 0
  2449  00131C  A4D8               	btfss	status,2,c
  2450  00131E  D00D               	goto	l2010
  2451                           
  2452                           ; Switch size 1, requested type "simple"
  2453                           ; Number of cases is 4, Range of values is 1 to 4
  2454                           ; switch strategies available:
  2455                           ; Name         Instructions Cycles
  2456                           ; simple_byte           13     7 (average)
  2457                           ;	Chosen strategy is simple_byte
  2458  001320  5007               	movf	??_Lcd_Out2^0,w,c
  2459  001322  0A01               	xorlw	1	; case 1
  2460  001324  B4D8               	btfsc	status,2,c
  2461  001326  D7E8               	goto	l1998
  2462  001328  0A03               	xorlw	3	; case 2
  2463  00132A  B4D8               	btfsc	status,2,c
  2464  00132C  D7E8               	goto	l2000
  2465  00132E  0A01               	xorlw	1	; case 3
  2466  001330  B4D8               	btfsc	status,2,c
  2467  001332  D7E8               	goto	l2002
  2468  001334  0A07               	xorlw	7	; case 4
  2469  001336  B4D8               	btfsc	status,2,c
  2470  001338  D7E8               	goto	l2004
  2471  00133A                     l2010:
  2472                           
  2473                           ;./LCD_HDD44780.h: 128: Lcd_Cmd(data);
  2474  00133A  500A               	movf	Lcd_Out2@data^0,w,c
  2475  00133C  EC94  F007         	call	_Lcd_Cmd
  2476                           
  2477                           ;./LCD_HDD44780.h: 129: while(*buffer)
  2478  001340  D014               	goto	l2016
  2479  001342                     l2012:
  2480                           
  2481                           ;./LCD_HDD44780.h: 130: {;./LCD_HDD44780.h: 131:     Lcd_Chr_CP(*buffer);
  2482  001342  C005  FFF6         	movff	Lcd_Out2@buffer,tblptrl
  2483  001346  C006  FFF7         	movff	Lcd_Out2@buffer+1,tblptrh
  2484  00134A  6AF8               	clrf	tblptru,c
  2485  00134C  0E07               	movlw	(high __ramtop+-1)
  2486  00134E  64F7               	cpfsgt	tblptrh,c
  2487  001350  D003               	bra	u1437
  2488  001352  0008               	tblrd		*
  2489  001354  50F5               	movf	tablat,w,c
  2490  001356  D005               	bra	u1430
  2491  001358                     u1437:
  2492  001358  CFF6 FFE1          	movff	tblptrl,fsr1l
  2493  00135C  CFF7 FFE2          	movff	tblptrh,fsr1h
  2494  001360  50E7               	movf	indf1,w,c
  2495  001362                     u1430:
  2496  001362  EC02  F007         	call	_Lcd_Chr_CP
  2497                           
  2498                           ;./LCD_HDD44780.h: 132:     buffer++;
  2499  001366  4A05               	infsnz	Lcd_Out2@buffer^0,f,c
  2500  001368  2A06               	incf	(Lcd_Out2@buffer+1)^0,f,c
  2501  00136A                     l2016:
  2502                           
  2503                           ;./LCD_HDD44780.h: 129: while(*buffer)
  2504  00136A  C005  FFF6         	movff	Lcd_Out2@buffer,tblptrl
  2505  00136E  C006  FFF7         	movff	Lcd_Out2@buffer+1,tblptrh
  2506  001372  6AF8               	clrf	tblptru,c
  2507  001374  0E07               	movlw	(high __ramtop+-1)
  2508  001376  64F7               	cpfsgt	tblptrh,c
  2509  001378  D003               	bra	u1447
  2510  00137A  0008               	tblrd		*
  2511  00137C  50F5               	movf	tablat,w,c
  2512  00137E  D005               	bra	u1440
  2513  001380                     u1447:
  2514  001380  CFF6 FFE1          	movff	tblptrl,fsr1l
  2515  001384  CFF7 FFE2          	movff	tblptrh,fsr1h
  2516  001388  50E7               	movf	indf1,w,c
  2517  00138A                     u1440:
  2518  00138A  0900               	iorlw	0
  2519  00138C  B4D8               	btfsc	status,2,c
  2520  00138E  0012               	return	
  2521  001390  D7D8               	goto	l2012
  2522  001392                     __end_of_Lcd_Out2:
  2523                           	callstack 0
  2524                           
  2525 ;; *************** function _Lcd_Chr_CP *****************
  2526 ;; Defined at:
  2527 ;;		line 138 in file "./LCD_HDD44780.h"
  2528 ;; Parameters:    Size  Location     Type
  2529 ;;  data            1    wreg     unsigned char 
  2530 ;; Auto vars:     Size  Location     Type
  2531 ;;  data            1    2[COMRAM] unsigned char 
  2532 ;; Return value:  Size  Location     Type
  2533 ;;                  1    wreg      void 
  2534 ;; Registers used:
  2535 ;;		wreg, status,2, status,0
  2536 ;; Tracked objects:
  2537 ;;		On entry : 0/0
  2538 ;;		On exit  : 0/0
  2539 ;;		Unchanged: 0/0
  2540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2541 ;;      Params:         0       0       0       0       0       0       0       0       0
  2542 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2543 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2544 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2545 ;;Total ram usage:        3 bytes
  2546 ;; Hardware stack levels used:    1
  2547 ;; This function calls:
  2548 ;;		Nothing
  2549 ;; This function is called by:
  2550 ;;		_Lcd_Out2
  2551 ;; This function uses a non-reentrant model
  2552 ;;
  2553                           
  2554                           	psect	text14
  2555  000E04                     __ptext14:
  2556                           	callstack 0
  2557  000E04                     _Lcd_Chr_CP:
  2558                           	callstack 29
  2559                           
  2560                           ;incstack = 0
  2561                           ;Lcd_Chr_CP@data stored from wreg
  2562  000E04  6E03               	movwf	Lcd_Chr_CP@data^0,c
  2563                           
  2564                           ;./LCD_HDD44780.h: 139: LATDbits.LATD5 = 0; LATDbits.LATD4 = 1;
  2565  000E06  9A8C               	bcf	140,5,c	;volatile
  2566  000E08  888C               	bsf	140,4,c	;volatile
  2567                           
  2568                           ;./LCD_HDD44780.h: 140: LATDbits.LATD3 = (data & 0b10000000)>>7; LATDbits.LATD2 = (data 
      +                          & 0b01000000)>>6;
  2569  000E0A  6A01               	clrf	??_Lcd_Chr_CP^0,c
  2570  000E0C  AE03               	btfss	Lcd_Chr_CP@data^0,7,c
  2571  000E0E  D001               	bra	u1295
  2572  000E10  2A01               	incf	??_Lcd_Chr_CP^0,f,c
  2573  000E12                     u1295:
  2574  000E12  0E01               	movlw	1
  2575  000E14  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  2576  000E16  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  2577  000E18  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  2578  000E1A  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  2579  000E1C  508C               	movf	140,w,c	;volatile
  2580  000E1E  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  2581  000E20  0BF7               	andlw	-9
  2582  000E22  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  2583  000E24  6E8C               	movwf	140,c	;volatile
  2584  000E26  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  2585  000E2A  0E06               	movlw	6
  2586  000E2C  6E02               	movwf	(??_Lcd_Chr_CP+1)^0,c
  2587  000E2E                     u1305:
  2588  000E2E  90D8               	bcf	status,0,c
  2589  000E30  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  2590  000E32  2E02               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  2591  000E34  D7FC               	goto	u1305
  2592  000E36  0E01               	movlw	1
  2593  000E38  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  2594  000E3A  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  2595  000E3C  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  2596  000E3E  508C               	movf	140,w,c	;volatile
  2597  000E40  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  2598  000E42  0BFB               	andlw	-5
  2599  000E44  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  2600  000E46  6E8C               	movwf	140,c	;volatile
  2601                           
  2602                           ;./LCD_HDD44780.h: 141: LATDbits.LATD1 = (data & 0b00100000)>>5; LATDbits.LATD0 = (data 
      +                          & 0b00010000)>>4;
  2603  000E48  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  2604  000E4C  0E05               	movlw	5
  2605  000E4E  6E02               	movwf	(??_Lcd_Chr_CP+1)^0,c
  2606  000E50                     u1315:
  2607  000E50  90D8               	bcf	status,0,c
  2608  000E52  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  2609  000E54  2E02               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  2610  000E56  D7FC               	goto	u1315
  2611  000E58  0E01               	movlw	1
  2612  000E5A  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  2613  000E5C  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  2614  000E5E  508C               	movf	140,w,c	;volatile
  2615  000E60  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  2616  000E62  0BFD               	andlw	-3
  2617  000E64  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  2618  000E66  6E8C               	movwf	140,c	;volatile
  2619  000E68  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  2620  000E6C  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
  2621  000E6E  0E0F               	movlw	15
  2622  000E70  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  2623  000E72  0E01               	movlw	1
  2624  000E74  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  2625  000E76  508C               	movf	140,w,c	;volatile
  2626  000E78  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  2627  000E7A  0BFE               	andlw	-2
  2628  000E7C  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  2629  000E7E  6E8C               	movwf	140,c	;volatile
  2630                           
  2631                           ;./LCD_HDD44780.h: 142: _delay(10);
  2632  000E80  0E03               	movlw	3
  2633  000E82                     u1487:
  2634  000E82  2EE8               	decfsz	wreg,f,c
  2635  000E84  D7FE               	bra	u1487
  2636  000E86  F000               	nop	
  2637                           
  2638                           ;./LCD_HDD44780.h: 143: LATDbits.LATD5 = 1; _delay((unsigned long)((5)*(4000000/4000000.
      +                          0))); LATDbits.LATD5 = 0;
  2639  000E88  8A8C               	bsf	140,5,c	;volatile
  2640  000E8A  D000               	nop2		;2 cycle nop
  2641  000E8C  D000               	nop2		;2 cycle nop
  2642  000E8E  F000               	nop	
  2643  000E90  9A8C               	bcf	140,5,c	;volatile
  2644                           
  2645                           ;./LCD_HDD44780.h: 144: LATDbits.LATD3 = (data & 0b00001000)>>3; LATDbits.LATD2 = (data 
      +                          & 0b00000100)>>2;
  2646  000E92  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  2647  000E96  90D8               	bcf	status,0,c
  2648  000E98  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  2649  000E9A  90D8               	bcf	status,0,c
  2650  000E9C  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  2651  000E9E  90D8               	bcf	status,0,c
  2652  000EA0  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  2653  000EA2  0E01               	movlw	1
  2654  000EA4  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  2655  000EA6  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  2656  000EA8  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  2657  000EAA  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  2658  000EAC  508C               	movf	140,w,c	;volatile
  2659  000EAE  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  2660  000EB0  0BF7               	andlw	-9
  2661  000EB2  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  2662  000EB4  6E8C               	movwf	140,c	;volatile
  2663  000EB6  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  2664  000EBA  90D8               	bcf	status,0,c
  2665  000EBC  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  2666  000EBE  90D8               	bcf	status,0,c
  2667  000EC0  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  2668  000EC2  0E01               	movlw	1
  2669  000EC4  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  2670  000EC6  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  2671  000EC8  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  2672  000ECA  508C               	movf	140,w,c	;volatile
  2673  000ECC  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  2674  000ECE  0BFB               	andlw	-5
  2675  000ED0  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  2676  000ED2  6E8C               	movwf	140,c	;volatile
  2677                           
  2678                           ;./LCD_HDD44780.h: 145: LATDbits.LATD1 = (data & 0b00000010)>>1; LATDbits.LATD0 = (data 
      +                          & 0b00000001);
  2679  000ED4  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  2680  000ED8  90D8               	bcf	status,0,c
  2681  000EDA  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  2682  000EDC  0E01               	movlw	1
  2683  000EDE  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  2684  000EE0  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  2685  000EE2  508C               	movf	140,w,c	;volatile
  2686  000EE4  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  2687  000EE6  0BFD               	andlw	-3
  2688  000EE8  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  2689  000EEA  6E8C               	movwf	140,c	;volatile
  2690  000EEC  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  2691  000EF0  0E01               	movlw	1
  2692  000EF2  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  2693  000EF4  508C               	movf	140,w,c	;volatile
  2694  000EF6  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  2695  000EF8  0BFE               	andlw	-2
  2696  000EFA  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  2697  000EFC  6E8C               	movwf	140,c	;volatile
  2698                           
  2699                           ;./LCD_HDD44780.h: 146: _delay(10);
  2700  000EFE  0E03               	movlw	3
  2701  000F00                     u1497:
  2702  000F00  2EE8               	decfsz	wreg,f,c
  2703  000F02  D7FE               	bra	u1497
  2704  000F04  F000               	nop	
  2705                           
  2706                           ;./LCD_HDD44780.h: 147: LATDbits.LATD5 = 1; _delay((unsigned long)((5)*(4000000/4000000.
      +                          0))); LATDbits.LATD5 = 0;
  2707  000F06  8A8C               	bsf	140,5,c	;volatile
  2708  000F08  D000               	nop2		;2 cycle nop
  2709  000F0A  D000               	nop2		;2 cycle nop
  2710  000F0C  F000               	nop	
  2711  000F0E  9A8C               	bcf	140,5,c	;volatile
  2712                           
  2713                           ;./LCD_HDD44780.h: 148: _delay((unsigned long)((5)*(4000000/4000000.0))); _delay((unsign
      +                          ed long)((5500)*(4000000/4000000.0)));
  2714  000F10  D000               	nop2		;2 cycle nop
  2715  000F12  D000               	nop2		;2 cycle nop
  2716  000F14  F000               	nop	
  2717  000F16  0E08               	movlw	8
  2718  000F18  6E01               	movwf	??_Lcd_Chr_CP^0,c
  2719  000F1A  0E23               	movlw	35
  2720  000F1C                     u1507:
  2721  000F1C  2EE8               	decfsz	wreg,f,c
  2722  000F1E  D7FE               	bra	u1507
  2723  000F20  2E01               	decfsz	??_Lcd_Chr_CP^0,f,c
  2724  000F22  D7FC               	bra	u1507
  2725  000F24  F000               	nop	
  2726  000F26  0012               	return		;funcret
  2727  000F28                     __end_of_Lcd_Chr_CP:
  2728                           	callstack 0
  2729                           
  2730 ;; *************** function _Lcd_Init *****************
  2731 ;; Defined at:
  2732 ;;		line 54 in file "./LCD_HDD44780.h"
  2733 ;; Parameters:    Size  Location     Type
  2734 ;;		None
  2735 ;; Auto vars:     Size  Location     Type
  2736 ;;  data            1    4[COMRAM] unsigned char 
  2737 ;; Return value:  Size  Location     Type
  2738 ;;                  1    wreg      void 
  2739 ;; Registers used:
  2740 ;;		wreg, status,2, status,0, cstack
  2741 ;; Tracked objects:
  2742 ;;		On entry : 0/0
  2743 ;;		On exit  : 0/0
  2744 ;;		Unchanged: 0/0
  2745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2746 ;;      Params:         0       0       0       0       0       0       0       0       0
  2747 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2748 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2749 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2750 ;;Total ram usage:        2 bytes
  2751 ;; Hardware stack levels used:    1
  2752 ;; Hardware stack levels required when called:    1
  2753 ;; This function calls:
  2754 ;;		_Lcd_Cmd
  2755 ;; This function is called by:
  2756 ;;		_main
  2757 ;; This function uses a non-reentrant model
  2758 ;;
  2759                           
  2760                           	psect	text15
  2761  001046                     __ptext15:
  2762                           	callstack 0
  2763  001046                     _Lcd_Init:
  2764                           	callstack 29
  2765                           
  2766                           ;./LCD_HDD44780.h: 55: unsigned char data;;./LCD_HDD44780.h: 56: TRISDbits.TRISD3 = 0;
  2767                           
  2768                           ;incstack = 0
  2769  001046  9695               	bcf	149,3,c	;volatile
  2770                           
  2771                           ;./LCD_HDD44780.h: 57: TRISDbits.TRISD2 = 0;
  2772  001048  9495               	bcf	149,2,c	;volatile
  2773                           
  2774                           ;./LCD_HDD44780.h: 58: TRISDbits.TRISD1 = 0;
  2775  00104A  9295               	bcf	149,1,c	;volatile
  2776                           
  2777                           ;./LCD_HDD44780.h: 59: TRISDbits.TRISD0 = 0;
  2778  00104C  9095               	bcf	149,0,c	;volatile
  2779                           
  2780                           ;./LCD_HDD44780.h: 60: TRISDbits.TRISD5 = 0;
  2781  00104E  9A95               	bcf	149,5,c	;volatile
  2782                           
  2783                           ;./LCD_HDD44780.h: 61: TRISDbits.TRISD4 = 0;
  2784  001050  9895               	bcf	149,4,c	;volatile
  2785                           
  2786                           ;./LCD_HDD44780.h: 62: LATDbits.LATD3 = 0;
  2787  001052  968C               	bcf	140,3,c	;volatile
  2788                           
  2789                           ;./LCD_HDD44780.h: 63: LATDbits.LATD2 = 0;
  2790  001054  948C               	bcf	140,2,c	;volatile
  2791                           
  2792                           ;./LCD_HDD44780.h: 64: LATDbits.LATD1 = 0;
  2793  001056  928C               	bcf	140,1,c	;volatile
  2794                           
  2795                           ;./LCD_HDD44780.h: 65: LATDbits.LATD0 = 0;
  2796  001058  908C               	bcf	140,0,c	;volatile
  2797                           
  2798                           ;./LCD_HDD44780.h: 66: LATDbits.LATD5 = 0;
  2799  00105A  9A8C               	bcf	140,5,c	;volatile
  2800                           
  2801                           ;./LCD_HDD44780.h: 67: LATDbits.LATD4 = 0;
  2802  00105C  988C               	bcf	140,4,c	;volatile
  2803                           
  2804                           ;./LCD_HDD44780.h: 68: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  2805  00105E  0E08               	movlw	8
  2806  001060  6E04               	movwf	??_Lcd_Init^0,c
  2807  001062  0E23               	movlw	35
  2808  001064                     u1517:
  2809  001064  2EE8               	decfsz	wreg,f,c
  2810  001066  D7FE               	bra	u1517
  2811  001068  2E04               	decfsz	??_Lcd_Init^0,f,c
  2812  00106A  D7FC               	bra	u1517
  2813  00106C  F000               	nop	
  2814                           
  2815                           ;./LCD_HDD44780.h: 69: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  2816  00106E  0E08               	movlw	8
  2817  001070  6E04               	movwf	??_Lcd_Init^0,c
  2818  001072  0E23               	movlw	35
  2819  001074                     u1527:
  2820  001074  2EE8               	decfsz	wreg,f,c
  2821  001076  D7FE               	bra	u1527
  2822  001078  2E04               	decfsz	??_Lcd_Init^0,f,c
  2823  00107A  D7FC               	bra	u1527
  2824  00107C  F000               	nop	
  2825                           
  2826                           ;./LCD_HDD44780.h: 70: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  2827  00107E  0E08               	movlw	8
  2828  001080  6E04               	movwf	??_Lcd_Init^0,c
  2829  001082  0E23               	movlw	35
  2830  001084                     u1537:
  2831  001084  2EE8               	decfsz	wreg,f,c
  2832  001086  D7FE               	bra	u1537
  2833  001088  2E04               	decfsz	??_Lcd_Init^0,f,c
  2834  00108A  D7FC               	bra	u1537
  2835  00108C  F000               	nop	
  2836                           
  2837                           ;./LCD_HDD44780.h: 71: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  2838  00108E  0E08               	movlw	8
  2839  001090  6E04               	movwf	??_Lcd_Init^0,c
  2840  001092  0E23               	movlw	35
  2841  001094                     u1547:
  2842  001094  2EE8               	decfsz	wreg,f,c
  2843  001096  D7FE               	bra	u1547
  2844  001098  2E04               	decfsz	??_Lcd_Init^0,f,c
  2845  00109A  D7FC               	bra	u1547
  2846  00109C  F000               	nop	
  2847                           
  2848                           ;./LCD_HDD44780.h: 72: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  2849  00109E  0E08               	movlw	8
  2850  0010A0  6E04               	movwf	??_Lcd_Init^0,c
  2851  0010A2  0E23               	movlw	35
  2852  0010A4                     u1557:
  2853  0010A4  2EE8               	decfsz	wreg,f,c
  2854  0010A6  D7FE               	bra	u1557
  2855  0010A8  2E04               	decfsz	??_Lcd_Init^0,f,c
  2856  0010AA  D7FC               	bra	u1557
  2857  0010AC  F000               	nop	
  2858                           
  2859                           ;./LCD_HDD44780.h: 73: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  2860  0010AE  0E08               	movlw	8
  2861  0010B0  6E04               	movwf	??_Lcd_Init^0,c
  2862  0010B2  0E23               	movlw	35
  2863  0010B4                     u1567:
  2864  0010B4  2EE8               	decfsz	wreg,f,c
  2865  0010B6  D7FE               	bra	u1567
  2866  0010B8  2E04               	decfsz	??_Lcd_Init^0,f,c
  2867  0010BA  D7FC               	bra	u1567
  2868  0010BC  F000               	nop	
  2869                           
  2870                           ;./LCD_HDD44780.h: 74: for(data = 1; data < 4; data ++)
  2871  0010BE  0E01               	movlw	1
  2872  0010C0  6E05               	movwf	Lcd_Init@data^0,c
  2873  0010C2                     l23:
  2874                           
  2875                           ;./LCD_HDD44780.h: 75: {;./LCD_HDD44780.h: 76:     LATDbits.LATD3 = 0; LATDbits.LATD2 = 
      +                          0; LATDbits.LATD1 = 1; LATDbits.LATD0 = 1; LATDbits.LATD5 = 0;
  2876  0010C2  968C               	bcf	140,3,c	;volatile
  2877  0010C4  948C               	bcf	140,2,c	;volatile
  2878  0010C6  828C               	bsf	140,1,c	;volatile
  2879  0010C8  808C               	bsf	140,0,c	;volatile
  2880  0010CA  9A8C               	bcf	140,5,c	;volatile
  2881                           
  2882                           ;./LCD_HDD44780.h: 77:     LATDbits.LATD4 = 0; LATDbits.LATD3 = 0; LATDbits.LATD2 = 0; L
      +                          ATDbits.LATD1 = 1; LATDbits.LATD0 = 1;
  2883  0010CC  988C               	bcf	140,4,c	;volatile
  2884  0010CE  968C               	bcf	140,3,c	;volatile
  2885  0010D0  948C               	bcf	140,2,c	;volatile
  2886  0010D2  828C               	bsf	140,1,c	;volatile
  2887  0010D4  808C               	bsf	140,0,c	;volatile
  2888                           
  2889                           ;./LCD_HDD44780.h: 78:     LATDbits.LATD5 = 1; LATDbits.LATD4 = 0;
  2890  0010D6  8A8C               	bsf	140,5,c	;volatile
  2891  0010D8  988C               	bcf	140,4,c	;volatile
  2892                           
  2893                           ;./LCD_HDD44780.h: 79:     _delay((unsigned long)((5)*(4000000/4000000.0)));
  2894  0010DA  D000               	nop2		;2 cycle nop
  2895  0010DC  D000               	nop2		;2 cycle nop
  2896  0010DE  F000               	nop	
  2897                           
  2898                           ;./LCD_HDD44780.h: 80:     LATDbits.LATD3 = 0; LATDbits.LATD2 = 0; LATDbits.LATD1 = 1; L
      +                          ATDbits.LATD0 = 1; LATDbits.LATD5 = 0;
  2899  0010E0  968C               	bcf	140,3,c	;volatile
  2900  0010E2  948C               	bcf	140,2,c	;volatile
  2901  0010E4  828C               	bsf	140,1,c	;volatile
  2902  0010E6  808C               	bsf	140,0,c	;volatile
  2903  0010E8  9A8C               	bcf	140,5,c	;volatile
  2904                           
  2905                           ;./LCD_HDD44780.h: 81:     LATDbits.LATD4 = 0;
  2906  0010EA  988C               	bcf	140,4,c	;volatile
  2907                           
  2908                           ;./LCD_HDD44780.h: 82:     _delay((unsigned long)((5500)*(4000000/4000000.0)));
  2909  0010EC  0E08               	movlw	8
  2910  0010EE  6E04               	movwf	??_Lcd_Init^0,c
  2911  0010F0  0E23               	movlw	35
  2912  0010F2                     u1577:
  2913  0010F2  2EE8               	decfsz	wreg,f,c
  2914  0010F4  D7FE               	bra	u1577
  2915  0010F6  2E04               	decfsz	??_Lcd_Init^0,f,c
  2916  0010F8  D7FC               	bra	u1577
  2917  0010FA  F000               	nop	
  2918                           
  2919                           ;./LCD_HDD44780.h: 83: }
  2920  0010FC  2A05               	incf	Lcd_Init@data^0,f,c
  2921  0010FE  0E03               	movlw	3
  2922  001100  6405               	cpfsgt	Lcd_Init@data^0,c
  2923  001102  D7DF               	goto	l23
  2924                           
  2925                           ;./LCD_HDD44780.h: 84: LATDbits.LATD3 = 0; LATDbits.LATD2 = 0; LATDbits.LATD1 = 1; LATDb
      +                          its.LATD0 = 0; LATDbits.LATD5 = 0; LATDbits.LATD4 = 0;
  2926  001104  968C               	bcf	140,3,c	;volatile
  2927  001106  948C               	bcf	140,2,c	;volatile
  2928  001108  828C               	bsf	140,1,c	;volatile
  2929  00110A  908C               	bcf	140,0,c	;volatile
  2930  00110C  9A8C               	bcf	140,5,c	;volatile
  2931  00110E  988C               	bcf	140,4,c	;volatile
  2932                           
  2933                           ;./LCD_HDD44780.h: 85: LATDbits.LATD3 = 0; LATDbits.LATD2 = 0; LATDbits.LATD1 = 1; LATDb
      +                          its.LATD0 = 0; LATDbits.LATD5 = 1; LATDbits.LATD4 = 0;
  2934  001110  968C               	bcf	140,3,c	;volatile
  2935  001112  948C               	bcf	140,2,c	;volatile
  2936  001114  828C               	bsf	140,1,c	;volatile
  2937  001116  908C               	bcf	140,0,c	;volatile
  2938  001118  8A8C               	bsf	140,5,c	;volatile
  2939  00111A  988C               	bcf	140,4,c	;volatile
  2940                           
  2941                           ;./LCD_HDD44780.h: 86: _delay((unsigned long)((5)*(4000000/4000000.0)));
  2942  00111C  D000               	nop2		;2 cycle nop
  2943  00111E  D000               	nop2		;2 cycle nop
  2944  001120  F000               	nop	
  2945                           
  2946                           ;./LCD_HDD44780.h: 87: LATDbits.LATD3 = 0; LATDbits.LATD2 = 0; LATDbits.LATD1 = 1; LATDb
      +                          its.LATD0 = 0; LATDbits.LATD5 = 0; LATDbits.LATD4 = 0;
  2947  001122  968C               	bcf	140,3,c	;volatile
  2948  001124  948C               	bcf	140,2,c	;volatile
  2949  001126  828C               	bsf	140,1,c	;volatile
  2950  001128  908C               	bcf	140,0,c	;volatile
  2951  00112A  9A8C               	bcf	140,5,c	;volatile
  2952  00112C  988C               	bcf	140,4,c	;volatile
  2953                           
  2954                           ;./LCD_HDD44780.h: 88: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  2955  00112E  0E08               	movlw	8
  2956  001130  6E04               	movwf	??_Lcd_Init^0,c
  2957  001132  0E23               	movlw	35
  2958  001134                     u1587:
  2959  001134  2EE8               	decfsz	wreg,f,c
  2960  001136  D7FE               	bra	u1587
  2961  001138  2E04               	decfsz	??_Lcd_Init^0,f,c
  2962  00113A  D7FC               	bra	u1587
  2963  00113C  F000               	nop	
  2964  00113E  0E28               	movlw	40
  2965  001140  EC94  F007         	call	_Lcd_Cmd
  2966  001144  0E10               	movlw	16
  2967  001146  EC94  F007         	call	_Lcd_Cmd
  2968  00114A  0E01               	movlw	1
  2969  00114C  EC94  F007         	call	_Lcd_Cmd
  2970  001150  0E0F               	movlw	15
  2971  001152  EC94  F007         	call	_Lcd_Cmd
  2972  001156  0012               	return		;funcret
  2973  001158                     __end_of_Lcd_Init:
  2974                           	callstack 0
  2975                           
  2976 ;; *************** function _Lcd_Cmd *****************
  2977 ;; Defined at:
  2978 ;;		line 152 in file "./LCD_HDD44780.h"
  2979 ;; Parameters:    Size  Location     Type
  2980 ;;  data            1    wreg     unsigned char 
  2981 ;; Auto vars:     Size  Location     Type
  2982 ;;  data            1    2[COMRAM] unsigned char 
  2983 ;; Return value:  Size  Location     Type
  2984 ;;                  1    wreg      void 
  2985 ;; Registers used:
  2986 ;;		wreg, status,2, status,0
  2987 ;; Tracked objects:
  2988 ;;		On entry : 0/0
  2989 ;;		On exit  : 0/0
  2990 ;;		Unchanged: 0/0
  2991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2992 ;;      Params:         0       0       0       0       0       0       0       0       0
  2993 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2994 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2995 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2996 ;;Total ram usage:        3 bytes
  2997 ;; Hardware stack levels used:    1
  2998 ;; This function calls:
  2999 ;;		Nothing
  3000 ;; This function is called by:
  3001 ;;		_Lcd_Init
  3002 ;;		_Lcd_Out2
  3003 ;;		_main
  3004 ;; This function uses a non-reentrant model
  3005 ;;
  3006                           
  3007                           	psect	text16
  3008  000F28                     __ptext16:
  3009                           	callstack 0
  3010  000F28                     _Lcd_Cmd:
  3011                           	callstack 29
  3012                           
  3013                           ;incstack = 0
  3014                           ;Lcd_Cmd@data stored from wreg
  3015  000F28  6E03               	movwf	Lcd_Cmd@data^0,c
  3016                           
  3017                           ;./LCD_HDD44780.h: 153: LATDbits.LATD5 = 0; LATDbits.LATD4 = 0;
  3018  000F2A  9A8C               	bcf	140,5,c	;volatile
  3019  000F2C  988C               	bcf	140,4,c	;volatile
  3020                           
  3021                           ;./LCD_HDD44780.h: 154: LATDbits.LATD3 = (data & 0b10000000)>>7; LATDbits.LATD2 = (data 
      +                          & 0b01000000)>>6;
  3022  000F2E  6A01               	clrf	??_Lcd_Cmd^0,c
  3023  000F30  AE03               	btfss	Lcd_Cmd@data^0,7,c
  3024  000F32  D001               	bra	u1265
  3025  000F34  2A01               	incf	??_Lcd_Cmd^0,f,c
  3026  000F36                     u1265:
  3027  000F36  0E01               	movlw	1
  3028  000F38  1601               	andwf	??_Lcd_Cmd^0,f,c
  3029  000F3A  4601               	rlncf	??_Lcd_Cmd^0,f,c
  3030  000F3C  4601               	rlncf	??_Lcd_Cmd^0,f,c
  3031  000F3E  4601               	rlncf	??_Lcd_Cmd^0,f,c
  3032  000F40  508C               	movf	140,w,c	;volatile
  3033  000F42  1801               	xorwf	??_Lcd_Cmd^0,w,c
  3034  000F44  0BF7               	andlw	-9
  3035  000F46  1801               	xorwf	??_Lcd_Cmd^0,w,c
  3036  000F48  6E8C               	movwf	140,c	;volatile
  3037  000F4A  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  3038  000F4E  0E06               	movlw	6
  3039  000F50  6E02               	movwf	(??_Lcd_Cmd+1)^0,c
  3040  000F52                     u1275:
  3041  000F52  90D8               	bcf	status,0,c
  3042  000F54  3201               	rrcf	??_Lcd_Cmd^0,f,c
  3043  000F56  2E02               	decfsz	(??_Lcd_Cmd+1)^0,f,c
  3044  000F58  D7FC               	goto	u1275
  3045  000F5A  0E01               	movlw	1
  3046  000F5C  1601               	andwf	??_Lcd_Cmd^0,f,c
  3047  000F5E  4601               	rlncf	??_Lcd_Cmd^0,f,c
  3048  000F60  4601               	rlncf	??_Lcd_Cmd^0,f,c
  3049  000F62  508C               	movf	140,w,c	;volatile
  3050  000F64  1801               	xorwf	??_Lcd_Cmd^0,w,c
  3051  000F66  0BFB               	andlw	-5
  3052  000F68  1801               	xorwf	??_Lcd_Cmd^0,w,c
  3053  000F6A  6E8C               	movwf	140,c	;volatile
  3054                           
  3055                           ;./LCD_HDD44780.h: 155: LATDbits.LATD1 = (data & 0b00100000)>>5; LATDbits.LATD0 = (data 
      +                          & 0b00010000)>>4;
  3056  000F6C  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  3057  000F70  0E05               	movlw	5
  3058  000F72  6E02               	movwf	(??_Lcd_Cmd+1)^0,c
  3059  000F74                     u1285:
  3060  000F74  90D8               	bcf	status,0,c
  3061  000F76  3201               	rrcf	??_Lcd_Cmd^0,f,c
  3062  000F78  2E02               	decfsz	(??_Lcd_Cmd+1)^0,f,c
  3063  000F7A  D7FC               	goto	u1285
  3064  000F7C  0E01               	movlw	1
  3065  000F7E  1601               	andwf	??_Lcd_Cmd^0,f,c
  3066  000F80  4601               	rlncf	??_Lcd_Cmd^0,f,c
  3067  000F82  508C               	movf	140,w,c	;volatile
  3068  000F84  1801               	xorwf	??_Lcd_Cmd^0,w,c
  3069  000F86  0BFD               	andlw	-3
  3070  000F88  1801               	xorwf	??_Lcd_Cmd^0,w,c
  3071  000F8A  6E8C               	movwf	140,c	;volatile
  3072  000F8C  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  3073  000F90  3A01               	swapf	??_Lcd_Cmd^0,f,c
  3074  000F92  0E0F               	movlw	15
  3075  000F94  1601               	andwf	??_Lcd_Cmd^0,f,c
  3076  000F96  0E01               	movlw	1
  3077  000F98  1601               	andwf	??_Lcd_Cmd^0,f,c
  3078  000F9A  508C               	movf	140,w,c	;volatile
  3079  000F9C  1801               	xorwf	??_Lcd_Cmd^0,w,c
  3080  000F9E  0BFE               	andlw	-2
  3081  000FA0  1801               	xorwf	??_Lcd_Cmd^0,w,c
  3082  000FA2  6E8C               	movwf	140,c	;volatile
  3083                           
  3084                           ;./LCD_HDD44780.h: 156: _delay(10);
  3085  000FA4  0E03               	movlw	3
  3086  000FA6                     u1597:
  3087  000FA6  2EE8               	decfsz	wreg,f,c
  3088  000FA8  D7FE               	bra	u1597
  3089  000FAA  F000               	nop	
  3090                           
  3091                           ;./LCD_HDD44780.h: 157: LATDbits.LATD5 = 1; _delay((unsigned long)((5)*(4000000/4000000.
      +                          0))); LATDbits.LATD5 = 0;
  3092  000FAC  8A8C               	bsf	140,5,c	;volatile
  3093  000FAE  D000               	nop2		;2 cycle nop
  3094  000FB0  D000               	nop2		;2 cycle nop
  3095  000FB2  F000               	nop	
  3096  000FB4  9A8C               	bcf	140,5,c	;volatile
  3097                           
  3098                           ;./LCD_HDD44780.h: 158: LATDbits.LATD3 = (data & 0b00001000)>>3; LATDbits.LATD2 = (data 
      +                          & 0b00000100)>>2;
  3099  000FB6  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  3100  000FBA  90D8               	bcf	status,0,c
  3101  000FBC  3201               	rrcf	??_Lcd_Cmd^0,f,c
  3102  000FBE  90D8               	bcf	status,0,c
  3103  000FC0  3201               	rrcf	??_Lcd_Cmd^0,f,c
  3104  000FC2  90D8               	bcf	status,0,c
  3105  000FC4  3201               	rrcf	??_Lcd_Cmd^0,f,c
  3106  000FC6  0E01               	movlw	1
  3107  000FC8  1601               	andwf	??_Lcd_Cmd^0,f,c
  3108  000FCA  4601               	rlncf	??_Lcd_Cmd^0,f,c
  3109  000FCC  4601               	rlncf	??_Lcd_Cmd^0,f,c
  3110  000FCE  4601               	rlncf	??_Lcd_Cmd^0,f,c
  3111  000FD0  508C               	movf	140,w,c	;volatile
  3112  000FD2  1801               	xorwf	??_Lcd_Cmd^0,w,c
  3113  000FD4  0BF7               	andlw	-9
  3114  000FD6  1801               	xorwf	??_Lcd_Cmd^0,w,c
  3115  000FD8  6E8C               	movwf	140,c	;volatile
  3116  000FDA  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  3117  000FDE  90D8               	bcf	status,0,c
  3118  000FE0  3201               	rrcf	??_Lcd_Cmd^0,f,c
  3119  000FE2  90D8               	bcf	status,0,c
  3120  000FE4  3201               	rrcf	??_Lcd_Cmd^0,f,c
  3121  000FE6  0E01               	movlw	1
  3122  000FE8  1601               	andwf	??_Lcd_Cmd^0,f,c
  3123  000FEA  4601               	rlncf	??_Lcd_Cmd^0,f,c
  3124  000FEC  4601               	rlncf	??_Lcd_Cmd^0,f,c
  3125  000FEE  508C               	movf	140,w,c	;volatile
  3126  000FF0  1801               	xorwf	??_Lcd_Cmd^0,w,c
  3127  000FF2  0BFB               	andlw	-5
  3128  000FF4  1801               	xorwf	??_Lcd_Cmd^0,w,c
  3129  000FF6  6E8C               	movwf	140,c	;volatile
  3130                           
  3131                           ;./LCD_HDD44780.h: 159: LATDbits.LATD1 = (data & 0b00000010)>>1; LATDbits.LATD0 = (data 
      +                          & 0b00000001);
  3132  000FF8  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  3133  000FFC  90D8               	bcf	status,0,c
  3134  000FFE  3201               	rrcf	??_Lcd_Cmd^0,f,c
  3135  001000  0E01               	movlw	1
  3136  001002  1601               	andwf	??_Lcd_Cmd^0,f,c
  3137  001004  4601               	rlncf	??_Lcd_Cmd^0,f,c
  3138  001006  508C               	movf	140,w,c	;volatile
  3139  001008  1801               	xorwf	??_Lcd_Cmd^0,w,c
  3140  00100A  0BFD               	andlw	-3
  3141  00100C  1801               	xorwf	??_Lcd_Cmd^0,w,c
  3142  00100E  6E8C               	movwf	140,c	;volatile
  3143  001010  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  3144  001014  0E01               	movlw	1
  3145  001016  1601               	andwf	??_Lcd_Cmd^0,f,c
  3146  001018  508C               	movf	140,w,c	;volatile
  3147  00101A  1801               	xorwf	??_Lcd_Cmd^0,w,c
  3148  00101C  0BFE               	andlw	-2
  3149  00101E  1801               	xorwf	??_Lcd_Cmd^0,w,c
  3150  001020  6E8C               	movwf	140,c	;volatile
  3151                           
  3152                           ;./LCD_HDD44780.h: 160: _delay(10);
  3153  001022  0E03               	movlw	3
  3154  001024                     u1607:
  3155  001024  2EE8               	decfsz	wreg,f,c
  3156  001026  D7FE               	bra	u1607
  3157  001028  F000               	nop	
  3158                           
  3159                           ;./LCD_HDD44780.h: 161: LATDbits.LATD5 = 1; _delay((unsigned long)((5)*(4000000/4000000.
      +                          0))); LATDbits.LATD5 = 0;
  3160  00102A  8A8C               	bsf	140,5,c	;volatile
  3161  00102C  D000               	nop2		;2 cycle nop
  3162  00102E  D000               	nop2		;2 cycle nop
  3163  001030  F000               	nop	
  3164  001032  9A8C               	bcf	140,5,c	;volatile
  3165                           
  3166                           ;./LCD_HDD44780.h: 162: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  3167  001034  0E08               	movlw	8
  3168  001036  6E01               	movwf	??_Lcd_Cmd^0,c
  3169  001038  0E23               	movlw	35
  3170  00103A                     u1617:
  3171  00103A  2EE8               	decfsz	wreg,f,c
  3172  00103C  D7FE               	bra	u1617
  3173  00103E  2E01               	decfsz	??_Lcd_Cmd^0,f,c
  3174  001040  D7FC               	bra	u1617
  3175  001042  F000               	nop	
  3176  001044  0012               	return		;funcret
  3177  001046                     __end_of_Lcd_Cmd:
  3178                           	callstack 0
  3179                           
  3180 ;; *************** function _I2Cinit *****************
  3181 ;; Defined at:
  3182 ;;		line 4 in file "I2C.c"
  3183 ;; Parameters:    Size  Location     Type
  3184 ;;  FCPU            4   13[COMRAM] unsigned long 
  3185 ;;  clock           4   17[COMRAM] unsigned long 
  3186 ;; Auto vars:     Size  Location     Type
  3187 ;;  speed           1   25[COMRAM] unsigned char 
  3188 ;; Return value:  Size  Location     Type
  3189 ;;                  1    wreg      void 
  3190 ;; Registers used:
  3191 ;;		wreg, status,2, status,0, cstack
  3192 ;; Tracked objects:
  3193 ;;		On entry : 0/0
  3194 ;;		On exit  : 0/0
  3195 ;;		Unchanged: 0/0
  3196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3197 ;;      Params:         8       0       0       0       0       0       0       0       0
  3198 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3199 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3200 ;;      Totals:        13       0       0       0       0       0       0       0       0
  3201 ;;Total ram usage:       13 bytes
  3202 ;; Hardware stack levels used:    1
  3203 ;; Hardware stack levels required when called:    1
  3204 ;; This function calls:
  3205 ;;		___lldiv
  3206 ;; This function is called by:
  3207 ;;		_main
  3208 ;; This function uses a non-reentrant model
  3209 ;;
  3210                           
  3211                           	psect	text17
  3212  00157A                     __ptext17:
  3213                           	callstack 0
  3214  00157A                     _I2Cinit:
  3215                           	callstack 29
  3216                           
  3217                           ;I2C.c: 5:     uint8_t speed;;I2C.c: 6:     TRISBbits.RB0 = 1;
  3218                           
  3219                           ;incstack = 0
  3220  00157A  8093               	bsf	147,0,c	;volatile
  3221                           
  3222                           ;I2C.c: 7:     TRISBbits.RB1 = 1;
  3223  00157C  8293               	bsf	147,1,c	;volatile
  3224                           
  3225                           ;I2C.c: 8:     SSPSTATbits.SMP = 1;
  3226  00157E  8EC7               	bsf	199,7,c	;volatile
  3227                           
  3228                           ;I2C.c: 9:     SSPCON1bits.SSPM = 0x08;
  3229  001580  50C6               	movf	198,w,c	;volatile
  3230  001582  0BF0               	andlw	-16
  3231  001584  0908               	iorlw	8
  3232  001586  6EC6               	movwf	198,c	;volatile
  3233                           
  3234                           ;I2C.c: 11:     speed = FCPU/(4*clock)-1;
  3235  001588  C00E  F001         	movff	I2Cinit@FCPU,___lldiv@dividend
  3236  00158C  C00F  F002         	movff	I2Cinit@FCPU+1,___lldiv@dividend+1
  3237  001590  C010  F003         	movff	I2Cinit@FCPU+2,___lldiv@dividend+2
  3238  001594  C011  F004         	movff	I2Cinit@FCPU+3,___lldiv@dividend+3
  3239  001598  C012  F016         	movff	I2Cinit@clock,??_I2Cinit
  3240  00159C  C013  F017         	movff	I2Cinit@clock+1,??_I2Cinit+1
  3241  0015A0  C014  F018         	movff	I2Cinit@clock+2,??_I2Cinit+2
  3242  0015A4  C015  F019         	movff	I2Cinit@clock+3,??_I2Cinit+3
  3243  0015A8  0E02               	movlw	2
  3244  0015AA                     u1465:
  3245  0015AA  90D8               	bcf	status,0,c
  3246  0015AC  3616               	rlcf	??_I2Cinit^0,f,c
  3247  0015AE  3617               	rlcf	(??_I2Cinit+1)^0,f,c
  3248  0015B0  3618               	rlcf	(??_I2Cinit+2)^0,f,c
  3249  0015B2  3619               	rlcf	(??_I2Cinit+3)^0,f,c
  3250  0015B4  2EE8               	decfsz	wreg,f,c
  3251  0015B6  D7F9               	goto	u1465
  3252  0015B8  C016  F005         	movff	??_I2Cinit,___lldiv@divisor
  3253  0015BC  C017  F006         	movff	??_I2Cinit+1,___lldiv@divisor+1
  3254  0015C0  C018  F007         	movff	??_I2Cinit+2,___lldiv@divisor+2
  3255  0015C4  C019  F008         	movff	??_I2Cinit+3,___lldiv@divisor+3
  3256  0015C8  ECC9  F009         	call	___lldiv	;wreg free
  3257  0015CC  0401               	decf	?___lldiv^0,w,c
  3258  0015CE  6E1A               	movwf	I2Cinit@speed^0,c
  3259                           
  3260                           ;I2C.c: 12:     SSPADD = speed;
  3261  0015D0  C01A  FFC8         	movff	I2Cinit@speed,4040	;volatile
  3262                           
  3263                           ;I2C.c: 13:     SSPCON2 = 0x00;
  3264  0015D4  0E00               	movlw	0
  3265  0015D6  6EC5               	movwf	197,c	;volatile
  3266                           
  3267                           ;I2C.c: 14:     SSPCON1bits.SSPEN = 1;
  3268  0015D8  8AC6               	bsf	198,5,c	;volatile
  3269  0015DA  0012               	return		;funcret
  3270  0015DC                     __end_of_I2Cinit:
  3271                           	callstack 0
  3272                           
  3273 ;; *************** function ___lldiv *****************
  3274 ;; Defined at:
  3275 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\__lldiv.c"
  3276 ;; Parameters:    Size  Location     Type
  3277 ;;  dividend        4    0[COMRAM] unsigned long 
  3278 ;;  divisor         4    4[COMRAM] unsigned long 
  3279 ;; Auto vars:     Size  Location     Type
  3280 ;;  quotient        4    8[COMRAM] unsigned long 
  3281 ;;  counter         1   12[COMRAM] unsigned char 
  3282 ;; Return value:  Size  Location     Type
  3283 ;;                  4    0[COMRAM] unsigned long 
  3284 ;; Registers used:
  3285 ;;		wreg, status,2, status,0
  3286 ;; Tracked objects:
  3287 ;;		On entry : 0/0
  3288 ;;		On exit  : 0/0
  3289 ;;		Unchanged: 0/0
  3290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3291 ;;      Params:         8       0       0       0       0       0       0       0       0
  3292 ;;      Locals:         5       0       0       0       0       0       0       0       0
  3293 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3294 ;;      Totals:        13       0       0       0       0       0       0       0       0
  3295 ;;Total ram usage:       13 bytes
  3296 ;; Hardware stack levels used:    1
  3297 ;; This function calls:
  3298 ;;		Nothing
  3299 ;; This function is called by:
  3300 ;;		_I2Cinit
  3301 ;; This function uses a non-reentrant model
  3302 ;;
  3303                           
  3304                           	psect	text18
  3305  001392                     __ptext18:
  3306                           	callstack 0
  3307  001392                     ___lldiv:
  3308                           	callstack 29
  3309                           
  3310                           ;incstack = 0
  3311  001392  0E00               	movlw	0
  3312  001394  6E09               	movwf	___lldiv@quotient^0,c
  3313  001396  0E00               	movlw	0
  3314  001398  6E0A               	movwf	(___lldiv@quotient+1)^0,c
  3315  00139A  0E00               	movlw	0
  3316  00139C  6E0B               	movwf	(___lldiv@quotient+2)^0,c
  3317  00139E  0E00               	movlw	0
  3318  0013A0  6E0C               	movwf	(___lldiv@quotient+3)^0,c
  3319  0013A2  5005               	movf	___lldiv@divisor^0,w,c
  3320  0013A4  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
  3321  0013A6  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
  3322  0013A8  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
  3323  0013AA  B4D8               	btfsc	status,2,c
  3324  0013AC  D02A               	goto	l199
  3325  0013AE  0E01               	movlw	1
  3326  0013B0  6E0D               	movwf	___lldiv@counter^0,c
  3327  0013B2  D006               	goto	l1942
  3328  0013B4                     l1940:
  3329  0013B4  90D8               	bcf	status,0,c
  3330  0013B6  3605               	rlcf	___lldiv@divisor^0,f,c
  3331  0013B8  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
  3332  0013BA  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
  3333  0013BC  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
  3334  0013BE  2A0D               	incf	___lldiv@counter^0,f,c
  3335  0013C0                     l1942:
  3336  0013C0  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
  3337  0013C2  D7F8               	goto	l1940
  3338  0013C4                     u1390:
  3339  0013C4  90D8               	bcf	status,0,c
  3340  0013C6  3609               	rlcf	___lldiv@quotient^0,f,c
  3341  0013C8  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
  3342  0013CA  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
  3343  0013CC  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
  3344  0013CE  5005               	movf	___lldiv@divisor^0,w,c
  3345  0013D0  5C01               	subwf	___lldiv@dividend^0,w,c
  3346  0013D2  5006               	movf	(___lldiv@divisor+1)^0,w,c
  3347  0013D4  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
  3348  0013D6  5007               	movf	(___lldiv@divisor+2)^0,w,c
  3349  0013D8  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
  3350  0013DA  5008               	movf	(___lldiv@divisor+3)^0,w,c
  3351  0013DC  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
  3352  0013DE  A0D8               	btfss	status,0,c
  3353  0013E0  D009               	goto	l1952
  3354  0013E2  5005               	movf	___lldiv@divisor^0,w,c
  3355  0013E4  5E01               	subwf	___lldiv@dividend^0,f,c
  3356  0013E6  5006               	movf	(___lldiv@divisor+1)^0,w,c
  3357  0013E8  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
  3358  0013EA  5007               	movf	(___lldiv@divisor+2)^0,w,c
  3359  0013EC  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
  3360  0013EE  5008               	movf	(___lldiv@divisor+3)^0,w,c
  3361  0013F0  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
  3362  0013F2  8009               	bsf	___lldiv@quotient^0,0,c
  3363  0013F4                     l1952:
  3364  0013F4  90D8               	bcf	status,0,c
  3365  0013F6  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
  3366  0013F8  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
  3367  0013FA  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
  3368  0013FC  3205               	rrcf	___lldiv@divisor^0,f,c
  3369  0013FE  2E0D               	decfsz	___lldiv@counter^0,f,c
  3370  001400  D7E1               	goto	u1390
  3371  001402                     l199:
  3372  001402  C009  F001         	movff	___lldiv@quotient,?___lldiv
  3373  001406  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  3374  00140A  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  3375  00140E  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  3376  001412  0012               	return		;funcret
  3377  001414                     __end_of___lldiv:
  3378                           	callstack 0
  3379                           
  3380 ;; *************** function _DS1307setTime *****************
  3381 ;; Defined at:
  3382 ;;		line 8 in file "DS1307.c"
  3383 ;; Parameters:    Size  Location     Type
  3384 ;;  hours           1    wreg     unsigned char 
  3385 ;;  minutes         1    6[COMRAM] unsigned char 
  3386 ;;  seconds         1    7[COMRAM] unsigned char 
  3387 ;;  day             1    8[COMRAM] unsigned char 
  3388 ;;  week            1    9[COMRAM] unsigned char 
  3389 ;;  month           1   10[COMRAM] unsigned char 
  3390 ;;  year            1   11[COMRAM] unsigned char 
  3391 ;; Auto vars:     Size  Location     Type
  3392 ;;  hours           1   12[COMRAM] unsigned char 
  3393 ;; Return value:  Size  Location     Type
  3394 ;;                  1    wreg      void 
  3395 ;; Registers used:
  3396 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3397 ;; Tracked objects:
  3398 ;;		On entry : 0/0
  3399 ;;		On exit  : 0/0
  3400 ;;		Unchanged: 0/0
  3401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3402 ;;      Params:         6       0       0       0       0       0       0       0       0
  3403 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3404 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3405 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3406 ;;Total ram usage:        7 bytes
  3407 ;; Hardware stack levels used:    1
  3408 ;; Hardware stack levels required when called:    2
  3409 ;; This function calls:
  3410 ;;		_I2Cdata
  3411 ;;		_I2Cstart
  3412 ;;		_I2Cstop
  3413 ;;		_I2Cwrite
  3414 ;;		_binBCD
  3415 ;; This function is called by:
  3416 ;;		_main
  3417 ;; This function uses a non-reentrant model
  3418 ;;
  3419                           
  3420                           	psect	text19
  3421  001512                     __ptext19:
  3422                           	callstack 0
  3423  001512                     _DS1307setTime:
  3424                           	callstack 28
  3425                           
  3426                           ;incstack = 0
  3427                           ;DS1307setTime@hours stored from wreg
  3428  001512  6E0D               	movwf	DS1307setTime@hours^0,c
  3429                           
  3430                           ;DS1307.c: 9:     seconds = seconds & 0x7F;
  3431  001514  5008               	movf	DS1307setTime@seconds^0,w,c
  3432  001516  0B7F               	andlw	127
  3433  001518  6E08               	movwf	DS1307setTime@seconds^0,c
  3434                           
  3435                           ;DS1307.c: 10:     hours = hours & 0x3F;
  3436  00151A  500D               	movf	DS1307setTime@hours^0,w,c
  3437  00151C  0B3F               	andlw	63
  3438  00151E  6E0D               	movwf	DS1307setTime@hours^0,c
  3439                           
  3440                           ;DS1307.c: 11:     I2Cstart();
  3441  001520  ECE9  F00B         	call	_I2Cstart	;wreg free
  3442                           
  3443                           ;DS1307.c: 12:     I2Cdata(0xD0,0x00);
  3444  001524  0E00               	movlw	0
  3445  001526  6E02               	movwf	I2Cdata@data^0,c
  3446  001528  0ED0               	movlw	208
  3447  00152A  ECE1  F00B         	call	_I2Cdata
  3448                           
  3449                           ;DS1307.c: 13:     I2Cwrite(binBCD(seconds));
  3450  00152E  5008               	movf	DS1307setTime@seconds^0,w,c
  3451  001530  ECA0  F00B         	call	_binBCD
  3452  001534  ECCA  F00B         	call	_I2Cwrite
  3453                           
  3454                           ;DS1307.c: 14:     I2Cwrite(binBCD(minutes));
  3455  001538  5007               	movf	DS1307setTime@minutes^0,w,c
  3456  00153A  ECA0  F00B         	call	_binBCD
  3457  00153E  ECCA  F00B         	call	_I2Cwrite
  3458                           
  3459                           ;DS1307.c: 15:     I2Cwrite(binBCD(hours));
  3460  001542  500D               	movf	DS1307setTime@hours^0,w,c
  3461  001544  ECA0  F00B         	call	_binBCD
  3462  001548  ECCA  F00B         	call	_I2Cwrite
  3463                           
  3464                           ;DS1307.c: 16:     I2Cwrite(binBCD(day));
  3465  00154C  5009               	movf	DS1307setTime@day^0,w,c
  3466  00154E  ECA0  F00B         	call	_binBCD
  3467  001552  ECCA  F00B         	call	_I2Cwrite
  3468                           
  3469                           ;DS1307.c: 17:     I2Cwrite(binBCD(week));
  3470  001556  500A               	movf	DS1307setTime@week^0,w,c
  3471  001558  ECA0  F00B         	call	_binBCD
  3472  00155C  ECCA  F00B         	call	_I2Cwrite
  3473                           
  3474                           ;DS1307.c: 18:     I2Cwrite(binBCD(month));
  3475  001560  500B               	movf	DS1307setTime@month^0,w,c
  3476  001562  ECA0  F00B         	call	_binBCD
  3477  001566  ECCA  F00B         	call	_I2Cwrite
  3478                           
  3479                           ;DS1307.c: 19:     I2Cwrite(binBCD(year));
  3480  00156A  500C               	movf	DS1307setTime@year^0,w,c
  3481  00156C  ECA0  F00B         	call	_binBCD
  3482  001570  ECCA  F00B         	call	_I2Cwrite
  3483                           
  3484                           ;DS1307.c: 20:     I2Cstop();
  3485  001574  ECFE  F00B         	call	_I2Cstop	;wreg free
  3486  001578  0012               	return		;funcret
  3487  00157A                     __end_of_DS1307setTime:
  3488                           	callstack 0
  3489                           
  3490 ;; *************** function _binBCD *****************
  3491 ;; Defined at:
  3492 ;;		line 46 in file "DS1307.c"
  3493 ;; Parameters:    Size  Location     Type
  3494 ;;  bin             1    wreg     unsigned char 
  3495 ;; Auto vars:     Size  Location     Type
  3496 ;;  bin             1    5[COMRAM] unsigned char 
  3497 ;; Return value:  Size  Location     Type
  3498 ;;                  1    wreg      unsigned char 
  3499 ;; Registers used:
  3500 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3501 ;; Tracked objects:
  3502 ;;		On entry : 0/0
  3503 ;;		On exit  : 0/0
  3504 ;;		Unchanged: 0/0
  3505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3506 ;;      Params:         0       0       0       0       0       0       0       0       0
  3507 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3508 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3509 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3510 ;;Total ram usage:        2 bytes
  3511 ;; Hardware stack levels used:    1
  3512 ;; Hardware stack levels required when called:    1
  3513 ;; This function calls:
  3514 ;;		___lbdiv
  3515 ;;		___lbmod
  3516 ;; This function is called by:
  3517 ;;		_DS1307setTime
  3518 ;; This function uses a non-reentrant model
  3519 ;;
  3520                           
  3521                           	psect	text20
  3522  001740                     __ptext20:
  3523                           	callstack 0
  3524  001740                     _binBCD:
  3525                           	callstack 28
  3526                           
  3527                           ;incstack = 0
  3528                           ;binBCD@bin stored from wreg
  3529  001740  6E06               	movwf	binBCD@bin^0,c
  3530                           
  3531                           ;DS1307.c: 47:     return (((bin/10) << 4) + bin%10);
  3532  001742  0E0A               	movlw	10
  3533  001744  6E01               	movwf	___lbmod@divisor^0,c
  3534  001746  5006               	movf	binBCD@bin^0,w,c
  3535  001748  EC7A  F00B         	call	___lbmod
  3536  00174C  6E05               	movwf	??_binBCD^0,c
  3537  00174E  0E0A               	movlw	10
  3538  001750  6E01               	movwf	___lbdiv@divisor^0,c
  3539  001752  5006               	movf	binBCD@bin^0,w,c
  3540  001754  EC11  F00B         	call	___lbdiv
  3541  001758  0D10               	mullw	16
  3542  00175A  50F3               	movf	243,w,c
  3543  00175C  2405               	addwf	??_binBCD^0,w,c
  3544  00175E  0012               	return		;funcret
  3545  001760                     __end_of_binBCD:
  3546                           	callstack 0
  3547                           
  3548 ;; *************** function ___lbmod *****************
  3549 ;; Defined at:
  3550 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\lbmod.c"
  3551 ;; Parameters:    Size  Location     Type
  3552 ;;  dividend        1    wreg     unsigned char 
  3553 ;;  divisor         1    0[COMRAM] unsigned char 
  3554 ;; Auto vars:     Size  Location     Type
  3555 ;;  dividend        1    1[COMRAM] unsigned char 
  3556 ;;  rem             1    3[COMRAM] unsigned char 
  3557 ;;  counter         1    2[COMRAM] unsigned char 
  3558 ;; Return value:  Size  Location     Type
  3559 ;;                  1    wreg      unsigned char 
  3560 ;; Registers used:
  3561 ;;		wreg, status,2, status,0
  3562 ;; Tracked objects:
  3563 ;;		On entry : 0/0
  3564 ;;		On exit  : 0/0
  3565 ;;		Unchanged: 0/0
  3566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3567 ;;      Params:         1       0       0       0       0       0       0       0       0
  3568 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3569 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3570 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3571 ;;Total ram usage:        4 bytes
  3572 ;; Hardware stack levels used:    1
  3573 ;; This function calls:
  3574 ;;		Nothing
  3575 ;; This function is called by:
  3576 ;;		_binBCD
  3577 ;; This function uses a non-reentrant model
  3578 ;;
  3579                           
  3580                           	psect	text21
  3581  0016F4                     __ptext21:
  3582                           	callstack 0
  3583  0016F4                     ___lbmod:
  3584                           	callstack 28
  3585                           
  3586                           ;incstack = 0
  3587                           ;___lbmod@dividend stored from wreg
  3588  0016F4  6E02               	movwf	___lbmod@dividend^0,c
  3589  0016F6  0E08               	movlw	8
  3590  0016F8  6E03               	movwf	___lbmod@counter^0,c
  3591  0016FA  0E00               	movlw	0
  3592  0016FC  6E04               	movwf	___lbmod@rem^0,c
  3593  0016FE                     l1786:
  3594  0016FE  90D8               	bcf	status,0,c
  3595  001700  3402               	rlcf	___lbmod@dividend^0,w,c
  3596  001702  3404               	rlcf	___lbmod@rem^0,w,c
  3597  001704  6E04               	movwf	___lbmod@rem^0,c
  3598  001706  90D8               	bcf	status,0,c
  3599  001708  3602               	rlcf	___lbmod@dividend^0,f,c
  3600  00170A  5001               	movf	___lbmod@divisor^0,w,c
  3601  00170C  5C04               	subwf	___lbmod@rem^0,w,c
  3602  00170E  A0D8               	btfss	status,0,c
  3603  001710  D002               	goto	l1794
  3604  001712  5001               	movf	___lbmod@divisor^0,w,c
  3605  001714  5E04               	subwf	___lbmod@rem^0,f,c
  3606  001716                     l1794:
  3607  001716  2E03               	decfsz	___lbmod@counter^0,f,c
  3608  001718  D7F2               	goto	l1786
  3609  00171A  5004               	movf	___lbmod@rem^0,w,c
  3610  00171C  0012               	return		;funcret
  3611  00171E                     __end_of___lbmod:
  3612                           	callstack 0
  3613                           
  3614 ;; *************** function ___lbdiv *****************
  3615 ;; Defined at:
  3616 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\lbdiv.c"
  3617 ;; Parameters:    Size  Location     Type
  3618 ;;  dividend        1    wreg     unsigned char 
  3619 ;;  divisor         1    0[COMRAM] unsigned char 
  3620 ;; Auto vars:     Size  Location     Type
  3621 ;;  dividend        1    1[COMRAM] unsigned char 
  3622 ;;  quotient        1    3[COMRAM] unsigned char 
  3623 ;;  counter         1    2[COMRAM] unsigned char 
  3624 ;; Return value:  Size  Location     Type
  3625 ;;                  1    wreg      unsigned char 
  3626 ;; Registers used:
  3627 ;;		wreg, status,2, status,0
  3628 ;; Tracked objects:
  3629 ;;		On entry : 0/0
  3630 ;;		On exit  : 0/0
  3631 ;;		Unchanged: 0/0
  3632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3633 ;;      Params:         1       0       0       0       0       0       0       0       0
  3634 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3635 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3636 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3637 ;;Total ram usage:        4 bytes
  3638 ;; Hardware stack levels used:    1
  3639 ;; This function calls:
  3640 ;;		Nothing
  3641 ;; This function is called by:
  3642 ;;		_binBCD
  3643 ;; This function uses a non-reentrant model
  3644 ;;
  3645                           
  3646                           	psect	text22
  3647  001622                     __ptext22:
  3648                           	callstack 0
  3649  001622                     ___lbdiv:
  3650                           	callstack 28
  3651                           
  3652                           ;incstack = 0
  3653                           ;___lbdiv@dividend stored from wreg
  3654  001622  6E02               	movwf	___lbdiv@dividend^0,c
  3655  001624  0E00               	movlw	0
  3656  001626  6E04               	movwf	___lbdiv@quotient^0,c
  3657  001628  5001               	movf	___lbdiv@divisor^0,w,c
  3658  00162A  B4D8               	btfsc	status,2,c
  3659  00162C  D015               	goto	l1780
  3660  00162E  0E01               	movlw	1
  3661  001630  6E03               	movwf	___lbdiv@counter^0,c
  3662  001632  D003               	goto	l1768
  3663  001634                     l1764:
  3664  001634  90D8               	bcf	status,0,c
  3665  001636  3601               	rlcf	___lbdiv@divisor^0,f,c
  3666  001638  2A03               	incf	___lbdiv@counter^0,f,c
  3667  00163A                     l1768:
  3668  00163A  AE01               	btfss	___lbdiv@divisor^0,7,c
  3669  00163C  D7FB               	goto	l1764
  3670  00163E                     u1190:
  3671  00163E  90D8               	bcf	status,0,c
  3672  001640  3604               	rlcf	___lbdiv@quotient^0,f,c
  3673  001642  5001               	movf	___lbdiv@divisor^0,w,c
  3674  001644  5C02               	subwf	___lbdiv@dividend^0,w,c
  3675  001646  A0D8               	btfss	status,0,c
  3676  001648  D003               	goto	l1776
  3677  00164A  5001               	movf	___lbdiv@divisor^0,w,c
  3678  00164C  5E02               	subwf	___lbdiv@dividend^0,f,c
  3679  00164E  8004               	bsf	___lbdiv@quotient^0,0,c
  3680  001650                     l1776:
  3681  001650  90D8               	bcf	status,0,c
  3682  001652  3201               	rrcf	___lbdiv@divisor^0,f,c
  3683  001654  2E03               	decfsz	___lbdiv@counter^0,f,c
  3684  001656  D7F3               	goto	u1190
  3685  001658                     l1780:
  3686  001658  5004               	movf	___lbdiv@quotient^0,w,c
  3687  00165A  0012               	return		;funcret
  3688  00165C                     __end_of___lbdiv:
  3689                           	callstack 0
  3690                           
  3691 ;; *************** function _DS1307read *****************
  3692 ;; Defined at:
  3693 ;;		line 23 in file "DS1307.c"
  3694 ;; Parameters:    Size  Location     Type
  3695 ;;  data            1    3[COMRAM] PTR unsigned char 
  3696 ;;		 -> main@datos(7), 
  3697 ;; Auto vars:     Size  Location     Type
  3698 ;;		None
  3699 ;; Return value:  Size  Location     Type
  3700 ;;                  1    wreg      void 
  3701 ;; Registers used:
  3702 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3703 ;; Tracked objects:
  3704 ;;		On entry : 0/0
  3705 ;;		On exit  : 0/0
  3706 ;;		Unchanged: 0/0
  3707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3708 ;;      Params:         1       0       0       0       0       0       0       0       0
  3709 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3710 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3711 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3712 ;;Total ram usage:        1 bytes
  3713 ;; Hardware stack levels used:    1
  3714 ;; Hardware stack levels required when called:    2
  3715 ;; This function calls:
  3716 ;;		_BCDbin
  3717 ;;		_I2CACK
  3718 ;;		_I2CNACK
  3719 ;;		_I2Cdata
  3720 ;;		_I2Cread
  3721 ;;		_I2Creset
  3722 ;;		_I2Cstart
  3723 ;;		_I2Cstop
  3724 ;;		_I2Cwrite
  3725 ;; This function is called by:
  3726 ;;		_main
  3727 ;; This function uses a non-reentrant model
  3728 ;;
  3729                           
  3730                           	psect	text23
  3731  001232                     __ptext23:
  3732                           	callstack 0
  3733  001232                     _DS1307read:
  3734                           	callstack 28
  3735                           
  3736                           ;DS1307.c: 24:     I2Cstart();
  3737                           
  3738                           ;incstack = 0
  3739  001232  ECE9  F00B         	call	_I2Cstart	;wreg free
  3740                           
  3741                           ;DS1307.c: 25:     I2Cdata(0xD0,0x00);
  3742  001236  0E00               	movlw	0
  3743  001238  6E02               	movwf	I2Cdata@data^0,c
  3744  00123A  0ED0               	movlw	208
  3745  00123C  ECE1  F00B         	call	_I2Cdata
  3746                           
  3747                           ;DS1307.c: 26:     I2Creset();
  3748  001240  EC02  F00C         	call	_I2Creset	;wreg free
  3749                           
  3750                           ;DS1307.c: 27:     I2Cwrite(0xD1);
  3751  001244  0ED1               	movlw	209
  3752  001246  ECCA  F00B         	call	_I2Cwrite
  3753                           
  3754                           ;DS1307.c: 28:     data[0] = BCDbin(I2Cread());
  3755  00124A  5004               	movf	DS1307read@data^0,w,c
  3756  00124C  6ED9               	movwf	fsr2l,c
  3757  00124E  6ADA               	clrf	fsr2h,c
  3758  001250  ECEF  F00B         	call	_I2Cread	;wreg free
  3759  001254  ECD6  F00B         	call	_BCDbin
  3760  001258  6EDF               	movwf	indf2,c
  3761                           
  3762                           ;DS1307.c: 29:     I2CACK();
  3763  00125A  ECF9  F00B         	call	_I2CACK	;wreg free
  3764                           
  3765                           ;DS1307.c: 30:     data[1] = BCDbin(I2Cread());
  3766  00125E  5004               	movf	DS1307read@data^0,w,c
  3767  001260  6ED9               	movwf	fsr2l,c
  3768  001262  6ADA               	clrf	fsr2h,c
  3769  001264  0E01               	movlw	1
  3770  001266  26D9               	addwf	fsr2l,f,c
  3771  001268  ECEF  F00B         	call	_I2Cread	;wreg free
  3772  00126C  ECD6  F00B         	call	_BCDbin
  3773  001270  6EDF               	movwf	indf2,c
  3774                           
  3775                           ;DS1307.c: 31:     I2CACK();
  3776  001272  ECF9  F00B         	call	_I2CACK	;wreg free
  3777                           
  3778                           ;DS1307.c: 32:     data[2] = BCDbin(I2Cread());
  3779  001276  5004               	movf	DS1307read@data^0,w,c
  3780  001278  6ED9               	movwf	fsr2l,c
  3781  00127A  6ADA               	clrf	fsr2h,c
  3782  00127C  0E02               	movlw	2
  3783  00127E  26D9               	addwf	fsr2l,f,c
  3784  001280  ECEF  F00B         	call	_I2Cread	;wreg free
  3785  001284  ECD6  F00B         	call	_BCDbin
  3786  001288  6EDF               	movwf	indf2,c
  3787                           
  3788                           ;DS1307.c: 33:     I2CACK();
  3789  00128A  ECF9  F00B         	call	_I2CACK	;wreg free
  3790                           
  3791                           ;DS1307.c: 34:     data[3] = BCDbin(I2Cread());
  3792  00128E  5004               	movf	DS1307read@data^0,w,c
  3793  001290  6ED9               	movwf	fsr2l,c
  3794  001292  6ADA               	clrf	fsr2h,c
  3795  001294  0E03               	movlw	3
  3796  001296  26D9               	addwf	fsr2l,f,c
  3797  001298  ECEF  F00B         	call	_I2Cread	;wreg free
  3798  00129C  ECD6  F00B         	call	_BCDbin
  3799  0012A0  6EDF               	movwf	indf2,c
  3800                           
  3801                           ;DS1307.c: 35:     I2CACK();
  3802  0012A2  ECF9  F00B         	call	_I2CACK	;wreg free
  3803                           
  3804                           ;DS1307.c: 36:     data[4] = BCDbin(I2Cread());
  3805  0012A6  5004               	movf	DS1307read@data^0,w,c
  3806  0012A8  6ED9               	movwf	fsr2l,c
  3807  0012AA  6ADA               	clrf	fsr2h,c
  3808  0012AC  0E04               	movlw	4
  3809  0012AE  26D9               	addwf	fsr2l,f,c
  3810  0012B0  ECEF  F00B         	call	_I2Cread	;wreg free
  3811  0012B4  ECD6  F00B         	call	_BCDbin
  3812  0012B8  6EDF               	movwf	indf2,c
  3813                           
  3814                           ;DS1307.c: 37:     I2CACK();
  3815  0012BA  ECF9  F00B         	call	_I2CACK	;wreg free
  3816                           
  3817                           ;DS1307.c: 38:     data[5] = BCDbin(I2Cread());
  3818  0012BE  5004               	movf	DS1307read@data^0,w,c
  3819  0012C0  6ED9               	movwf	fsr2l,c
  3820  0012C2  6ADA               	clrf	fsr2h,c
  3821  0012C4  0E05               	movlw	5
  3822  0012C6  26D9               	addwf	fsr2l,f,c
  3823  0012C8  ECEF  F00B         	call	_I2Cread	;wreg free
  3824  0012CC  ECD6  F00B         	call	_BCDbin
  3825  0012D0  6EDF               	movwf	indf2,c
  3826                           
  3827                           ;DS1307.c: 39:     I2CACK();
  3828  0012D2  ECF9  F00B         	call	_I2CACK	;wreg free
  3829                           
  3830                           ;DS1307.c: 40:     data[6] = BCDbin(I2Cread());
  3831  0012D6  5004               	movf	DS1307read@data^0,w,c
  3832  0012D8  6ED9               	movwf	fsr2l,c
  3833  0012DA  6ADA               	clrf	fsr2h,c
  3834  0012DC  0E06               	movlw	6
  3835  0012DE  26D9               	addwf	fsr2l,f,c
  3836  0012E0  ECEF  F00B         	call	_I2Cread	;wreg free
  3837  0012E4  ECD6  F00B         	call	_BCDbin
  3838  0012E8  6EDF               	movwf	indf2,c
  3839                           
  3840                           ;DS1307.c: 41:     I2CNACK();
  3841  0012EA  ECF4  F00B         	call	_I2CNACK	;wreg free
  3842                           
  3843                           ;DS1307.c: 42:     I2Cstop();
  3844  0012EE  ECFE  F00B         	call	_I2Cstop	;wreg free
  3845  0012F2  0012               	return		;funcret
  3846  0012F4                     __end_of_DS1307read:
  3847                           	callstack 0
  3848                           
  3849 ;; *************** function _I2Cstop *****************
  3850 ;; Defined at:
  3851 ;;		line 41 in file "I2C.c"
  3852 ;; Parameters:    Size  Location     Type
  3853 ;;		None
  3854 ;; Auto vars:     Size  Location     Type
  3855 ;;		None
  3856 ;; Return value:  Size  Location     Type
  3857 ;;                  1    wreg      void 
  3858 ;; Registers used:
  3859 ;;		None
  3860 ;; Tracked objects:
  3861 ;;		On entry : 0/0
  3862 ;;		On exit  : 0/0
  3863 ;;		Unchanged: 0/0
  3864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3865 ;;      Params:         0       0       0       0       0       0       0       0       0
  3866 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3867 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3868 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3869 ;;Total ram usage:        0 bytes
  3870 ;; Hardware stack levels used:    1
  3871 ;; This function calls:
  3872 ;;		Nothing
  3873 ;; This function is called by:
  3874 ;;		_DS1307setTime
  3875 ;;		_DS1307read
  3876 ;; This function uses a non-reentrant model
  3877 ;;
  3878                           
  3879                           	psect	text24
  3880  0017FC                     __ptext24:
  3881                           	callstack 0
  3882  0017FC                     _I2Cstop:
  3883                           	callstack 29
  3884                           
  3885                           ;I2C.c: 42:     SSPCON2bits.PEN = 1;
  3886                           
  3887                           ;incstack = 0
  3888  0017FC  84C5               	bsf	197,2,c	;volatile
  3889  0017FE                     l110:
  3890  0017FE  A4C5               	btfss	197,2,c	;volatile
  3891  001800  0012               	return	
  3892  001802  D7FD               	goto	l110
  3893  001804                     __end_of_I2Cstop:
  3894                           	callstack 0
  3895                           
  3896 ;; *************** function _I2Cstart *****************
  3897 ;; Defined at:
  3898 ;;		line 21 in file "I2C.c"
  3899 ;; Parameters:    Size  Location     Type
  3900 ;;		None
  3901 ;; Auto vars:     Size  Location     Type
  3902 ;;		None
  3903 ;; Return value:  Size  Location     Type
  3904 ;;                  1    wreg      void 
  3905 ;; Registers used:
  3906 ;;		wreg, status,2, status,0, cstack
  3907 ;; Tracked objects:
  3908 ;;		On entry : 0/0
  3909 ;;		On exit  : 0/0
  3910 ;;		Unchanged: 0/0
  3911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3912 ;;      Params:         0       0       0       0       0       0       0       0       0
  3913 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3914 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3915 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3916 ;;Total ram usage:        0 bytes
  3917 ;; Hardware stack levels used:    1
  3918 ;; Hardware stack levels required when called:    1
  3919 ;; This function calls:
  3920 ;;		_I2Cidle
  3921 ;; This function is called by:
  3922 ;;		_DS1307setTime
  3923 ;;		_DS1307read
  3924 ;; This function uses a non-reentrant model
  3925 ;;
  3926                           
  3927                           	psect	text25
  3928  0017D2                     __ptext25:
  3929                           	callstack 0
  3930  0017D2                     _I2Cstart:
  3931                           	callstack 28
  3932                           
  3933                           ;I2C.c: 22:     I2Cidle();
  3934                           
  3935                           ;incstack = 0
  3936  0017D2  ECBD  F00B         	call	_I2Cidle	;wreg free
  3937                           
  3938                           ;I2C.c: 23:     SSPCON2bits.SEN = 1;
  3939  0017D6  80C5               	bsf	197,0,c	;volatile
  3940  0017D8                     l93:
  3941  0017D8  A0C5               	btfss	197,0,c	;volatile
  3942  0017DA  0012               	return	
  3943  0017DC  D7FD               	goto	l93
  3944  0017DE                     __end_of_I2Cstart:
  3945                           	callstack 0
  3946                           
  3947 ;; *************** function _I2Cidle *****************
  3948 ;; Defined at:
  3949 ;;		line 17 in file "I2C.c"
  3950 ;; Parameters:    Size  Location     Type
  3951 ;;		None
  3952 ;; Auto vars:     Size  Location     Type
  3953 ;;		None
  3954 ;; Return value:  Size  Location     Type
  3955 ;;                  1    wreg      void 
  3956 ;; Registers used:
  3957 ;;		wreg, status,2, status,0
  3958 ;; Tracked objects:
  3959 ;;		On entry : 0/0
  3960 ;;		On exit  : 0/0
  3961 ;;		Unchanged: 0/0
  3962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3963 ;;      Params:         0       0       0       0       0       0       0       0       0
  3964 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3965 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3966 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3967 ;;Total ram usage:        1 bytes
  3968 ;; Hardware stack levels used:    1
  3969 ;; This function calls:
  3970 ;;		Nothing
  3971 ;; This function is called by:
  3972 ;;		_I2Cstart
  3973 ;; This function uses a non-reentrant model
  3974 ;;
  3975                           
  3976                           	psect	text26
  3977  00177A                     __ptext26:
  3978                           	callstack 0
  3979  00177A                     _I2Cidle:
  3980                           	callstack 28
  3981                           
  3982                           ;I2C.c: 18:     while((SSPCON2 & 0x1F) | SSPSTATbits.RW);
  3983                           
  3984                           ;incstack = 0
  3985  00177A  A4C7               	btfss	199,2,c	;volatile
  3986  00177C  D003               	goto	u1130
  3987  00177E  6A01               	clrf	??_I2Cidle^0,c
  3988  001780  2A01               	incf	??_I2Cidle^0,f,c
  3989  001782  D001               	goto	u1138
  3990  001784                     u1130:
  3991  001784  6A01               	clrf	??_I2Cidle^0,c
  3992  001786                     u1138:
  3993  001786  50C5               	movf	197,w,c	;volatile
  3994  001788  0B1F               	andlw	31
  3995  00178A  1001               	iorwf	??_I2Cidle^0,w,c
  3996  00178C  0900               	iorlw	0
  3997  00178E  B4D8               	btfsc	status,2,c
  3998  001790  0012               	return	
  3999  001792  D7F3               	goto	_I2Cidle
  4000  001794                     __end_of_I2Cidle:
  4001                           	callstack 0
  4002                           
  4003 ;; *************** function _I2Creset *****************
  4004 ;; Defined at:
  4005 ;;		line 46 in file "I2C.c"
  4006 ;; Parameters:    Size  Location     Type
  4007 ;;		None
  4008 ;; Auto vars:     Size  Location     Type
  4009 ;;		None
  4010 ;; Return value:  Size  Location     Type
  4011 ;;                  1    wreg      void 
  4012 ;; Registers used:
  4013 ;;		None
  4014 ;; Tracked objects:
  4015 ;;		On entry : 0/0
  4016 ;;		On exit  : 0/0
  4017 ;;		Unchanged: 0/0
  4018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4019 ;;      Params:         0       0       0       0       0       0       0       0       0
  4020 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4021 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4022 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4023 ;;Total ram usage:        0 bytes
  4024 ;; Hardware stack levels used:    1
  4025 ;; This function calls:
  4026 ;;		Nothing
  4027 ;; This function is called by:
  4028 ;;		_DS1307read
  4029 ;; This function uses a non-reentrant model
  4030 ;;
  4031                           
  4032                           	psect	text27
  4033  001804                     __ptext27:
  4034                           	callstack 0
  4035  001804                     _I2Creset:
  4036                           	callstack 29
  4037                           
  4038                           ;I2C.c: 47:     SSPCON2bits.RSEN = 1;
  4039                           
  4040                           ;incstack = 0
  4041  001804  82C5               	bsf	197,1,c	;volatile
  4042  001806                     l116:
  4043  001806  A2C5               	btfss	197,1,c	;volatile
  4044  001808  0012               	return	
  4045  00180A  D7FD               	goto	l116
  4046  00180C                     __end_of_I2Creset:
  4047                           	callstack 0
  4048                           
  4049 ;; *************** function _I2Cread *****************
  4050 ;; Defined at:
  4051 ;;		line 63 in file "I2C.c"
  4052 ;; Parameters:    Size  Location     Type
  4053 ;;		None
  4054 ;; Auto vars:     Size  Location     Type
  4055 ;;		None
  4056 ;; Return value:  Size  Location     Type
  4057 ;;                  1    wreg      unsigned char 
  4058 ;; Registers used:
  4059 ;;		wreg, status,2
  4060 ;; Tracked objects:
  4061 ;;		On entry : 0/0
  4062 ;;		On exit  : 0/0
  4063 ;;		Unchanged: 0/0
  4064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4065 ;;      Params:         0       0       0       0       0       0       0       0       0
  4066 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4067 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4068 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4069 ;;Total ram usage:        0 bytes
  4070 ;; Hardware stack levels used:    1
  4071 ;; This function calls:
  4072 ;;		Nothing
  4073 ;; This function is called by:
  4074 ;;		_DS1307read
  4075 ;; This function uses a non-reentrant model
  4076 ;;
  4077                           
  4078                           	psect	text28
  4079  0017DE                     __ptext28:
  4080                           	callstack 0
  4081  0017DE                     _I2Cread:
  4082                           	callstack 29
  4083                           
  4084                           ;I2C.c: 64:     SSPCON2bits.RCEN = 1;
  4085                           
  4086                           ;incstack = 0
  4087  0017DE  86C5               	bsf	197,3,c	;volatile
  4088  0017E0                     l134:
  4089  0017E0  A0C7               	btfss	199,0,c	;volatile
  4090  0017E2  D7FE               	goto	l134
  4091                           
  4092                           ;I2C.c: 66:     return SSPBUF;
  4093  0017E4  50C9               	movf	201,w,c	;volatile
  4094  0017E6  0012               	return		;funcret
  4095  0017E8                     __end_of_I2Cread:
  4096                           	callstack 0
  4097                           
  4098 ;; *************** function _I2Cdata *****************
  4099 ;; Defined at:
  4100 ;;		line 36 in file "I2C.c"
  4101 ;; Parameters:    Size  Location     Type
  4102 ;;  address         1    wreg     unsigned char 
  4103 ;;  data            1    1[COMRAM] unsigned char 
  4104 ;; Auto vars:     Size  Location     Type
  4105 ;;  address         1    2[COMRAM] unsigned char 
  4106 ;; Return value:  Size  Location     Type
  4107 ;;                  1    wreg      void 
  4108 ;; Registers used:
  4109 ;;		wreg, status,2, cstack
  4110 ;; Tracked objects:
  4111 ;;		On entry : 0/0
  4112 ;;		On exit  : 0/0
  4113 ;;		Unchanged: 0/0
  4114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4115 ;;      Params:         1       0       0       0       0       0       0       0       0
  4116 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4117 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4118 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4119 ;;Total ram usage:        2 bytes
  4120 ;; Hardware stack levels used:    1
  4121 ;; Hardware stack levels required when called:    1
  4122 ;; This function calls:
  4123 ;;		_I2Cwrite
  4124 ;; This function is called by:
  4125 ;;		_DS1307setTime
  4126 ;;		_DS1307read
  4127 ;; This function uses a non-reentrant model
  4128 ;;
  4129                           
  4130                           	psect	text29
  4131  0017C2                     __ptext29:
  4132                           	callstack 0
  4133  0017C2                     _I2Cdata:
  4134                           	callstack 28
  4135                           
  4136                           ;incstack = 0
  4137                           ;I2Cdata@address stored from wreg
  4138  0017C2  6E03               	movwf	I2Cdata@address^0,c
  4139                           
  4140                           ;I2C.c: 37:     I2Cwrite(address);
  4141  0017C4  5003               	movf	I2Cdata@address^0,w,c
  4142  0017C6  ECCA  F00B         	call	_I2Cwrite
  4143                           
  4144                           ;I2C.c: 38:     I2Cwrite(data);
  4145  0017CA  5002               	movf	I2Cdata@data^0,w,c
  4146  0017CC  ECCA  F00B         	call	_I2Cwrite
  4147  0017D0  0012               	return		;funcret
  4148  0017D2                     __end_of_I2Cdata:
  4149                           	callstack 0
  4150                           
  4151 ;; *************** function _I2Cwrite *****************
  4152 ;; Defined at:
  4153 ;;		line 27 in file "I2C.c"
  4154 ;; Parameters:    Size  Location     Type
  4155 ;;  data            1    wreg     unsigned char 
  4156 ;; Auto vars:     Size  Location     Type
  4157 ;;  data            1    0[COMRAM] unsigned char 
  4158 ;; Return value:  Size  Location     Type
  4159 ;;                  1    wreg      void 
  4160 ;; Registers used:
  4161 ;;		wreg
  4162 ;; Tracked objects:
  4163 ;;		On entry : 0/0
  4164 ;;		On exit  : 0/0
  4165 ;;		Unchanged: 0/0
  4166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4167 ;;      Params:         0       0       0       0       0       0       0       0       0
  4168 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4169 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4170 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4171 ;;Total ram usage:        1 bytes
  4172 ;; Hardware stack levels used:    1
  4173 ;; This function calls:
  4174 ;;		Nothing
  4175 ;; This function is called by:
  4176 ;;		_I2Cdata
  4177 ;;		_DS1307setTime
  4178 ;;		_DS1307read
  4179 ;; This function uses a non-reentrant model
  4180 ;;
  4181                           
  4182                           	psect	text30
  4183  001794                     __ptext30:
  4184                           	callstack 0
  4185  001794                     _I2Cwrite:
  4186                           	callstack 29
  4187                           
  4188                           ;incstack = 0
  4189                           ;I2Cwrite@data stored from wreg
  4190  001794  6E01               	movwf	I2Cwrite@data^0,c
  4191                           
  4192                           ;I2C.c: 28:     SSPBUF = data;
  4193  001796  C001  FFC9         	movff	I2Cwrite@data,4041	;volatile
  4194  00179A                     l99:
  4195  00179A  A4C7               	btfss	199,2,c	;volatile
  4196  00179C  B0C7               	btfsc	199,0,c	;volatile
  4197  00179E  D7FD               	goto	l99
  4198                           
  4199                           ;I2C.c: 30:     if(SSPCON2bits.ACKSTAT)
  4200  0017A0  ACC5               	btfss	197,6,c	;volatile
  4201  0017A2  D002               	goto	l102
  4202                           
  4203                           ;I2C.c: 31:         SSPCON2bits.PEN = 1;
  4204  0017A4  84C5               	bsf	197,2,c	;volatile
  4205  0017A6  0012               	return	
  4206  0017A8                     l102:
  4207                           
  4208                           ;I2C.c: 33:         SSPIF = 0;
  4209  0017A8  969E               	bcf	3998,3,c	;volatile
  4210  0017AA  0012               	return		;funcret
  4211  0017AC                     __end_of_I2Cwrite:
  4212                           	callstack 0
  4213                           
  4214 ;; *************** function _I2CNACK *****************
  4215 ;; Defined at:
  4216 ;;		line 57 in file "I2C.c"
  4217 ;; Parameters:    Size  Location     Type
  4218 ;;		None
  4219 ;; Auto vars:     Size  Location     Type
  4220 ;;		None
  4221 ;; Return value:  Size  Location     Type
  4222 ;;                  1    wreg      void 
  4223 ;; Registers used:
  4224 ;;		None
  4225 ;; Tracked objects:
  4226 ;;		On entry : 0/0
  4227 ;;		On exit  : 0/0
  4228 ;;		Unchanged: 0/0
  4229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4230 ;;      Params:         0       0       0       0       0       0       0       0       0
  4231 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4232 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4233 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4234 ;;Total ram usage:        0 bytes
  4235 ;; Hardware stack levels used:    1
  4236 ;; This function calls:
  4237 ;;		Nothing
  4238 ;; This function is called by:
  4239 ;;		_DS1307read
  4240 ;; This function uses a non-reentrant model
  4241 ;;
  4242                           
  4243                           	psect	text31
  4244  0017E8                     __ptext31:
  4245                           	callstack 0
  4246  0017E8                     _I2CNACK:
  4247                           	callstack 29
  4248                           
  4249                           ;I2C.c: 58:     SSPCON2bits.ACKDT = 1;
  4250                           
  4251                           ;incstack = 0
  4252  0017E8  8AC5               	bsf	197,5,c	;volatile
  4253                           
  4254                           ;I2C.c: 59:     SSPCON2bits.ACKEN = 1;
  4255  0017EA  88C5               	bsf	197,4,c	;volatile
  4256  0017EC                     l128:
  4257  0017EC  A8C5               	btfss	197,4,c	;volatile
  4258  0017EE  0012               	return	
  4259  0017F0  D7FD               	goto	l128
  4260  0017F2                     __end_of_I2CNACK:
  4261                           	callstack 0
  4262                           
  4263 ;; *************** function _I2CACK *****************
  4264 ;; Defined at:
  4265 ;;		line 51 in file "I2C.c"
  4266 ;; Parameters:    Size  Location     Type
  4267 ;;		None
  4268 ;; Auto vars:     Size  Location     Type
  4269 ;;		None
  4270 ;; Return value:  Size  Location     Type
  4271 ;;                  1    wreg      void 
  4272 ;; Registers used:
  4273 ;;		None
  4274 ;; Tracked objects:
  4275 ;;		On entry : 0/0
  4276 ;;		On exit  : 0/0
  4277 ;;		Unchanged: 0/0
  4278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4279 ;;      Params:         0       0       0       0       0       0       0       0       0
  4280 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4281 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4282 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4283 ;;Total ram usage:        0 bytes
  4284 ;; Hardware stack levels used:    1
  4285 ;; This function calls:
  4286 ;;		Nothing
  4287 ;; This function is called by:
  4288 ;;		_DS1307read
  4289 ;; This function uses a non-reentrant model
  4290 ;;
  4291                           
  4292                           	psect	text32
  4293  0017F2                     __ptext32:
  4294                           	callstack 0
  4295  0017F2                     _I2CACK:
  4296                           	callstack 29
  4297                           
  4298                           ;I2C.c: 52:     SSPCON2bits.ACKDT = 0;
  4299                           
  4300                           ;incstack = 0
  4301  0017F2  9AC5               	bcf	197,5,c	;volatile
  4302                           
  4303                           ;I2C.c: 53:     SSPCON2bits.ACKEN = 1;
  4304  0017F4  88C5               	bsf	197,4,c	;volatile
  4305  0017F6                     l122:
  4306  0017F6  A8C5               	btfss	197,4,c	;volatile
  4307  0017F8  0012               	return	
  4308  0017FA  D7FD               	goto	l122
  4309  0017FC                     __end_of_I2CACK:
  4310                           	callstack 0
  4311                           
  4312 ;; *************** function _BCDbin *****************
  4313 ;; Defined at:
  4314 ;;		line 50 in file "DS1307.c"
  4315 ;; Parameters:    Size  Location     Type
  4316 ;;  bcd             1    wreg     unsigned char 
  4317 ;; Auto vars:     Size  Location     Type
  4318 ;;  bcd             1    1[COMRAM] unsigned char 
  4319 ;; Return value:  Size  Location     Type
  4320 ;;                  1    wreg      unsigned char 
  4321 ;; Registers used:
  4322 ;;		wreg, status,2, status,0, prodl, prodh
  4323 ;; Tracked objects:
  4324 ;;		On entry : 0/0
  4325 ;;		On exit  : 0/0
  4326 ;;		Unchanged: 0/0
  4327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4328 ;;      Params:         0       0       0       0       0       0       0       0       0
  4329 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4330 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4331 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4332 ;;Total ram usage:        2 bytes
  4333 ;; Hardware stack levels used:    1
  4334 ;; This function calls:
  4335 ;;		Nothing
  4336 ;; This function is called by:
  4337 ;;		_DS1307read
  4338 ;; This function uses a non-reentrant model
  4339 ;;
  4340                           
  4341                           	psect	text33
  4342  0017AC                     __ptext33:
  4343                           	callstack 0
  4344  0017AC                     _BCDbin:
  4345                           	callstack 29
  4346                           
  4347                           ;incstack = 0
  4348                           ;BCDbin@bcd stored from wreg
  4349  0017AC  6E02               	movwf	BCDbin@bcd^0,c
  4350                           
  4351                           ;DS1307.c: 51:     return (bcd%16 + 10 * (bcd/16));
  4352  0017AE  C002  F001         	movff	BCDbin@bcd,??_BCDbin
  4353  0017B2  0E0F               	movlw	15
  4354  0017B4  1601               	andwf	??_BCDbin^0,f,c
  4355  0017B6  3802               	swapf	BCDbin@bcd^0,w,c
  4356  0017B8  0B0F               	andlw	15
  4357  0017BA  0D0A               	mullw	10
  4358  0017BC  50F3               	movf	243,w,c
  4359  0017BE  2401               	addwf	??_BCDbin^0,w,c
  4360  0017C0  0012               	return		;funcret
  4361  0017C2                     __end_of_BCDbin:
  4362                           	callstack 0
  4363                           
  4364                           	psect	rparam
  4365  0000                     
  4366                           	psect	idloc
  4367                           
  4368                           ;Config register IDLOC0 @ 0x200000
  4369                           ;	unspecified, using default values
  4370  200000                     	org	2097152
  4371  200000  FF                 	db	255
  4372                           
  4373                           ;Config register IDLOC1 @ 0x200001
  4374                           ;	unspecified, using default values
  4375  200001                     	org	2097153
  4376  200001  FF                 	db	255
  4377                           
  4378                           ;Config register IDLOC2 @ 0x200002
  4379                           ;	unspecified, using default values
  4380  200002                     	org	2097154
  4381  200002  FF                 	db	255
  4382                           
  4383                           ;Config register IDLOC3 @ 0x200003
  4384                           ;	unspecified, using default values
  4385  200003                     	org	2097155
  4386  200003  FF                 	db	255
  4387                           
  4388                           ;Config register IDLOC4 @ 0x200004
  4389                           ;	unspecified, using default values
  4390  200004                     	org	2097156
  4391  200004  FF                 	db	255
  4392                           
  4393                           ;Config register IDLOC5 @ 0x200005
  4394                           ;	unspecified, using default values
  4395  200005                     	org	2097157
  4396  200005  FF                 	db	255
  4397                           
  4398                           ;Config register IDLOC6 @ 0x200006
  4399                           ;	unspecified, using default values
  4400  200006                     	org	2097158
  4401  200006  FF                 	db	255
  4402                           
  4403                           ;Config register IDLOC7 @ 0x200007
  4404                           ;	unspecified, using default values
  4405  200007                     	org	2097159
  4406  200007  FF                 	db	255
  4407                           
  4408                           	psect	config
  4409                           
  4410                           ;Config register CONFIG1L @ 0x300000
  4411                           ;	PLL Prescaler Selection bits
  4412                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  4413                           ;	System Clock Postscaler Selection bits
  4414                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  4415                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  4416                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  4417  300000                     	org	3145728
  4418  300000  00                 	db	0
  4419                           
  4420                           ;Config register CONFIG1H @ 0x300001
  4421                           ;	Oscillator Selection bits
  4422                           ;	FOSC = INTOSC_XT, Internal oscillator, XT used by USB (INTXT)
  4423                           ;	Fail-Safe Clock Monitor Enable bit
  4424                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4425                           ;	Internal/External Oscillator Switchover bit
  4426                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4427  300001                     	org	3145729
  4428  300001  0A                 	db	10
  4429                           
  4430                           ;Config register CONFIG2L @ 0x300002
  4431                           ;	Power-up Timer Enable bit
  4432                           ;	PWRT = ON, PWRT enabled
  4433                           ;	Brown-out Reset Enable bits
  4434                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  4435                           ;	Brown-out Reset Voltage bits
  4436                           ;	BORV = 3, Minimum setting 2.05V
  4437                           ;	USB Voltage Regulator Enable bit
  4438                           ;	VREGEN = OFF, USB voltage regulator disabled
  4439  300002                     	org	3145730
  4440  300002  1E                 	db	30
  4441                           
  4442                           ;Config register CONFIG2H @ 0x300003
  4443                           ;	Watchdog Timer Enable bit
  4444                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4445                           ;	Watchdog Timer Postscale Select bits
  4446                           ;	WDTPS = 32768, 1:32768
  4447  300003                     	org	3145731
  4448  300003  1E                 	db	30
  4449                           
  4450                           ; Padding undefined space
  4451  300004                     	org	3145732
  4452  300004  FF                 	db	255
  4453                           
  4454                           ;Config register CONFIG3H @ 0x300005
  4455                           ;	CCP2 MUX bit
  4456                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  4457                           ;	PORTB A/D Enable bit
  4458                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  4459                           ;	Low-Power Timer 1 Oscillator Enable bit
  4460                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  4461                           ;	MCLR Pin Enable bit
  4462                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  4463  300005                     	org	3145733
  4464  300005  81                 	db	129
  4465                           
  4466                           ;Config register CONFIG4L @ 0x300006
  4467                           ;	Stack Full/Underflow Reset Enable bit
  4468                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4469                           ;	Single-Supply ICSP Enable bit
  4470                           ;	LVP = OFF, Single-Supply ICSP disabled
  4471                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  4472                           ;	ICPRT = OFF, ICPORT disabled
  4473                           ;	Extended Instruction Set Enable bit
  4474                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  4475                           ;	Background Debugger Enable bit
  4476                           ;	DEBUG = 0x1, unprogrammed default
  4477  300006                     	org	3145734
  4478  300006  81                 	db	129
  4479                           
  4480                           ; Padding undefined space
  4481  300007                     	org	3145735
  4482  300007  FF                 	db	255
  4483                           
  4484                           ;Config register CONFIG5L @ 0x300008
  4485                           ;	Code Protection bit
  4486                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  4487                           ;	Code Protection bit
  4488                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  4489                           ;	Code Protection bit
  4490                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  4491                           ;	Code Protection bit
  4492                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  4493  300008                     	org	3145736
  4494  300008  0F                 	db	15
  4495                           
  4496                           ;Config register CONFIG5H @ 0x300009
  4497                           ;	Boot Block Code Protection bit
  4498                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  4499                           ;	Data EEPROM Code Protection bit
  4500                           ;	CPD = OFF, Data EEPROM is not code-protected
  4501  300009                     	org	3145737
  4502  300009  C0                 	db	192
  4503                           
  4504                           ;Config register CONFIG6L @ 0x30000A
  4505                           ;	Write Protection bit
  4506                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  4507                           ;	Write Protection bit
  4508                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  4509                           ;	Write Protection bit
  4510                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  4511                           ;	Write Protection bit
  4512                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  4513  30000A                     	org	3145738
  4514  30000A  0F                 	db	15
  4515                           
  4516                           ;Config register CONFIG6H @ 0x30000B
  4517                           ;	Configuration Register Write Protection bit
  4518                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  4519                           ;	Boot Block Write Protection bit
  4520                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  4521                           ;	Data EEPROM Write Protection bit
  4522                           ;	WRTD = OFF, Data EEPROM is not write-protected
  4523  30000B                     	org	3145739
  4524  30000B  E0                 	db	224
  4525                           
  4526                           ;Config register CONFIG7L @ 0x30000C
  4527                           ;	Table Read Protection bit
  4528                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  4529                           ;	Table Read Protection bit
  4530                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  4531                           ;	Table Read Protection bit
  4532                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  4533                           ;	Table Read Protection bit
  4534                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  4535  30000C                     	org	3145740
  4536  30000C  0F                 	db	15
  4537                           
  4538                           ;Config register CONFIG7H @ 0x30000D
  4539                           ;	Boot Block Table Read Protection bit
  4540                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  4541  30000D                     	org	3145741
  4542  30000D  40                 	db	64
  4543                           tosu	equ	0xFFF
  4544                           tosh	equ	0xFFE
  4545                           tosl	equ	0xFFD
  4546                           stkptr	equ	0xFFC
  4547                           pclatu	equ	0xFFB
  4548                           pclath	equ	0xFFA
  4549                           pcl	equ	0xFF9
  4550                           tblptru	equ	0xFF8
  4551                           tblptrh	equ	0xFF7
  4552                           tblptrl	equ	0xFF6
  4553                           tablat	equ	0xFF5
  4554                           prodh	equ	0xFF4
  4555                           prodl	equ	0xFF3
  4556                           indf0	equ	0xFEF
  4557                           postinc0	equ	0xFEE
  4558                           postdec0	equ	0xFED
  4559                           preinc0	equ	0xFEC
  4560                           plusw0	equ	0xFEB
  4561                           fsr0h	equ	0xFEA
  4562                           fsr0l	equ	0xFE9
  4563                           wreg	equ	0xFE8
  4564                           indf1	equ	0xFE7
  4565                           postinc1	equ	0xFE6
  4566                           postdec1	equ	0xFE5
  4567                           preinc1	equ	0xFE4
  4568                           plusw1	equ	0xFE3
  4569                           fsr1h	equ	0xFE2
  4570                           fsr1l	equ	0xFE1
  4571                           bsr	equ	0xFE0
  4572                           indf2	equ	0xFDF
  4573                           postinc2	equ	0xFDE
  4574                           postdec2	equ	0xFDD
  4575                           preinc2	equ	0xFDC
  4576                           plusw2	equ	0xFDB
  4577                           fsr2h	equ	0xFDA
  4578                           fsr2l	equ	0xFD9
  4579                           status	equ	0xFD8

Data Sizes:
    Strings     42
    Constant    0
    Data        0
    BSS         40
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     92      94
    BANK0           160     37      75
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 7
		 -> sprintf@f(COMRAM[5]), 

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 20
		 -> main@time(BANK0[10]), main@date(BANK0[20]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 7
		 -> sprintf@f(COMRAM[5]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 7
		 -> sprintf@f(COMRAM[5]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 16
		 -> STR_2(CODE[9]), STR_1(CODE[16]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 16
		 -> STR_2(CODE[9]), STR_1(CODE[16]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 7
		 -> sprintf@f(COMRAM[5]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 7
		 -> sprintf@f(COMRAM[5]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 7
		 -> sprintf@f(COMRAM[5]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 16
		 -> STR_2(CODE[9]), STR_1(CODE[16]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 20
		 -> main@time(BANK0[10]), main@date(BANK0[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S990_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 20
		 -> main@time(BANK0[10]), main@date(BANK0[20]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 20
		 -> main@time(BANK0[10]), main@date(BANK0[20]), 

    DS1307read@data	PTR unsigned char  size(1) Largest target is 7
		 -> main@datos(BANK0[7]), 

    Lcd_Out2@buffer	PTR unsigned char  size(2) Largest target is 20
		 -> STR_3(CODE[17]), main@time(BANK0[10]), main@date(BANK0[20]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->___aodiv
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _Lcd_Out2->_Lcd_Chr_CP
    _Lcd_Out2->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _I2Cinit->___lldiv
    _DS1307setTime->_binBCD
    _binBCD->___lbdiv
    _binBCD->___lbmod
    _DS1307read->_I2Cdata
    _I2Cstart->_I2Cidle
    _I2Cdata->_I2Cwrite

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                37    37      0   10774
                                              0 BANK0     37    37      0
                         _DS1307read
                      _DS1307setTime
                            _I2Cinit
                            _Lcd_Cmd
                           _Lcd_Init
                           _Lcd_Out2
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             16     8      8    6608
                                             76 COMRAM    16     8      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             4     1      3    6105
                                             72 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           37    34      3    5751
                                             61 COMRAM    11     8      3
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    26      9    4358
                                             26 COMRAM    35    26      9
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     5      4    2709
                                             13 COMRAM     9     5      4
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               3     1      2     166
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                5     3      2    1235
                                              8 COMRAM     5     3      2
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     834
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _Lcd_Out2                                             7     4      3     989
                                              3 COMRAM     7     4      3
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Chr_CP                                           3     3      0     176
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     314
                                              3 COMRAM     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     176
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _I2Cinit                                             13     5      8     533
                                             13 COMRAM    13     5      8
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     314
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _DS1307setTime                                        7     1      6    1413
                                              6 COMRAM     7     1      6
                            _I2Cdata
                           _I2Cstart
                            _I2Cstop
                           _I2Cwrite
                             _binBCD
 ---------------------------------------------------------------------------------
 (2) _binBCD                                               2     2      0     517
                                              4 COMRAM     2     2      0
                            ___lbdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (3) ___lbmod                                              4     3      1     235
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (3) ___lbdiv                                              4     3      1     238
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) _DS1307read                                           1     0      1     514
                                              3 COMRAM     1     0      1
                             _BCDbin
                             _I2CACK
                            _I2CNACK
                            _I2Cdata
                            _I2Cread
                           _I2Creset
                           _I2Cstart
                            _I2Cstop
                           _I2Cwrite
 ---------------------------------------------------------------------------------
 (2) _I2Cstop                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2Cstart                                             0     0      0       0
                            _I2Cidle
 ---------------------------------------------------------------------------------
 (3) _I2Cidle                                              1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2Creset                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2Cread                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2Cdata                                              2     1      1     218
                                              1 COMRAM     2     1      1
                           _I2Cwrite
 ---------------------------------------------------------------------------------
 (2) _I2Cwrite                                             1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2CNACK                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2CACK                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _BCDbin                                               2     2      0      44
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DS1307read
     _BCDbin
     _I2CACK
     _I2CNACK
     _I2Cdata
       _I2Cwrite
     _I2Cread
     _I2Creset
     _I2Cstart
       _I2Cidle
     _I2Cstop
     _I2Cwrite
   _DS1307setTime
     _I2Cdata
       _I2Cwrite
     _I2Cstart
       _I2Cidle
     _I2Cstop
     _I2Cwrite
     _binBCD
       ___lbdiv
       ___lbmod
   _I2Cinit
     ___lldiv
   _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
   _Lcd_Out2
     _Lcd_Chr_CP
     _Lcd_Cmd
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _fputc
           _putch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     25      4B       5       46.9%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5C      5E       1       98.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A9      20        0.0%
DATA                 0      0      A9       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Apr 11 20:56:10 2021

            _SSPSTATbits 000FC7                       l23 10C2                       l93 17D8  
                     l99 179A                      l102 17A8                      l110 17FE  
                    l122 17F6                      l116 1806                      l134 17E0  
                    l128 17EC                      l199 1402                      l926 16BA  
        __end_of_I2CNACK 17F2                      l890 08A6                      l877 14BA  
                    l888 089E                      u900 0D62                      u821 0AB4  
                    u750 1420                      u840 0AEC                      u770 1462  
                    u970 16A0                      u980 0854                      u990 0856  
                    _abs 1692                      _pad 1494          __end_of_I2Cdata 17D2  
        __end_of_I2Cidle 1794                      wreg 000FE8          __end_of_I2Cinit 15DC  
        __end_of_I2Cread 17E8          __end_of_I2Cstop 1804                     l2000 12FE  
                   l2002 1304                     l2010 133A                     ?_abs 0013  
                   l2012 1342                     l2004 130A                     l2016 136A  
                   l2008 1312                     l2118 11BA                     l1600 0AD4  
                   l1602 0AE8                     l1620 0B80                     l1612 0B44  
                   l1710 08CE                     l1616 0B5A                     l1640 0D4A  
                   l1632 0D0C                     l1720 09C2                     l1642 0D5E  
                   l1554 1428                     l1706 08C0                     l1652 0DBC  
                   l1636 0D30                     l1564 16CE                     l1572 1724  
                   l1740 0A26                     l1820 0C6C                     l1574 1726  
                   l1670 14C4                     l1830 0CA6                     l1656 0DE2  
                   l1648 0DA6                     l1568 16E0                     l1664 14A4  
                   l1744 0A3A                     l1594 0AAE                     l1674 14D8  
                   l1826 0C9C                     l1764 1634                     l1780 1658  
                   l1940 13B4                     l1588 0A86                     l1668 14B2  
                   l1692 0882                     l1836 0CB8                     l1942 13C0  
                   l1678 14FC                     l1776 1650                     l1768 163A  
                   l1952 13F4                     l1960 15EC                     l1794 1716  
                   l1786 16FE                     l1962 1606                     ?_pad 000E  
                   l1998 12F8                     STR_1 0812                     STR_2 0822  
                   STR_3 0801                     u1020 0894                     u1110 0A10  
                   u1040 08BA                     u1130 1784                     u1050 09D0  
                   u1070 09F2                     u1071 09F0                     u1080 0A00  
                   u1240 0C08                     u1305 0E2E                     u1138 1786  
                   u1090 0A04                     u1315 0E50                     u1190 163E  
                   u1430 1362                     u1440 138A                     u1265 0F36  
                   u1275 0F52                     u1507 0F1C                     u1285 0F74  
                   u1517 1064                     u1437 1358                     u1390 13C4  
                   u1607 1024                     u1527 1074                     u1295 0E12  
                   u1447 1380                     u1465 15AA                     u1617 103A  
                   u1537 1084                     u1547 1094                     u1557 10A4  
                   u1477 122A                     u1567 10B4                     u1487 0E82  
                   u1577 10F2                     u1497 0F00                     u1587 1134  
                   u1597 0FA6                     abs@a 0013                     _dbuf 0066  
                   _main 1158                     _dtoa 082C                     _prec 0064  
                   _nout 0060                     pad@i 0013                     pad@p 0010  
                   fsr1h 000FE2                     fsr2h 000FDA                     indf1 000FE7  
                   indf2 000FDF                     fsr1l 000FE1                     pad@w 0015  
                   fsr2l 000FD9                     prodl 000FF3                     start 0000  
       __end_of_I2Creset 180C          __end_of_Lcd_Cmd 1046         __end_of_I2Cstart 17DE  
       __end_of_I2Cwrite 17AC             ___param_bank 000000               _Lcd_Chr_CP 0E04  
                  ??_abs 0015                    ??_pad 0012           Lcd_Out2@buffer 0005  
        __end_of___aodiv 0BA2                    ?_main 0001                    ?_dtoa 001B  
        __end_of___aomod 0E04          __end_of___lbdiv 165C          __end_of___lbmod 171E  
        __end_of___lldiv 1414            _DS1307setTime 1512             vfpfcnvrt@fmt 003F  
                  _SSPIF 007CF3                    _flags 005D                    _fputc 1414  
                  _fputs 16C4                    pad@fp 000E                    _width 0062  
                  _putch 180C                    dtoa@d 001C                    dtoa@i 003C  
                  dtoa@n 0034                    dtoa@p 002E                    dtoa@s 0032  
                  dtoa@w 0030                    tablat 000FF5                    status 000FD8  
        __end_of_sprintf 1692          ___lbdiv@divisor 0001          ___lbdiv@counter 0003  
       __end_of_Lcd_Init 1158         __end_of_Lcd_Out2 1392          __initialization 1760  
           __end_of_main 1232             __end_of_dtoa 0A5A                ??_I2CNACK 0001  
              ??_I2Cdata 0003                ??_I2Cidle 0001                ??_I2Cinit 0016  
              ??_I2Cread 0001                ??_I2Cstop 0001                   ??_main 005D  
                 ??_dtoa 0024           ?_DS1307setTime 0007            __activetblptr 000002  
           ??_DS1307read 0005                   _I2CACK 17F2                   ?_fputc 0001  
                 ?_fputs 0009                   _BCDbin 17AC                   ?_putch 0001  
              ??_Lcd_Cmd 0001                   _SSPADD 000FC8                   _SSPBUF 000FC9  
              BCDbin@bcd 0002             vfprintf@cfmt 004C       __end_of_DS1307read 12F4  
                 _binBCD 1740              ?_Lcd_Chr_CP 0001                ??___aodiv 0011  
              ??___aomod 0011                ??___lbdiv 0002                ??___lbmod 0002  
              ??___lldiv 0009        DS1307setTime@week 000A        DS1307setTime@year 000C  
                 clear_0 1766                   pad@buf 000F                   dtoa@fp 001B  
                 _strlen 171E                   fputc@c 0001                   fputs@c 000B  
                 fputs@i 000C                   fputs@s 0009             __mediumconst 0000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
              ?_I2Creset 0001                   putch@c 0001                ?_I2Cstart 0001  
       __end_of_vfprintf 1622                ?_I2Cwrite 0001                ??_sprintf 0055  
       ___lbdiv@dividend 0002          ___lbmod@divisor 0001               __accesstop 0060  
__end_of__initialization 1770          ___lbmod@counter 0003            ___rparam_used 000001  
         __pcstackCOMRAM 0001            __end_of_fputc 1494            __end_of_fputs 16F4  
        ??_DS1307setTime 000D            __end_of_putch 180E         ___lbdiv@quotient 0004  
             ??_I2Creset 0001                ?_Lcd_Init 0001                ?_Lcd_Out2 0004  
                ?_I2CACK 0001               ??_I2Cstart 0002               ??_I2Cwrite 0001  
                ??_fputc 0004                  ??_fputs 000B                  ?_BCDbin 0001  
    __size_of_Lcd_Chr_CP 0124                  ??_putch 0001               __pbssBANK0 0060  
                ?_binBCD 0001                  _I2CNACK 17E8                  _I2Cdata 17C2  
                _I2Cidle 177A                  _I2Cinit 157A                  _I2Cread 17DE  
                _I2Cstop 17FC                  ?_strlen 0001       __size_of_vfpfcnvrt 013E  
             ??_Lcd_Init 0004               ??_Lcd_Out2 0007          __size_of_I2CACK 000A  
                _SSPCON2 000FC5          __size_of_BCDbin 0016                  _Lcd_Cmd 0F28  
                __Hparam 0000                  __Lparam 0000                  ___aodiv 0A5A  
                ___aomod 0CE0          __size_of_binBCD 0020                  ___lbdiv 1622  
                ___lbmod 16F4                  ___lldiv 1392                ?_vfprintf 0049  
           __psmallconst 0800                  __pcinit 1760                  __ramtop 0800  
                __ptext0 1158                  __ptext1 165C                  __ptext2 15DC  
                __ptext3 0BA2                  __ptext4 082C                  __ptext5 1494  
                __ptext6 171E                  __ptext7 16C4                  __ptext8 1414  
                __ptext9 180C          __size_of_strlen 0022             __size_of_abs 0032  
     DS1307setTime@hours 000D             __size_of_pad 007E       DS1307setTime@month 000B  
                _sprintf 165C     end_of_initialization 1770                  fputc@fp 0003  
          __Lmediumconst 0000                  fputs@fp 000A          ___lldiv@divisor 0005  
        ___lldiv@counter 000D        __end_of_vfpfcnvrt 0CE0             ??_Lcd_Chr_CP 0001  
              Lcd_Out2@x 0004                Lcd_Out2@y 0009                  postdec2 000FDD  
                postinc0 000FEE                  postinc1 000FE6                  postinc2 000FDE  
             ??_vfprintf 004C                  strlen@a 0003                  strlen@s 0001  
       ___lbmod@dividend 0002                _TRISBbits 000F93                _TRISDbits 000F95  
         __end_of_I2CACK 17FC        __size_of_I2Creset 0008       __end_of_Lcd_Chr_CP 0F28  
      __size_of_I2Cstart 000C        __size_of_I2Cwrite 0018           __end_of_BCDbin 17C2  
            ___lbmod@rem 0004           __end_of_binBCD 1760              vfpfcnvrt@ap 0040  
            vfpfcnvrt@fp 003E              vfpfcnvrt@ll 0041             I2Cinit@clock 0012  
         __end_of_strlen 1740             I2Cinit@speed 001A      start_initialization 1760  
            __end_of_abs 16C4              __end_of_pad 1512                 ??_I2CACK 0001  
               ??_BCDbin 0001        __size_of_Lcd_Init 0112        __size_of_Lcd_Out2 009E  
            vfprintf@fmt 004A                 ??_binBCD 0005         DS1307setTime@day 0009  
               ?_I2CNACK 0001                 ?_I2Cdata 0002                 ?_I2Cidle 0001  
               ?_I2Cinit 000E                 ?_I2Cread 0001                 ?_I2Cstop 0001  
  __end_of_DS1307setTime 157A                 ??_strlen 0003              __pbssCOMRAM 005D  
          __pcstackBANK0 0086         ___aodiv@dividend 0001                 ?_Lcd_Cmd 0001  
              binBCD@bin 0006                _dtoa$1063 002C                 ?___aodiv 0001  
               ?___aomod 0001                 ?___lbdiv 0001         ___aodiv@quotient 0013  
               ?___lbmod 0001                 ?___lldiv 0001        __size_of_vfprintf 0046  
            __smallconst 0800             I2Cwrite@data 0001                 _I2Creset 1804  
               _I2Cstart 17D2                 _I2Cwrite 1794                 ?_sprintf 004D  
   DS1307setTime@minutes 0007     DS1307setTime@seconds 0008           __size_of_fputc 0080  
         __size_of_fputs 0030           __size_of_putch 0002                 _LATDbits 000F8C  
            I2Cdata@data 0002         __size_of_I2CNACK 000A                _vfpfcnvrt 0BA2  
           Lcd_Init@data 0005         __size_of_I2Cdata 0010         __size_of_I2Cidle 001A  
       __size_of_I2Cinit 0062         __size_of_I2Cread 000A         __size_of_I2Cstop 0008  
              main@datos 00A4               _DS1307read 1232             Lcd_Out2@data 000A  
               _Lcd_Init 1046                 _Lcd_Out2 12F4              I2Cinit@FCPU 000E  
       __size_of_Lcd_Cmd 011E                 __Hrparam 0000               vfprintf@ap 004B  
               __Lrparam 0000               vfprintf@fp 0049         __size_of___aodiv 0148  
       __size_of___aomod 0124         __size_of___lbdiv 003A         __size_of___lbmod 002A  
       __size_of___lldiv 0082               ?_vfpfcnvrt 003E          ___aodiv@divisor 0009  
        ___aodiv@counter 0011               sprintf@fmt 004E           Lcd_Chr_CP@data 0003  
               __ptext10 1692                 __ptext11 0CE0                 __ptext20 1740  
               __ptext12 0A5A                 __ptext21 16F4                 __ptext13 12F4  
               __ptext30 1794                 __ptext22 1622                 __ptext14 0E04  
               __ptext31 17E8                 __ptext23 1232                 __ptext15 1046  
               __ptext32 17F2                 __ptext24 17FC                 __ptext16 0F28  
               __ptext33 17AC                 __ptext25 17D2                 __ptext17 157A  
               __ptext26 177A                 __ptext18 1392                 __ptext27 1804  
               __ptext19 1512                 __ptext28 17DE                 __ptext29 17C2  
       __size_of_sprintf 0036           I2Cdata@address 0003              Lcd_Cmd@data 0003  
          __size_of_main 00DA            __size_of_dtoa 022E           DS1307read@data 0004  
               _vfprintf 15DC                 main@date 0086                 main@time 009A  
       ___aomod@dividend 0001              ?_DS1307read 0004                sprintf@ap 0057  
       ___lldiv@dividend 0001               _OSCCONbits 000FD3          ___aomod@divisor 0009  
            ??_vfpfcnvrt 0041          ___aomod@counter 0011                 sprintf@f 0058  
               sprintf@s 004D         ___lldiv@quotient 0009              _SSPCON1bits 000FC6  
            _SSPCON2bits 000FC5             ___aodiv@sign 0012   __size_of_DS1307setTime 0068  
           ___aomod@sign 0012      __size_of_DS1307read 00C2  
